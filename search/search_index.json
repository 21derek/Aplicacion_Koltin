{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Jetpack Compose App Template  <p>Qatar University Machine Learning Group <p></p>"},{"location":"app/","title":"Index","text":"<p>//app</p>"},{"location":"app/#app","title":"app","text":""},{"location":"app/#packages","title":"Packages","text":"Name dev.atick.compose dev.atick.compose.data.home dev.atick.compose.di.notification dev.atick.compose.di.repository dev.atick.compose.repository.home dev.atick.compose.ui dev.atick.compose.ui.home dev.atick.compose.ui.home.components dev.atick.compose.ui.home.state"},{"location":"app/app/dev.atick.compose/","title":"Index","text":"<p>//app/dev.atick.compose</p>"},{"location":"app/app/dev.atick.compose/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"app/app/dev.atick.compose/#types","title":"Types","text":"Name Summary App [androidJvm]class App : ApplicationThe main application class that extends Application and is annotated with HiltAndroidApp."},{"location":"app/app/dev.atick.compose/-app/","title":"Index","text":"<p>//app/dev.atick.compose/App</p>"},{"location":"app/app/dev.atick.compose/-app/#app","title":"App","text":"<p>[androidJvm]\\ class App : Application</p> <p>The main application class that extends Application and is annotated with HiltAndroidApp.</p>"},{"location":"app/app/dev.atick.compose/-app/#constructors","title":"Constructors","text":"App [androidJvm]constructor()"},{"location":"app/app/dev.atick.compose/-app/#functions","title":"Functions","text":"Name Summary bindIsolatedService [androidJvm]open override fun bindIsolatedService(p0: Intent, p1: Int, p2: String, p3: Executor, p4: ServiceConnection): Boolean bindService [androidJvm]open override fun bindService(p0: Intent, p1: ServiceConnection, p2: Int): Booleanopen override fun bindService(p0: Intent, p1: Int, p2: Executor, p3: ServiceConnection): Boolean bindServiceAsUser [androidJvm]open override fun bindServiceAsUser(p0: Intent, p1: ServiceConnection, p2: Int, p3: UserHandle): Boolean checkCallingOrSelfPermission [androidJvm]open override fun checkCallingOrSelfPermission(p0: String): Int checkCallingOrSelfUriPermission [androidJvm]open override fun checkCallingOrSelfUriPermission(p0: Uri, p1: Int): Int checkCallingOrSelfUriPermissions [androidJvm]open override fun checkCallingOrSelfUriPermissions(p0: MutableList&lt;Uri&gt;, p1: Int): IntArray checkCallingPermission [androidJvm]open override fun checkCallingPermission(p0: String): Int checkCallingUriPermission [androidJvm]open override fun checkCallingUriPermission(p0: Uri, p1: Int): Int checkCallingUriPermissions [androidJvm]open override fun checkCallingUriPermissions(p0: MutableList&lt;Uri&gt;, p1: Int): IntArray checkPermission [androidJvm]open override fun checkPermission(p0: String, p1: Int, p2: Int): Int checkSelfPermission [androidJvm]open override fun checkSelfPermission(p0: String): Int checkUriPermission [androidJvm]open override fun checkUriPermission(p0: Uri, p1: Int, p2: Int, p3: Int): Intopen override fun checkUriPermission(p0: Uri?, p1: String?, p2: String?, p3: Int, p4: Int, p5: Int): Int checkUriPermissions [androidJvm]open override fun checkUriPermissions(p0: MutableList&lt;Uri&gt;, p1: Int, p2: Int, p3: Int): IntArray clearWallpaper [androidJvm]open override fun ~~clearWallpaper~~() createAttributionContext [androidJvm]open override fun createAttributionContext(p0: String?): Context createConfigurationContext [androidJvm]open override fun createConfigurationContext(p0: Configuration): Context createContext [androidJvm]open override fun createContext(p0: ContextParams): Context createContextForSplit [androidJvm]open override fun createContextForSplit(p0: String): Context createDeviceProtectedStorageContext [androidJvm]open override fun createDeviceProtectedStorageContext(): Context createDisplayContext [androidJvm]open override fun createDisplayContext(p0: Display): Context createPackageContext [androidJvm]open override fun createPackageContext(p0: String, p1: Int): Context createWindowContext [androidJvm]open override fun createWindowContext(p0: Int, p1: Bundle?): Contextopen override fun createWindowContext(p0: Display, p1: Int, p2: Bundle?): Context databaseList [androidJvm]open override fun databaseList(): Array&lt;String&gt; deleteDatabase [androidJvm]open override fun deleteDatabase(p0: String): Boolean deleteFile [androidJvm]open override fun deleteFile(p0: String): Boolean deleteSharedPreferences [androidJvm]open override fun deleteSharedPreferences(p0: String): Boolean enforceCallingOrSelfPermission [androidJvm]open override fun enforceCallingOrSelfPermission(p0: String, p1: String?) enforceCallingOrSelfUriPermission [androidJvm]open override fun enforceCallingOrSelfUriPermission(p0: Uri, p1: Int, p2: String) enforceCallingPermission [androidJvm]open override fun enforceCallingPermission(p0: String, p1: String?) enforceCallingUriPermission [androidJvm]open override fun enforceCallingUriPermission(p0: Uri, p1: Int, p2: String) enforcePermission [androidJvm]open override fun enforcePermission(p0: String, p1: Int, p2: Int, p3: String?) enforceUriPermission [androidJvm]open override fun enforceUriPermission(p0: Uri, p1: Int, p2: Int, p3: Int, p4: String)open override fun enforceUriPermission(p0: Uri?, p1: String?, p2: String?, p3: Int, p4: Int, p5: Int, p6: String?) fileList [androidJvm]open override fun fileList(): Array&lt;String&gt; getApplicationContext [androidJvm]open override fun getApplicationContext(): Context getApplicationInfo [androidJvm]open override fun getApplicationInfo(): ApplicationInfo getAssets [androidJvm]open override fun getAssets(): AssetManager getAttributionSource [androidJvm]open override fun getAttributionSource(): AttributionSource getAttributionTag [androidJvm]open override fun getAttributionTag(): String? getBaseContext [androidJvm]open fun getBaseContext(): Context getCacheDir [androidJvm]open override fun getCacheDir(): File getClassLoader [androidJvm]open override fun getClassLoader(): ClassLoader getCodeCacheDir [androidJvm]open override fun getCodeCacheDir(): File getColor [androidJvm]fun getColor(p0: Int): Int getColorStateList [androidJvm]fun getColorStateList(p0: Int): ColorStateList getContentResolver [androidJvm]open override fun getContentResolver(): ContentResolver getDatabasePath [androidJvm]open override fun getDatabasePath(p0: String): File getDataDir [androidJvm]open override fun getDataDir(): File getDir [androidJvm]open override fun getDir(p0: String, p1: Int): File getDisplay [androidJvm]open override fun getDisplay(): Display? getDrawable [androidJvm]fun getDrawable(p0: Int): Drawable? getExternalCacheDir [androidJvm]open override fun getExternalCacheDir(): File? getExternalCacheDirs [androidJvm]open override fun getExternalCacheDirs(): Array&lt;File&gt; getExternalFilesDir [androidJvm]open override fun getExternalFilesDir(p0: String?): File? getExternalFilesDirs [androidJvm]open override fun getExternalFilesDirs(p0: String): Array&lt;File&gt; getExternalMediaDirs [androidJvm]open override fun getExternalMediaDirs(): Array&lt;File&gt; getFilesDir [androidJvm]open override fun getFilesDir(): File getFileStreamPath [androidJvm]open override fun getFileStreamPath(p0: String): File getMainExecutor [androidJvm]open override fun getMainExecutor(): Executor getMainLooper [androidJvm]open override fun getMainLooper(): Looper getNoBackupFilesDir [androidJvm]open override fun getNoBackupFilesDir(): File getObbDir [androidJvm]open override fun getObbDir(): File getObbDirs [androidJvm]open override fun getObbDirs(): Array&lt;File&gt; getOpPackageName [androidJvm]open override fun getOpPackageName(): String getPackageCodePath [androidJvm]open override fun getPackageCodePath(): String getPackageManager [androidJvm]open override fun getPackageManager(): PackageManager getPackageName [androidJvm]open override fun getPackageName(): String getPackageResourcePath [androidJvm]open override fun getPackageResourcePath(): String getParams [androidJvm]open override fun getParams(): ContextParams? getResources [androidJvm]open override fun getResources(): Resources getSharedPreferences [androidJvm]open override fun getSharedPreferences(p0: String, p1: Int): SharedPreferences getString [androidJvm]fun getString(p0: Int): Stringfun getString(p0: Int, vararg p1: Any): String getSystemService [androidJvm]fun &lt;T : Any&gt; getSystemService(p0: Class&lt;T&gt;): Topen override fun getSystemService(p0: String): Any getSystemServiceName [androidJvm]open override fun getSystemServiceName(p0: Class&lt;*&gt;): String? getText [androidJvm]fun getText(p0: Int): CharSequence getTheme [androidJvm]open override fun getTheme(): Resources.Theme getWallpaper [androidJvm]open override fun ~~getWallpaper~~(): Drawable getWallpaperDesiredMinimumHeight [androidJvm]open override fun ~~getWallpaperDesiredMinimumHeight~~(): Int getWallpaperDesiredMinimumWidth [androidJvm]open override fun ~~getWallpaperDesiredMinimumWidth~~(): Int grantUriPermission [androidJvm]open override fun grantUriPermission(p0: String, p1: Uri, p2: Int) isDeviceProtectedStorage [androidJvm]open override fun isDeviceProtectedStorage(): Boolean isRestricted [androidJvm]open override fun isRestricted(): Boolean isUiContext [androidJvm]open override fun isUiContext(): Boolean moveDatabaseFrom [androidJvm]open override fun moveDatabaseFrom(p0: Context, p1: String): Boolean moveSharedPreferencesFrom [androidJvm]open override fun moveSharedPreferencesFrom(p0: Context, p1: String): Boolean obtainStyledAttributes [androidJvm]fun obtainStyledAttributes(p0: IntArray): TypedArrayfun obtainStyledAttributes(p0: AttributeSet?, p1: IntArray): TypedArrayfun obtainStyledAttributes(p0: Int, p1: IntArray): TypedArrayfun obtainStyledAttributes(p0: AttributeSet?, p1: IntArray, p2: Int, p3: Int): TypedArray onConfigurationChanged [androidJvm]open override fun onConfigurationChanged(p0: Configuration) onCreate [androidJvm]open override fun onCreate()Called when the application is first created. Performs initialization tasks, such as setting up Timber logging in debug mode. onLowMemory [androidJvm]open override fun onLowMemory() onTerminate [androidJvm]open fun onTerminate() onTrimMemory [androidJvm]open override fun onTrimMemory(p0: Int) openFileInput [androidJvm]open override fun openFileInput(p0: String): FileInputStream openFileOutput [androidJvm]open override fun openFileOutput(p0: String, p1: Int): FileOutputStream openOrCreateDatabase [androidJvm]open override fun openOrCreateDatabase(p0: String, p1: Int, p2: SQLiteDatabase.CursorFactory): SQLiteDatabaseopen override fun openOrCreateDatabase(p0: String, p1: Int, p2: SQLiteDatabase.CursorFactory, p3: DatabaseErrorHandler?): SQLiteDatabase peekWallpaper [androidJvm]open override fun ~~peekWallpaper~~(): Drawable registerActivityLifecycleCallbacks [androidJvm]open fun registerActivityLifecycleCallbacks(p0: Application.ActivityLifecycleCallbacks) registerComponentCallbacks [androidJvm]open override fun registerComponentCallbacks(p0: ComponentCallbacks) registerOnProvideAssistDataListener [androidJvm]open fun registerOnProvideAssistDataListener(p0: Application.OnProvideAssistDataListener) registerReceiver [androidJvm]open override fun registerReceiver(p0: BroadcastReceiver?, p1: IntentFilter): Intent?open override fun registerReceiver(p0: BroadcastReceiver?, p1: IntentFilter, p2: Int): Intent?open override fun registerReceiver(p0: BroadcastReceiver?, p1: IntentFilter, p2: String?, p3: Handler?): Intent?open override fun registerReceiver(p0: BroadcastReceiver?, p1: IntentFilter, p2: String?, p3: Handler?, p4: Int): Intent? removeStickyBroadcast [androidJvm]open override fun ~~removeStickyBroadcast~~(p0: Intent) removeStickyBroadcastAsUser [androidJvm]open override fun ~~removeStickyBroadcastAsUser~~(p0: Intent, p1: UserHandle) revokeSelfPermissionOnKill [androidJvm]open fun revokeSelfPermissionOnKill(p0: String) revokeSelfPermissionsOnKill [androidJvm]open override fun revokeSelfPermissionsOnKill(p0: MutableCollection&lt;String&gt;) revokeUriPermission [androidJvm]open override fun revokeUriPermission(p0: Uri, p1: Int)open override fun revokeUriPermission(p0: String, p1: Uri, p2: Int) sendBroadcast [androidJvm]open override fun sendBroadcast(p0: Intent)open override fun sendBroadcast(p0: Intent, p1: String?) sendBroadcastAsUser [androidJvm]open override fun sendBroadcastAsUser(p0: Intent, p1: UserHandle)open override fun sendBroadcastAsUser(p0: Intent, p1: UserHandle, p2: String?) sendBroadcastWithMultiplePermissions [androidJvm]open fun sendBroadcastWithMultiplePermissions(p0: Intent, p1: Array&lt;String&gt;) sendOrderedBroadcast [androidJvm]open override fun sendOrderedBroadcast(p0: Intent, p1: String?)open override fun sendOrderedBroadcast(p0: Intent, p1: String?, p2: BroadcastReceiver?, p3: Handler?, p4: Int, p5: String?, p6: Bundle?)open override fun sendOrderedBroadcast(p0: Intent, p1: String?, p2: String?, p3: BroadcastReceiver?, p4: Handler?, p5: Int, p6: String?, p7: Bundle?)open fun sendOrderedBroadcast(p0: Intent, p1: Int, p2: String?, p3: String?, p4: BroadcastReceiver?, p5: Handler?, p6: String?, p7: Bundle?, p8: Bundle?) sendOrderedBroadcastAsUser [androidJvm]open override fun sendOrderedBroadcastAsUser(p0: Intent, p1: UserHandle, p2: String?, p3: BroadcastReceiver?, p4: Handler?, p5: Int, p6: String?, p7: Bundle?) sendStickyBroadcast [androidJvm]open override fun ~~sendStickyBroadcast~~(p0: Intent)open override fun ~~sendStickyBroadcast~~(p0: Intent, p1: Bundle?) sendStickyBroadcastAsUser [androidJvm]open override fun ~~sendStickyBroadcastAsUser~~(p0: Intent, p1: UserHandle) sendStickyOrderedBroadcast [androidJvm]open override fun ~~sendStickyOrderedBroadcast~~(p0: Intent, p1: BroadcastReceiver?, p2: Handler?, p3: Int, p4: String?, p5: Bundle?) sendStickyOrderedBroadcastAsUser [androidJvm]open override fun ~~sendStickyOrderedBroadcastAsUser~~(p0: Intent, p1: UserHandle, p2: BroadcastReceiver?, p3: Handler?, p4: Int, p5: String?, p6: Bundle?) setTheme [androidJvm]open override fun setTheme(p0: Int) setWallpaper [androidJvm]open override fun ~~setWallpaper~~(p0: Bitmap)open override fun ~~setWallpaper~~(p0: InputStream) startActivities [androidJvm]open override fun startActivities(p0: Array&lt;Intent&gt;)open override fun startActivities(p0: Array&lt;Intent&gt;, p1: Bundle?) startActivity [androidJvm]open override fun startActivity(p0: Intent)open override fun startActivity(p0: Intent, p1: Bundle?) startForegroundService [androidJvm]open override fun startForegroundService(p0: Intent): ComponentName? startInstrumentation [androidJvm]open override fun startInstrumentation(p0: ComponentName, p1: String?, p2: Bundle?): Boolean startIntentSender [androidJvm]open override fun startIntentSender(p0: IntentSender, p1: Intent?, p2: Int, p3: Int, p4: Int)open override fun startIntentSender(p0: IntentSender, p1: Intent?, p2: Int, p3: Int, p4: Int, p5: Bundle?) startService [androidJvm]open override fun startService(p0: Intent): ComponentName? stopService [androidJvm]open override fun stopService(p0: Intent): Boolean unbindService [androidJvm]open override fun unbindService(p0: ServiceConnection) unregisterActivityLifecycleCallbacks [androidJvm]open fun unregisterActivityLifecycleCallbacks(p0: Application.ActivityLifecycleCallbacks) unregisterComponentCallbacks [androidJvm]open override fun unregisterComponentCallbacks(p0: ComponentCallbacks) unregisterOnProvideAssistDataListener [androidJvm]open fun unregisterOnProvideAssistDataListener(p0: Application.OnProvideAssistDataListener) unregisterReceiver [androidJvm]open override fun unregisterReceiver(p0: BroadcastReceiver) updateServiceGroup [androidJvm]open override fun updateServiceGroup(p0: ServiceConnection, p1: Int, p2: Int)"},{"location":"app/app/dev.atick.compose/-app/-app/","title":"app","text":"<p>//app/dev.atick.compose/App/App</p>"},{"location":"app/app/dev.atick.compose/-app/-app/#app","title":"App","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"app/app/dev.atick.compose/-app/on-create/","title":"On create","text":"<p>//app/dev.atick.compose/App/onCreate</p>"},{"location":"app/app/dev.atick.compose/-app/on-create/#oncreate","title":"onCreate","text":"<p>[androidJvm]\\ open override fun onCreate()</p> <p>Called when the application is first created. Performs initialization tasks, such as setting up Timber logging in debug mode.</p>"},{"location":"app/app/dev.atick.compose.data.home/","title":"Index","text":"<p>//app/dev.atick.compose.data.home</p>"},{"location":"app/app/dev.atick.compose.data.home/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"app/app/dev.atick.compose.data.home/#types","title":"Types","text":"Name Summary Item [androidJvm]data class Item(val id: Int, val title: String)Data class representing an item."},{"location":"app/app/dev.atick.compose.data.home/-item/","title":"Index","text":"<p>//app/dev.atick.compose.data.home/Item</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/#item","title":"Item","text":"<p>[androidJvm]\\ data class Item(val id: Int, val title: String)</p> <p>Data class representing an item.</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/#constructors","title":"Constructors","text":"Item [androidJvm]constructor(id: Int, title: String)"},{"location":"app/app/dev.atick.compose.data.home/-item/#properties","title":"Properties","text":"Name Summary id [androidJvm]val id: IntThe ID of the item. title [androidJvm]val title: StringThe title of the item."},{"location":"app/app/dev.atick.compose.data.home/-item/#functions","title":"Functions","text":"Name Summary toRoomItem [androidJvm]fun toRoomItem(): ItemConverts the item to a Item."},{"location":"app/app/dev.atick.compose.data.home/-item/-item/","title":"item","text":"<p>//app/dev.atick.compose.data.home/Item/Item</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/-item/#item","title":"Item","text":"<p>[androidJvm]\\ constructor(id: Int, title: String)</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/id/","title":"Id","text":"<p>//app/dev.atick.compose.data.home/Item/id</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/id/#id","title":"id","text":"<p>[androidJvm]\\ val id: Int</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/title/","title":"Title","text":"<p>//app/dev.atick.compose.data.home/Item/title</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/title/#title","title":"title","text":"<p>[androidJvm]\\ val title: String</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/to-room-item/","title":"To room item","text":"<p>//app/dev.atick.compose.data.home/Item/toRoomItem</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/to-room-item/#toroomitem","title":"toRoomItem","text":"<p>[androidJvm]\\ fun toRoomItem(): Item</p> <p>Converts the item to a Item.</p>"},{"location":"app/app/dev.atick.compose.data.home/-item/to-room-item/#return","title":"Return","text":"<p>The converted Item instance.</p>"},{"location":"app/app/dev.atick.compose.di.notification/","title":"Index","text":"<p>//app/dev.atick.compose.di.notification</p>"},{"location":"app/app/dev.atick.compose.di.notification/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"app/app/dev.atick.compose.di.notification/#types","title":"Types","text":"Name Summary NotificationModule [androidJvm]@Moduleobject NotificationModuleDagger module that provides the NotificationManager instance as a dependency for the application."},{"location":"app/app/dev.atick.compose.di.notification/-notification-module/","title":"Index","text":"<p>//app/dev.atick.compose.di.notification/NotificationModule</p>"},{"location":"app/app/dev.atick.compose.di.notification/-notification-module/#notificationmodule","title":"NotificationModule","text":"<p>[androidJvm]\\ @Module</p> <p>object NotificationModule</p> <p>Dagger module that provides the NotificationManager instance as a dependency for the application.</p>"},{"location":"app/app/dev.atick.compose.di.notification/-notification-module/#functions","title":"Functions","text":"Name Summary provideNotificationManager [androidJvm]@Provides@Singletonfun provideNotificationManager(context: Context): NotificationManagerProvides a singleton instance of NotificationManager using the application Context."},{"location":"app/app/dev.atick.compose.di.notification/-notification-module/provide-notification-manager/","title":"Provide notification manager","text":"<p>//app/dev.atick.compose.di.notification/NotificationModule/provideNotificationManager</p>"},{"location":"app/app/dev.atick.compose.di.notification/-notification-module/provide-notification-manager/#providenotificationmanager","title":"provideNotificationManager","text":"<p>[androidJvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideNotificationManager(context: Context): NotificationManager</p> <p>Provides a singleton instance of NotificationManager using the application Context.</p>"},{"location":"app/app/dev.atick.compose.di.notification/-notification-module/provide-notification-manager/#return","title":"Return","text":"<p>The singleton NotificationManager instance.</p>"},{"location":"app/app/dev.atick.compose.di.notification/-notification-module/provide-notification-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> context The application Context provided by Dagger through dependency injection."},{"location":"app/app/dev.atick.compose.di.notification/-notification-module/provide-notification-manager/#see-also","title":"See also","text":"Context.getSystemService"},{"location":"app/app/dev.atick.compose.di.notification/-notification-module/provide-notification-manager/#throws","title":"Throws","text":"ClassCastException If the NOTIFICATION_SERVICE retrieved from the Context is not an instance of NotificationManager."},{"location":"app/app/dev.atick.compose.di.repository/","title":"Index","text":"<p>//app/dev.atick.compose.di.repository</p>"},{"location":"app/app/dev.atick.compose.di.repository/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"app/app/dev.atick.compose.di.repository/#types","title":"Types","text":"Name Summary RepositoryModule [androidJvm]@Moduleabstract class RepositoryModuleDagger module that provides the binding for the HomeRepository interface."},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/","title":"Index","text":"<p>//app/dev.atick.compose.di.repository/RepositoryModule</p>"},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/#repositorymodule","title":"RepositoryModule","text":"<p>[androidJvm]\\ @Module</p> <p>abstract class RepositoryModule</p> <p>Dagger module that provides the binding for the HomeRepository interface.</p>"},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/#constructors","title":"Constructors","text":"RepositoryModule [androidJvm]constructor()"},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/#functions","title":"Functions","text":"Name Summary bindHomeRepository [androidJvm]@Binds@Singletonabstract fun bindHomeRepository(homeRepositoryImpl: HomeRepositoryImpl): HomeRepositoryBinds the HomeRepositoryImpl implementation to the HomeRepository interface."},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/-repository-module/","title":"repository module","text":"<p>//app/dev.atick.compose.di.repository/RepositoryModule/RepositoryModule</p>"},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/-repository-module/#repositorymodule","title":"RepositoryModule","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/bind-home-repository/","title":"Bind home repository","text":"<p>//app/dev.atick.compose.di.repository/RepositoryModule/bindHomeRepository</p>"},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/bind-home-repository/#bindhomerepository","title":"bindHomeRepository","text":"<p>[androidJvm]\\</p> <p>@Binds</p> <p>@Singleton</p> <p>abstract fun bindHomeRepository(homeRepositoryImpl: HomeRepositoryImpl): HomeRepository</p> <p>Binds the HomeRepositoryImpl implementation to the HomeRepository interface.</p>"},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/bind-home-repository/#return","title":"Return","text":"<p>The HomeRepository interface.</p>"},{"location":"app/app/dev.atick.compose.di.repository/-repository-module/bind-home-repository/#parameters","title":"Parameters","text":"<p>androidJvm</p> homeRepositoryImpl The implementation of HomeRepository to be bound."},{"location":"app/app/dev.atick.compose.repository.home/","title":"Index","text":"<p>//app/dev.atick.compose.repository.home</p>"},{"location":"app/app/dev.atick.compose.repository.home/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"app/app/dev.atick.compose.repository.home/#types","title":"Types","text":"Name Summary HomeRepository [androidJvm]interface HomeRepositoryInterface defining operations for interacting with the home repository. HomeRepositoryImpl [androidJvm]class HomeRepositoryImpl@Injectconstructor(jetpackDao: JetpackDao, jetpackDataSource: JetpackDataSource, preferencesDatastore: PreferencesDatastore) : HomeRepository"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/","title":"Index","text":"<p>//app/dev.atick.compose.repository.home/HomeRepository</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/#homerepository","title":"HomeRepository","text":"<p>interface HomeRepository</p> <p>Interface defining operations for interacting with the home repository.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/#inheritors","title":"Inheritors","text":"HomeRepositoryImpl"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/#functions","title":"Functions","text":"Name Summary getItem [androidJvm]abstract suspend fun getItem(id: Int): Result&lt;Item&gt;Retrieves an item with the specified ID. getUserId [androidJvm]abstract suspend fun getUserId(): Result&lt;String&gt;Retrieves the user ID. saveItem [androidJvm]abstract suspend fun saveItem(item: Item)Saves an item to the repository."},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/get-item/","title":"Get item","text":"<p>//app/dev.atick.compose.repository.home/HomeRepository/getItem</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/get-item/#getitem","title":"getItem","text":"<p>[androidJvm]\\ abstract suspend fun getItem(id: Int): Result&lt;Item&gt;</p> <p>Retrieves an item with the specified ID.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/get-item/#return","title":"Return","text":"<p>A Result object representing the result of the operation.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/get-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The ID of the item to retrieve."},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/get-user-id/","title":"Get user id","text":"<p>//app/dev.atick.compose.repository.home/HomeRepository/getUserId</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/get-user-id/#getuserid","title":"getUserId","text":"<p>[androidJvm]\\ abstract suspend fun getUserId(): Result&lt;String&gt;</p> <p>Retrieves the user ID.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/get-user-id/#return","title":"Return","text":"<p>A Result object representing the result of the operation.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/save-item/","title":"Save item","text":"<p>//app/dev.atick.compose.repository.home/HomeRepository/saveItem</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/save-item/#saveitem","title":"saveItem","text":"<p>[androidJvm]\\ abstract suspend fun saveItem(item: Item)</p> <p>Saves an item to the repository.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository/save-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> item The item to save."},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/","title":"Index","text":"<p>//app/dev.atick.compose.repository.home/HomeRepositoryImpl</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/#homerepositoryimpl","title":"HomeRepositoryImpl","text":"<p>[androidJvm]\\ class HomeRepositoryImpl@Injectconstructor(jetpackDao: JetpackDao, jetpackDataSource: JetpackDataSource, preferencesDatastore: PreferencesDatastore) : HomeRepository</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/#constructors","title":"Constructors","text":"HomeRepositoryImpl [androidJvm]@Injectconstructor(jetpackDao: JetpackDao, jetpackDataSource: JetpackDataSource, preferencesDatastore: PreferencesDatastore)"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/#functions","title":"Functions","text":"Name Summary getItem [androidJvm]open suspend override fun getItem(id: Int): Result&lt;Item&gt;Retrieves an item with the specified ID. getUserId [androidJvm]open suspend override fun getUserId(): Result&lt;String&gt;Retrieves the user ID. saveItem [androidJvm]open suspend override fun saveItem(item: Item)Saves an item to the repository."},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/-home-repository-impl/","title":"home repository impl","text":"<p>//app/dev.atick.compose.repository.home/HomeRepositoryImpl/HomeRepositoryImpl</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/-home-repository-impl/#homerepositoryimpl","title":"HomeRepositoryImpl","text":"<p>[androidJvm]\\</p> <p>@Inject</p> <p>constructor(jetpackDao: JetpackDao, jetpackDataSource: JetpackDataSource, preferencesDatastore: PreferencesDatastore)</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/get-item/","title":"Get item","text":"<p>//app/dev.atick.compose.repository.home/HomeRepositoryImpl/getItem</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/get-item/#getitem","title":"getItem","text":"<p>[androidJvm]\\ open suspend override fun getItem(id: Int): Result&lt;Item&gt;</p> <p>Retrieves an item with the specified ID.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/get-item/#return","title":"Return","text":"<p>A Result object representing the result of the operation.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/get-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The ID of the item to retrieve."},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/get-user-id/","title":"Get user id","text":"<p>//app/dev.atick.compose.repository.home/HomeRepositoryImpl/getUserId</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/get-user-id/#getuserid","title":"getUserId","text":"<p>[androidJvm]\\ open suspend override fun getUserId(): Result&lt;String&gt;</p> <p>Retrieves the user ID.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/get-user-id/#return","title":"Return","text":"<p>A Result object representing the result of the operation.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/save-item/","title":"Save item","text":"<p>//app/dev.atick.compose.repository.home/HomeRepositoryImpl/saveItem</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/save-item/#saveitem","title":"saveItem","text":"<p>[androidJvm]\\ open suspend override fun saveItem(item: Item)</p> <p>Saves an item to the repository.</p>"},{"location":"app/app/dev.atick.compose.repository.home/-home-repository-impl/save-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> item The item to save."},{"location":"app/app/dev.atick.compose.ui/","title":"Index","text":"<p>//app/dev.atick.compose.ui</p>"},{"location":"app/app/dev.atick.compose.ui/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"app/app/dev.atick.compose.ui/#types","title":"Types","text":"Name Summary MainActivity [androidJvm]class MainActivity : AppCompatActivityMain activity for the application."},{"location":"app/app/dev.atick.compose.ui/-main-activity/","title":"Index","text":"<p>//app/dev.atick.compose.ui/MainActivity</p>"},{"location":"app/app/dev.atick.compose.ui/-main-activity/#mainactivity","title":"MainActivity","text":"<p>[androidJvm]\\ class MainActivity : AppCompatActivity</p> <p>Main activity for the application.</p>"},{"location":"app/app/dev.atick.compose.ui/-main-activity/#constructors","title":"Constructors","text":"MainActivity [androidJvm]constructor()"},{"location":"app/app/dev.atick.compose.ui/-main-activity/#properties","title":"Properties","text":"Name Summary activityResultRegistry [androidJvm]@get:NonNulloverride val activityResultRegistry: ActivityResultRegistry bluetoothUtils [androidJvm]@Injectlateinit var bluetoothUtils: BluetoothUtils defaultViewModelCreationExtras [androidJvm]@get:NonNull@get:CallSuperopen override val defaultViewModelCreationExtras: CreationExtras defaultViewModelProviderFactory [androidJvm]@get:NonNullopen override val defaultViewModelProviderFactory: ViewModelProvider.Factory fullyDrawnReporter [androidJvm]@get:NonNullopen override val fullyDrawnReporter: FullyDrawnReporter lifecycle [androidJvm]@get:NonNullopen override val lifecycle: Lifecycle onBackPressedDispatcher [androidJvm]@get:NonNulloverride val onBackPressedDispatcher: OnBackPressedDispatcher savedStateRegistry [androidJvm]@get:NonNulloverride val savedStateRegistry: SavedStateRegistry viewModelStore [androidJvm]@get:NonNullopen override val viewModelStore: ViewModelStore"},{"location":"app/app/dev.atick.compose.ui/-main-activity/#functions","title":"Functions","text":"Name Summary addContentView [androidJvm]open override fun addContentView(p0: View, p1: ViewGroup.LayoutParams) addMenuProvider [androidJvm]open override fun addMenuProvider(@NonNullp0: MenuProvider)open override fun addMenuProvider(@NonNullp0: MenuProvider, @NonNullp1: LifecycleOwner)open override fun addMenuProvider(@NonNullp0: MenuProvider, @NonNullp1: LifecycleOwner, @NonNullp2: Lifecycle.State) addOnConfigurationChangedListener [androidJvm]override fun addOnConfigurationChangedListener(@NonNullp0: Consumer&lt;Configuration&gt;) addOnContextAvailableListener [androidJvm]override fun addOnContextAvailableListener(@NonNulllistener: OnContextAvailableListener) addOnMultiWindowModeChangedListener [androidJvm]override fun addOnMultiWindowModeChangedListener(@NonNullp0: Consumer&lt;MultiWindowModeChangedInfo&gt;) addOnNewIntentListener [androidJvm]override fun addOnNewIntentListener(@NonNullp0: Consumer&lt;Intent&gt;) addOnPictureInPictureModeChangedListener [androidJvm]override fun addOnPictureInPictureModeChangedListener(@NonNullp0: Consumer&lt;PictureInPictureModeChangedInfo&gt;) addOnTrimMemoryListener [androidJvm]override fun addOnTrimMemoryListener(@NonNullp0: Consumer&lt;Int&gt;) applyOverrideConfiguration [androidJvm]open fun applyOverrideConfiguration(p0: Configuration) bindIsolatedService [androidJvm]open override fun bindIsolatedService(p0: Intent, p1: Int, p2: String, p3: Executor, p4: ServiceConnection): Boolean bindService [androidJvm]open override fun bindService(p0: Intent, p1: ServiceConnection, p2: Int): Booleanopen override fun bindService(p0: Intent, p1: Int, p2: Executor, p3: ServiceConnection): Boolean bindServiceAsUser [androidJvm]open override fun bindServiceAsUser(p0: Intent, p1: ServiceConnection, p2: Int, p3: UserHandle): Boolean checkCallingOrSelfPermission [androidJvm]open override fun checkCallingOrSelfPermission(p0: String): Int checkCallingOrSelfUriPermission [androidJvm]open override fun checkCallingOrSelfUriPermission(p0: Uri, p1: Int): Int checkCallingOrSelfUriPermissions [androidJvm]open override fun checkCallingOrSelfUriPermissions(p0: MutableList&lt;Uri&gt;, p1: Int): IntArray checkCallingPermission [androidJvm]open override fun checkCallingPermission(p0: String): Int checkCallingUriPermission [androidJvm]open override fun checkCallingUriPermission(p0: Uri, p1: Int): Int checkCallingUriPermissions [androidJvm]open override fun checkCallingUriPermissions(p0: MutableList&lt;Uri&gt;, p1: Int): IntArray checkPermission [androidJvm]open override fun checkPermission(p0: String, p1: Int, p2: Int): Int checkSelfPermission [androidJvm]open override fun checkSelfPermission(p0: String): Int checkUriPermission [androidJvm]open override fun checkUriPermission(p0: Uri, p1: Int, p2: Int, p3: Int): Intopen override fun checkUriPermission(p0: Uri?, p1: String?, p2: String?, p3: Int, p4: Int, p5: Int): Int checkUriPermissions [androidJvm]open override fun checkUriPermissions(p0: MutableList&lt;Uri&gt;, p1: Int, p2: Int, p3: Int): IntArray clearWallpaper [androidJvm]open override fun ~~clearWallpaper~~() closeContextMenu [androidJvm]open fun closeContextMenu() closeOptionsMenu [androidJvm]open override fun closeOptionsMenu() createAttributionContext [androidJvm]open override fun createAttributionContext(p0: String?): Context createConfigurationContext [androidJvm]open override fun createConfigurationContext(p0: Configuration): Context createContext [androidJvm]open override fun createContext(p0: ContextParams): Context createContextForSplit [androidJvm]open override fun createContextForSplit(p0: String): Context createDeviceProtectedStorageContext [androidJvm]open override fun createDeviceProtectedStorageContext(): Context createDisplayContext [androidJvm]open override fun createDisplayContext(p0: Display): Context createPackageContext [androidJvm]open override fun createPackageContext(p0: String, p1: Int): Context createPendingResult [androidJvm]open fun createPendingResult(p0: Int, p1: Intent, p2: Int): PendingIntent createWindowContext [androidJvm]open override fun createWindowContext(p0: Int, p1: Bundle?): Contextopen override fun createWindowContext(p0: Display, p1: Int, p2: Bundle?): Context databaseList [androidJvm]open override fun databaseList(): Array&lt;String&gt; deleteDatabase [androidJvm]open override fun deleteDatabase(p0: String): Boolean deleteFile [androidJvm]open override fun deleteFile(p0: String): Boolean deleteSharedPreferences [androidJvm]open override fun deleteSharedPreferences(p0: String): Boolean dismissDialog [androidJvm]fun ~~dismissDialog~~(p0: Int) dismissKeyboardShortcutsHelper [androidJvm]fun dismissKeyboardShortcutsHelper() dispatchGenericMotionEvent [androidJvm]open override fun dispatchGenericMotionEvent(p0: MotionEvent): Boolean dispatchKeyEvent [androidJvm]open override fun dispatchKeyEvent(p0: KeyEvent): Boolean dispatchKeyShortcutEvent [androidJvm]open override fun dispatchKeyShortcutEvent(p0: KeyEvent): Boolean dispatchPopulateAccessibilityEvent [androidJvm]open override fun dispatchPopulateAccessibilityEvent(p0: AccessibilityEvent): Boolean dispatchTouchEvent [androidJvm]open override fun dispatchTouchEvent(p0: MotionEvent): Boolean dispatchTrackballEvent [androidJvm]open override fun dispatchTrackballEvent(p0: MotionEvent): Boolean dump [androidJvm]open override fun dump(@NonNullp0: String, @Nullablep1: FileDescriptor?, @NonNullp2: PrintWriter, @Nullablep3: Array&lt;String&gt;?) enforceCallingOrSelfPermission [androidJvm]open override fun enforceCallingOrSelfPermission(p0: String, p1: String?) enforceCallingOrSelfUriPermission [androidJvm]open override fun enforceCallingOrSelfUriPermission(p0: Uri, p1: Int, p2: String) enforceCallingPermission [androidJvm]open override fun enforceCallingPermission(p0: String, p1: String?) enforceCallingUriPermission [androidJvm]open override fun enforceCallingUriPermission(p0: Uri, p1: Int, p2: String) enforcePermission [androidJvm]open override fun enforcePermission(p0: String, p1: Int, p2: Int, p3: String?) enforceUriPermission [androidJvm]open override fun enforceUriPermission(p0: Uri, p1: Int, p2: Int, p3: Int, p4: String)open override fun enforceUriPermission(p0: Uri?, p1: String?, p2: String?, p3: Int, p4: Int, p5: Int, p6: String?) enterPictureInPictureMode [androidJvm]open fun ~~enterPictureInPictureMode~~()open fun enterPictureInPictureMode(p0: PictureInPictureParams): Boolean fileList [androidJvm]open override fun fileList(): Array&lt;String&gt; findViewById [androidJvm]open override fun &lt;T : View&gt; findViewById(@IdResp0: Int): T finish [androidJvm]open fun finish() finishActivity [androidJvm]open fun finishActivity(p0: Int) finishActivityFromChild [androidJvm]open fun ~~finishActivityFromChild~~(p0: Activity, p1: Int) finishAffinity [androidJvm]open fun finishAffinity() finishAfterTransition [androidJvm]open fun finishAfterTransition() finishAndRemoveTask [androidJvm]open fun finishAndRemoveTask() finishFromChild [androidJvm]open fun ~~finishFromChild~~(p0: Activity) getActionBar [androidJvm]open fun getActionBar(): ActionBar? getApplication [androidJvm]fun getApplication(): Application getApplicationContext [androidJvm]open override fun getApplicationContext(): Context getApplicationInfo [androidJvm]open override fun getApplicationInfo(): ApplicationInfo getAssets [androidJvm]open override fun getAssets(): AssetManager getAttributionSource [androidJvm]open override fun getAttributionSource(): AttributionSource getAttributionTag [androidJvm]open override fun getAttributionTag(): String? getBaseContext [androidJvm]open fun getBaseContext(): Context getCacheDir [androidJvm]open override fun getCacheDir(): File getCallingActivity [androidJvm]open fun getCallingActivity(): ComponentName? getCallingPackage [androidJvm]open fun getCallingPackage(): String? getChangingConfigurations [androidJvm]open fun getChangingConfigurations(): Int getClassLoader [androidJvm]open override fun getClassLoader(): ClassLoader getCodeCacheDir [androidJvm]open override fun getCodeCacheDir(): File getColor [androidJvm]fun getColor(p0: Int): Int getColorStateList [androidJvm]fun getColorStateList(p0: Int): ColorStateList getComponentName [androidJvm]open fun getComponentName(): ComponentName getContentResolver [androidJvm]open override fun getContentResolver(): ContentResolver getContentScene [androidJvm]open fun getContentScene(): Scene getContentTransitionManager [androidJvm]open fun getContentTransitionManager(): TransitionManager getCurrentFocus [androidJvm]open fun getCurrentFocus(): View? getDatabasePath [androidJvm]open override fun getDatabasePath(p0: String): File getDataDir [androidJvm]open override fun getDataDir(): File getDelegate [androidJvm]@NonNullopen fun getDelegate(): AppCompatDelegate getDir [androidJvm]open override fun getDir(p0: String, p1: Int): File getDisplay [androidJvm]open override fun getDisplay(): Display? getDrawable [androidJvm]fun getDrawable(p0: Int): Drawable? getDrawerToggleDelegate [androidJvm]@Nullableopen override fun getDrawerToggleDelegate(): ActionBarDrawerToggle.Delegate? getExternalCacheDir [androidJvm]open override fun getExternalCacheDir(): File? getExternalCacheDirs [androidJvm]open override fun getExternalCacheDirs(): Array&lt;File&gt; getExternalFilesDir [androidJvm]open override fun getExternalFilesDir(p0: String?): File? getExternalFilesDirs [androidJvm]open override fun getExternalFilesDirs(p0: String): Array&lt;File&gt; getExternalMediaDirs [androidJvm]open override fun getExternalMediaDirs(): Array&lt;File&gt; getExtraData [androidJvm]@RestrictTo(value = [RestrictTo.Scope.LIBRARY_GROUP_PREFIX])open fun &lt;T : ComponentActivity.ExtraData&gt; ~~getExtraData~~(p0: Class&lt;T&gt;): T getFilesDir [androidJvm]open override fun getFilesDir(): File getFileStreamPath [androidJvm]open override fun getFileStreamPath(p0: String): File getFragmentManager [androidJvm]open fun ~~getFragmentManager~~(): FragmentManager getIntent [androidJvm]open fun getIntent(): Intent getLastCustomNonConfigurationInstance [androidJvm]@Nullableopen fun ~~getLastCustomNonConfigurationInstance~~(): Any? getLastNonConfigurationInstance [androidJvm]open fun getLastNonConfigurationInstance(): Any? getLayoutInflater [androidJvm]open fun getLayoutInflater(): LayoutInflater getLoaderManager [androidJvm]open fun ~~getLoaderManager~~(): LoaderManager getLocalClassName [androidJvm]open fun getLocalClassName(): String getMainExecutor [androidJvm]open override fun getMainExecutor(): Executor getMainLooper [androidJvm]open override fun getMainLooper(): Looper getMaxNumPictureInPictureActions [androidJvm]open fun getMaxNumPictureInPictureActions(): Int getMediaController [androidJvm]fun getMediaController(): MediaController getMenuInflater [androidJvm]@NonNullopen override fun getMenuInflater(): MenuInflater getNoBackupFilesDir [androidJvm]open override fun getNoBackupFilesDir(): File getObbDir [androidJvm]open override fun getObbDir(): File getObbDirs [androidJvm]open override fun getObbDirs(): Array&lt;File&gt; getOnBackInvokedDispatcher [androidJvm]open fun getOnBackInvokedDispatcher(): OnBackInvokedDispatcher getOpPackageName [androidJvm]open override fun getOpPackageName(): String getPackageCodePath [androidJvm]open override fun getPackageCodePath(): String getPackageManager [androidJvm]open override fun getPackageManager(): PackageManager getPackageName [androidJvm]open override fun getPackageName(): String getPackageResourcePath [androidJvm]open override fun getPackageResourcePath(): String getParams [androidJvm]open override fun getParams(): ContextParams? getParent [androidJvm]fun getParent(): Activity getParentActivityIntent [androidJvm]open fun getParentActivityIntent(): Intent? getPreferences [androidJvm]open fun getPreferences(p0: Int): SharedPreferences getReferrer [androidJvm]open fun getReferrer(): Uri? getRequestedOrientation [androidJvm]open fun getRequestedOrientation(): Int getResources [androidJvm]open override fun getResources(): Resources getSearchEvent [androidJvm]fun getSearchEvent(): SearchEvent getSharedPreferences [androidJvm]open override fun getSharedPreferences(p0: String, p1: Int): SharedPreferences getSplashScreen [androidJvm]fun getSplashScreen(): SplashScreen getString [androidJvm]fun getString(p0: Int): Stringfun getString(p0: Int, vararg p1: Any): String getSupportActionBar [androidJvm]@Nullableopen fun getSupportActionBar(): ActionBar? getSupportFragmentManager [androidJvm]@NonNullopen fun getSupportFragmentManager(): FragmentManager getSupportLoaderManager [androidJvm]@NonNullopen fun ~~getSupportLoaderManager~~(): LoaderManager getSupportParentActivityIntent [androidJvm]@Nullableopen override fun getSupportParentActivityIntent(): Intent? getSystemService [androidJvm]open override fun getSystemService(p0: String): Anyfun &lt;T : Any&gt; getSystemService(p0: Class&lt;T&gt;): T getSystemServiceName [androidJvm]open override fun getSystemServiceName(p0: Class&lt;*&gt;): String? getTaskId [androidJvm]open fun getTaskId(): Int getText [androidJvm]fun getText(p0: Int): CharSequence getTheme [androidJvm]open override fun getTheme(): Resources.Theme getTitle [androidJvm]fun getTitle(): CharSequence getTitleColor [androidJvm]fun getTitleColor(): Int getVoiceInteractor [androidJvm]open fun getVoiceInteractor(): VoiceInteractor getVolumeControlStream [androidJvm]fun getVolumeControlStream(): Int getWallpaper [androidJvm]open override fun ~~getWallpaper~~(): Drawable getWallpaperDesiredMinimumHeight [androidJvm]open override fun ~~getWallpaperDesiredMinimumHeight~~(): Int getWallpaperDesiredMinimumWidth [androidJvm]open override fun ~~getWallpaperDesiredMinimumWidth~~(): Int getWindow [androidJvm]open fun getWindow(): Window getWindowManager [androidJvm]open fun getWindowManager(): WindowManager grantUriPermission [androidJvm]open override fun grantUriPermission(p0: String, p1: Uri, p2: Int) hasWindowFocus [androidJvm]open fun hasWindowFocus(): Boolean invalidateMenu [androidJvm]open override fun invalidateMenu() invalidateOptionsMenu [androidJvm]open override fun invalidateOptionsMenu() isActivityTransitionRunning [androidJvm]open fun isActivityTransitionRunning(): Boolean isChangingConfigurations [androidJvm]open fun isChangingConfigurations(): Boolean isChild [androidJvm]fun isChild(): Boolean isDestroyed [androidJvm]open fun isDestroyed(): Boolean isDeviceProtectedStorage [androidJvm]open override fun isDeviceProtectedStorage(): Boolean isFinishing [androidJvm]open fun isFinishing(): Boolean isImmersive [androidJvm]open fun isImmersive(): Boolean isInMultiWindowMode [androidJvm]open fun isInMultiWindowMode(): Boolean isInPictureInPictureMode [androidJvm]open fun isInPictureInPictureMode(): Boolean isLaunchedFromBubble [androidJvm]open fun isLaunchedFromBubble(): Boolean isLocalVoiceInteractionSupported [androidJvm]open fun isLocalVoiceInteractionSupported(): Boolean isRestricted [androidJvm]open override fun isRestricted(): Boolean isTaskRoot [androidJvm]open fun isTaskRoot(): Boolean isUiContext [androidJvm]open override fun isUiContext(): Boolean isVoiceInteraction [androidJvm]open fun isVoiceInteraction(): Boolean isVoiceInteractionRoot [androidJvm]open fun isVoiceInteractionRoot(): Boolean managedQuery [androidJvm]fun ~~managedQuery~~(p0: Uri, p1: Array&lt;String&gt;, p2: String, p3: Array&lt;String&gt;, p4: String): Cursor moveDatabaseFrom [androidJvm]open override fun moveDatabaseFrom(p0: Context, p1: String): Boolean moveSharedPreferencesFrom [androidJvm]open override fun moveSharedPreferencesFrom(p0: Context, p1: String): Boolean moveTaskToBack [androidJvm]open fun moveTaskToBack(p0: Boolean): Boolean navigateUpTo [androidJvm]open fun navigateUpTo(p0: Intent): Boolean navigateUpToFromChild [androidJvm]open fun ~~navigateUpToFromChild~~(p0: Activity, p1: Intent): Boolean obtainStyledAttributes [androidJvm]fun obtainStyledAttributes(p0: IntArray): TypedArrayfun obtainStyledAttributes(p0: AttributeSet?, p1: IntArray): TypedArrayfun obtainStyledAttributes(p0: Int, p1: IntArray): TypedArrayfun obtainStyledAttributes(p0: AttributeSet?, p1: IntArray, p2: Int, p3: Int): TypedArray onActionModeFinished [androidJvm]open override fun onActionModeFinished(p0: ActionMode) onActionModeStarted [androidJvm]open override fun onActionModeStarted(p0: ActionMode) onActivityReenter [androidJvm]open fun onActivityReenter(p0: Int, p1: Intent) onAttachedToWindow [androidJvm]open override fun onAttachedToWindow() onAttachFragment [androidJvm]open fun ~~onAttachFragment~~(p0: Fragment)@MainThreadopen fun ~~onAttachFragment~~(@NonNullp0: Fragment) onBackPressed [androidJvm]@MainThreadopen override fun onBackPressed() onConfigurationChanged [androidJvm]open override fun onConfigurationChanged(@NonNullp0: Configuration) onContentChanged [androidJvm]open override fun onContentChanged() onContextItemSelected [androidJvm]open fun onContextItemSelected(p0: MenuItem): Boolean onContextMenuClosed [androidJvm]open fun onContextMenuClosed(p0: Menu) onCreate [androidJvm]open fun onCreate(p0: Bundle?, p1: PersistableBundle?) onCreateContextMenu [androidJvm]open override fun onCreateContextMenu(p0: ContextMenu, p1: View, p2: ContextMenu.ContextMenuInfo) onCreateDescription [androidJvm]open fun onCreateDescription(): CharSequence? onCreateNavigateUpTaskStack [androidJvm]open fun onCreateNavigateUpTaskStack(p0: TaskStackBuilder) onCreateOptionsMenu [androidJvm]open fun onCreateOptionsMenu(p0: Menu): Boolean onCreatePanelMenu [androidJvm]open override fun onCreatePanelMenu(p0: Int, @NonNullp1: Menu): Boolean onCreatePanelView [androidJvm]open override fun onCreatePanelView(p0: Int): View? onCreateSupportNavigateUpTaskStack [androidJvm]open fun onCreateSupportNavigateUpTaskStack(@NonNullp0: TaskStackBuilder) onCreateThumbnail [androidJvm]open fun ~~onCreateThumbnail~~(p0: Bitmap, p1: Canvas): Boolean onCreateView [androidJvm]@Nullableopen override fun onCreateView(@NonNullp0: String, @NonNullp1: Context, @NonNullp2: AttributeSet): View?@Nullableopen override fun onCreateView(@Nullablep0: View?, @NonNullp1: String, @NonNullp2: Context, @NonNullp3: AttributeSet): View? onDetachedFromWindow [androidJvm]open override fun onDetachedFromWindow() onEnterAnimationComplete [androidJvm]open fun onEnterAnimationComplete() onGenericMotionEvent [androidJvm]open fun onGenericMotionEvent(p0: MotionEvent): Boolean onGetDirectActions [androidJvm]open fun onGetDirectActions(p0: CancellationSignal, p1: Consumer&lt;MutableList&lt;DirectAction&gt;&gt;) onKeyDown [androidJvm]open override fun onKeyDown(p0: Int, p1: KeyEvent): Boolean onKeyLongPress [androidJvm]open override fun onKeyLongPress(p0: Int, p1: KeyEvent): Boolean onKeyMultiple [androidJvm]open override fun onKeyMultiple(p0: Int, p1: Int, p2: KeyEvent): Boolean onKeyShortcut [androidJvm]open fun onKeyShortcut(p0: Int, p1: KeyEvent): Boolean onKeyUp [androidJvm]open override fun onKeyUp(p0: Int, p1: KeyEvent): Boolean onLocalVoiceInteractionStarted [androidJvm]open fun onLocalVoiceInteractionStarted() onLocalVoiceInteractionStopped [androidJvm]open fun onLocalVoiceInteractionStopped() onLowMemory [androidJvm]open override fun onLowMemory() onMenuItemSelected [androidJvm]override fun onMenuItemSelected(p0: Int, @NonNullp1: MenuItem): Boolean onMenuOpened [androidJvm]open override fun onMenuOpened(p0: Int, p1: Menu): Boolean onMultiWindowModeChanged [androidJvm]@CallSuperopen override fun onMultiWindowModeChanged(p0: Boolean)@RequiresApi(api = 26)@CallSuperopen override fun onMultiWindowModeChanged(p0: Boolean, @NonNullp1: Configuration) onNavigateUp [androidJvm]open fun onNavigateUp(): Boolean onNavigateUpFromChild [androidJvm]open fun ~~onNavigateUpFromChild~~(p0: Activity): Boolean onOptionsItemSelected [androidJvm]open fun onOptionsItemSelected(p0: MenuItem): Boolean onOptionsMenuClosed [androidJvm]open fun onOptionsMenuClosed(p0: Menu) onPanelClosed [androidJvm]open override fun onPanelClosed(p0: Int, @NonNullp1: Menu) onPerformDirectAction [androidJvm]open fun onPerformDirectAction(p0: String, p1: Bundle, p2: CancellationSignal, p3: Consumer&lt;Bundle&gt;) onPictureInPictureModeChanged [androidJvm]@CallSuperopen override fun onPictureInPictureModeChanged(p0: Boolean)@RequiresApi(api = 26)@CallSuperopen override fun onPictureInPictureModeChanged(p0: Boolean, @NonNullp1: Configuration) onPictureInPictureRequested [androidJvm]open fun onPictureInPictureRequested(): Boolean onPictureInPictureUiStateChanged [androidJvm]open fun onPictureInPictureUiStateChanged(p0: PictureInPictureUiState) onPointerCaptureChanged [androidJvm]open fun onPointerCaptureChanged(p0: Boolean) onPostCreate [androidJvm]open fun onPostCreate(p0: Bundle?, p1: PersistableBundle?) onPrepareNavigateUpTaskStack [androidJvm]open fun onPrepareNavigateUpTaskStack(p0: TaskStackBuilder) onPrepareOptionsMenu [androidJvm]open fun onPrepareOptionsMenu(p0: Menu): Boolean onPreparePanel [androidJvm]open override fun onPreparePanel(p0: Int, @Nullablep1: View?, @NonNullp2: Menu): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm]open fun onPrepareSupportNavigateUpTaskStack(@NonNullp0: TaskStackBuilder) onProvideAssistContent [androidJvm]open fun onProvideAssistContent(p0: AssistContent) onProvideAssistData [androidJvm]open fun onProvideAssistData(p0: Bundle) onProvideKeyboardShortcuts [androidJvm]open override fun onProvideKeyboardShortcuts(p0: MutableList&lt;KeyboardShortcutGroup&gt;, p1: Menu?, p2: Int) onProvideReferrer [androidJvm]open fun onProvideReferrer(): Uri onRequestPermissionsResult [androidJvm]@CallSuperopen override fun onRequestPermissionsResult(p0: Int, @NonNullp1: Array&lt;String&gt;, @NonNullp2: IntArray) onRestoreInstanceState [androidJvm]open fun onRestoreInstanceState(p0: Bundle?, p1: PersistableBundle?) onRetainCustomNonConfigurationInstance [androidJvm]@Nullableopen fun ~~onRetainCustomNonConfigurationInstance~~(): Any? onRetainNonConfigurationInstance [androidJvm]@Nullableoverride fun onRetainNonConfigurationInstance(): Any? onSaveInstanceState [androidJvm]open fun onSaveInstanceState(p0: Bundle, p1: PersistableBundle) onSearchRequested [androidJvm]open override fun onSearchRequested(): Booleanopen override fun onSearchRequested(p0: SearchEvent?): Boolean onStateNotSaved [androidJvm]open override fun onStateNotSaved() onSupportActionModeFinished [androidJvm]@CallSuperopen override fun onSupportActionModeFinished(@NonNullp0: ActionMode) onSupportActionModeStarted [androidJvm]@CallSuperopen override fun onSupportActionModeStarted(@NonNullp0: ActionMode) onSupportContentChanged [androidJvm]open fun ~~onSupportContentChanged~~() onSupportNavigateUp [androidJvm]open fun onSupportNavigateUp(): Boolean onTopResumedActivityChanged [androidJvm]open fun onTopResumedActivityChanged(p0: Boolean) onTouchEvent [androidJvm]open fun onTouchEvent(p0: MotionEvent): Boolean onTrackballEvent [androidJvm]open fun onTrackballEvent(p0: MotionEvent): Boolean onTrimMemory [androidJvm]@CallSuperopen override fun onTrimMemory(p0: Int) onUserInteraction [androidJvm]open fun onUserInteraction() onVisibleBehindCanceled [androidJvm]open fun ~~onVisibleBehindCanceled~~() onWindowAttributesChanged [androidJvm]open override fun onWindowAttributesChanged(p0: WindowManager.LayoutParams) onWindowFocusChanged [androidJvm]open override fun onWindowFocusChanged(p0: Boolean) onWindowStartingActionMode [androidJvm]open override fun onWindowStartingActionMode(p0: ActionMode.Callback): ActionMode?open override fun onWindowStartingActionMode(p0: ActionMode.Callback, p1: Int): ActionMode? onWindowStartingSupportActionMode [androidJvm]@Nullableopen override fun onWindowStartingSupportActionMode(@NonNullp0: ActionMode.Callback): ActionMode? openContextMenu [androidJvm]open fun openContextMenu(p0: View) openFileInput [androidJvm]open override fun openFileInput(p0: String): FileInputStream openFileOutput [androidJvm]open override fun openFileOutput(p0: String, p1: Int): FileOutputStream openOptionsMenu [androidJvm]open override fun openOptionsMenu() openOrCreateDatabase [androidJvm]open override fun openOrCreateDatabase(p0: String, p1: Int, p2: SQLiteDatabase.CursorFactory): SQLiteDatabaseopen override fun openOrCreateDatabase(p0: String, p1: Int, p2: SQLiteDatabase.CursorFactory, p3: DatabaseErrorHandler?): SQLiteDatabase overridePendingTransition [androidJvm]open fun overridePendingTransition(p0: Int, p1: Int)open fun overridePendingTransition(p0: Int, p1: Int, p2: Int) peekAvailableContext [androidJvm]@Nullableopen override fun peekAvailableContext(): Context? peekWallpaper [androidJvm]open override fun ~~peekWallpaper~~(): Drawable postponeEnterTransition [androidJvm]open fun postponeEnterTransition() putExtraData [androidJvm]@RestrictTo(value = [RestrictTo.Scope.LIBRARY_GROUP_PREFIX])open fun ~~putExtraData~~(p0: ComponentActivity.ExtraData) recreate [androidJvm]open fun recreate() registerActivityLifecycleCallbacks [androidJvm]open fun registerActivityLifecycleCallbacks(p0: Application.ActivityLifecycleCallbacks) registerComponentCallbacks [androidJvm]open override fun registerComponentCallbacks(p0: ComponentCallbacks) registerForActivityResult [androidJvm]@NonNulloverride fun &lt;I : Any, O : Any&gt; registerForActivityResult(@NonNullp0: ActivityResultContract&lt;I, O&gt;, @NonNullp1: ActivityResultCallback&lt;O&gt;): ActivityResultLauncher&lt;I&gt;@NonNulloverride fun &lt;I : Any, O : Any&gt; registerForActivityResult(@NonNullp0: ActivityResultContract&lt;I, O&gt;, @NonNullp1: ActivityResultRegistry, @NonNullp2: ActivityResultCallback&lt;O&gt;): ActivityResultLauncher&lt;I&gt; registerForContextMenu [androidJvm]open fun registerForContextMenu(p0: View) registerReceiver [androidJvm]open override fun registerReceiver(p0: BroadcastReceiver?, p1: IntentFilter): Intent?open override fun registerReceiver(p0: BroadcastReceiver?, p1: IntentFilter, p2: Int): Intent?open override fun registerReceiver(p0: BroadcastReceiver?, p1: IntentFilter, p2: String?, p3: Handler?): Intent?open override fun registerReceiver(p0: BroadcastReceiver?, p1: IntentFilter, p2: String?, p3: Handler?, p4: Int): Intent? releaseInstance [androidJvm]open fun releaseInstance(): Boolean removeDialog [androidJvm]fun ~~removeDialog~~(p0: Int) removeMenuProvider [androidJvm]open override fun removeMenuProvider(@NonNullp0: MenuProvider) removeOnConfigurationChangedListener [androidJvm]override fun removeOnConfigurationChangedListener(@NonNullp0: Consumer&lt;Configuration&gt;) removeOnContextAvailableListener [androidJvm]override fun removeOnContextAvailableListener(@NonNulllistener: OnContextAvailableListener) removeOnMultiWindowModeChangedListener [androidJvm]override fun removeOnMultiWindowModeChangedListener(@NonNullp0: Consumer&lt;MultiWindowModeChangedInfo&gt;) removeOnNewIntentListener [androidJvm]override fun removeOnNewIntentListener(@NonNullp0: Consumer&lt;Intent&gt;) removeOnPictureInPictureModeChangedListener [androidJvm]override fun removeOnPictureInPictureModeChangedListener(@NonNullp0: Consumer&lt;PictureInPictureModeChangedInfo&gt;) removeOnTrimMemoryListener [androidJvm]override fun removeOnTrimMemoryListener(@NonNullp0: Consumer&lt;Int&gt;) removeStickyBroadcast [androidJvm]open override fun ~~removeStickyBroadcast~~(p0: Intent) removeStickyBroadcastAsUser [androidJvm]open override fun ~~removeStickyBroadcastAsUser~~(p0: Intent, p1: UserHandle) reportFullyDrawn [androidJvm]open override fun reportFullyDrawn() requestDragAndDropPermissions [androidJvm]open fun requestDragAndDropPermissions(p0: DragEvent): DragAndDropPermissions requestPermissions [androidJvm]fun requestPermissions(p0: Array&lt;String&gt;, p1: Int) requestShowKeyboardShortcuts [androidJvm]fun requestShowKeyboardShortcuts() requestVisibleBehind [androidJvm]open fun ~~requestVisibleBehind~~(p0: Boolean): Boolean requestWindowFeature [androidJvm]fun requestWindowFeature(p0: Int): Boolean requireViewById [androidJvm]fun &lt;T : View&gt; requireViewById(p0: Int): T revokeSelfPermissionOnKill [androidJvm]open fun revokeSelfPermissionOnKill(p0: String) revokeSelfPermissionsOnKill [androidJvm]open override fun revokeSelfPermissionsOnKill(p0: MutableCollection&lt;String&gt;) revokeUriPermission [androidJvm]open override fun revokeUriPermission(p0: Uri, p1: Int)open override fun revokeUriPermission(p0: String, p1: Uri, p2: Int) runOnUiThread [androidJvm]fun runOnUiThread(p0: Runnable) sendBroadcast [androidJvm]open override fun sendBroadcast(p0: Intent)open override fun sendBroadcast(p0: Intent, p1: String?) sendBroadcastAsUser [androidJvm]open override fun sendBroadcastAsUser(p0: Intent, p1: UserHandle)open override fun sendBroadcastAsUser(p0: Intent, p1: UserHandle, p2: String?) sendBroadcastWithMultiplePermissions [androidJvm]open fun sendBroadcastWithMultiplePermissions(p0: Intent, p1: Array&lt;String&gt;) sendOrderedBroadcast [androidJvm]open override fun sendOrderedBroadcast(p0: Intent, p1: String?)open override fun sendOrderedBroadcast(p0: Intent, p1: String?, p2: BroadcastReceiver?, p3: Handler?, p4: Int, p5: String?, p6: Bundle?)open override fun sendOrderedBroadcast(p0: Intent, p1: String?, p2: String?, p3: BroadcastReceiver?, p4: Handler?, p5: Int, p6: String?, p7: Bundle?)open fun sendOrderedBroadcast(p0: Intent, p1: Int, p2: String?, p3: String?, p4: BroadcastReceiver?, p5: Handler?, p6: String?, p7: Bundle?, p8: Bundle?) sendOrderedBroadcastAsUser [androidJvm]open override fun sendOrderedBroadcastAsUser(p0: Intent, p1: UserHandle, p2: String?, p3: BroadcastReceiver?, p4: Handler?, p5: Int, p6: String?, p7: Bundle?) sendStickyBroadcast [androidJvm]open override fun ~~sendStickyBroadcast~~(p0: Intent)open override fun ~~sendStickyBroadcast~~(p0: Intent, p1: Bundle?) sendStickyBroadcastAsUser [androidJvm]open override fun ~~sendStickyBroadcastAsUser~~(p0: Intent, p1: UserHandle) sendStickyOrderedBroadcast [androidJvm]open override fun ~~sendStickyOrderedBroadcast~~(p0: Intent, p1: BroadcastReceiver?, p2: Handler?, p3: Int, p4: String?, p5: Bundle?) sendStickyOrderedBroadcastAsUser [androidJvm]open override fun ~~sendStickyOrderedBroadcastAsUser~~(p0: Intent, p1: UserHandle, p2: BroadcastReceiver?, p3: Handler?, p4: Int, p5: String?, p6: Bundle?) setActionBar [androidJvm]open fun setActionBar(p0: Toolbar?) setContentTransitionManager [androidJvm]open fun setContentTransitionManager(p0: TransitionManager) setContentView [androidJvm]open override fun setContentView(p0: View)open override fun setContentView(@LayoutResp0: Int)open override fun setContentView(p0: View, p1: ViewGroup.LayoutParams) setDefaultKeyMode [androidJvm]fun setDefaultKeyMode(p0: Int) setEnterSharedElementCallback [androidJvm]open fun setEnterSharedElementCallback(p0: SharedElementCallback)open fun setEnterSharedElementCallback(@Nullablep0: SharedElementCallback?) setExitSharedElementCallback [androidJvm]open fun setExitSharedElementCallback(p0: SharedElementCallback)open fun setExitSharedElementCallback(@Nullablep0: SharedElementCallback?) setFeatureDrawable [androidJvm]fun setFeatureDrawable(p0: Int, p1: Drawable) setFeatureDrawableAlpha [androidJvm]fun setFeatureDrawableAlpha(p0: Int, p1: Int) setFeatureDrawableResource [androidJvm]fun setFeatureDrawableResource(p0: Int, p1: Int) setFeatureDrawableUri [androidJvm]fun setFeatureDrawableUri(p0: Int, p1: Uri) setFinishOnTouchOutside [androidJvm]open fun setFinishOnTouchOutside(p0: Boolean) setImmersive [androidJvm]open fun setImmersive(p0: Boolean) setInheritShowWhenLocked [androidJvm]open fun setInheritShowWhenLocked(p0: Boolean) setIntent [androidJvm]open fun setIntent(p0: Intent) setLocusContext [androidJvm]open fun setLocusContext(p0: LocusId?, p1: Bundle?) setMediaController [androidJvm]fun setMediaController(p0: MediaController) setPictureInPictureParams [androidJvm]open fun setPictureInPictureParams(p0: PictureInPictureParams) setProgress [androidJvm]fun ~~setProgress~~(p0: Int) setProgressBarIndeterminate [androidJvm]fun ~~setProgressBarIndeterminate~~(p0: Boolean) setProgressBarIndeterminateVisibility [androidJvm]fun ~~setProgressBarIndeterminateVisibility~~(p0: Boolean) setProgressBarVisibility [androidJvm]fun ~~setProgressBarVisibility~~(p0: Boolean) setRecentsScreenshotEnabled [androidJvm]open fun setRecentsScreenshotEnabled(p0: Boolean) setRequestedOrientation [androidJvm]open fun setRequestedOrientation(p0: Int) setResult [androidJvm]fun setResult(p0: Int)fun setResult(p0: Int, p1: Intent) setSecondaryProgress [androidJvm]fun ~~setSecondaryProgress~~(p0: Int) setShouldDockBigOverlays [androidJvm]open fun setShouldDockBigOverlays(p0: Boolean) setShowWhenLocked [androidJvm]open fun setShowWhenLocked(p0: Boolean) setSupportActionBar [androidJvm]open fun setSupportActionBar(@Nullablep0: Toolbar?) setSupportProgress [androidJvm]open fun ~~setSupportProgress~~(p0: Int) setSupportProgressBarIndeterminate [androidJvm]open fun ~~setSupportProgressBarIndeterminate~~(p0: Boolean) setSupportProgressBarIndeterminateVisibility [androidJvm]open fun ~~setSupportProgressBarIndeterminateVisibility~~(p0: Boolean) setSupportProgressBarVisibility [androidJvm]open fun ~~setSupportProgressBarVisibility~~(p0: Boolean) setTaskDescription [androidJvm]open fun setTaskDescription(p0: ActivityManager.TaskDescription) setTheme [androidJvm]open fun setTheme(p0: Resources.Theme?)open override fun setTheme(@StyleResp0: Int) setTitle [androidJvm]open fun setTitle(p0: CharSequence)open fun setTitle(p0: Int) setTitleColor [androidJvm]open fun ~~setTitleColor~~(p0: Int) setTranslucent [androidJvm]open fun setTranslucent(p0: Boolean): Boolean setTurnScreenOn [androidJvm]open fun setTurnScreenOn(p0: Boolean) setVisible [androidJvm]open fun setVisible(p0: Boolean) setVolumeControlStream [androidJvm]fun setVolumeControlStream(p0: Int) setVrModeEnabled [androidJvm]open fun setVrModeEnabled(p0: Boolean, p1: ComponentName) setWallpaper [androidJvm]open override fun ~~setWallpaper~~(p0: Bitmap)open override fun ~~setWallpaper~~(p0: InputStream) shouldDockBigOverlays [androidJvm]open fun shouldDockBigOverlays(): Boolean shouldShowRequestPermissionRationale [androidJvm]open fun shouldShowRequestPermissionRationale(p0: String): Boolean shouldUpRecreateTask [androidJvm]open fun shouldUpRecreateTask(p0: Intent): Boolean showAssist [androidJvm]open fun showAssist(p0: Bundle): Boolean showDialog [androidJvm]fun ~~showDialog~~(p0: Int)fun ~~showDialog~~(p0: Int, p1: Bundle): Boolean showLockTaskEscapeMessage [androidJvm]open fun showLockTaskEscapeMessage() startActionMode [androidJvm]open fun startActionMode(p0: ActionMode.Callback): ActionMode?open fun startActionMode(p0: ActionMode.Callback, p1: Int): ActionMode? startActivities [androidJvm]open override fun startActivities(p0: Array&lt;Intent&gt;)open override fun startActivities(p0: Array&lt;Intent&gt;, p1: Bundle?) startActivity [androidJvm]open override fun startActivity(p0: Intent)open override fun startActivity(p0: Intent, p1: Bundle?) startActivityForResult [androidJvm]open override fun ~~startActivityForResult~~(@NonNullp0: Intent, p1: Int)open override fun ~~startActivityForResult~~(@NonNullp0: Intent, p1: Int, @Nullablep2: Bundle?) startActivityFromChild [androidJvm]open fun ~~startActivityFromChild~~(p0: Activity, p1: Intent, p2: Int)open fun ~~startActivityFromChild~~(p0: Activity, p1: Intent, p2: Int, p3: Bundle?) startActivityFromFragment [androidJvm]open fun ~~startActivityFromFragment~~(p0: Fragment, p1: Intent, p2: Int)open fun ~~startActivityFromFragment~~(p0: Fragment, p1: Intent, p2: Int, p3: Bundle?)open fun startActivityFromFragment(@NonNullp0: Fragment, @NonNullp1: Intent, p2: Int)open fun startActivityFromFragment(@NonNullp0: Fragment, @NonNullp1: Intent, p2: Int, @Nullablep3: Bundle?) startActivityIfNeeded [androidJvm]open fun startActivityIfNeeded(p0: Intent, p1: Int): Booleanopen fun startActivityIfNeeded(p0: Intent, p1: Int, p2: Bundle?): Boolean startForegroundService [androidJvm]open override fun startForegroundService(p0: Intent): ComponentName? startInstrumentation [androidJvm]open override fun startInstrumentation(p0: ComponentName, p1: String?, p2: Bundle?): Boolean startIntentSender [androidJvm]open override fun startIntentSender(p0: IntentSender, p1: Intent?, p2: Int, p3: Int, p4: Int)open override fun startIntentSender(p0: IntentSender, p1: Intent?, p2: Int, p3: Int, p4: Int, p5: Bundle?) startIntentSenderForResult [androidJvm]open override fun ~~startIntentSenderForResult~~(@NonNullp0: IntentSender, p1: Int, @Nullablep2: Intent?, p3: Int, p4: Int, p5: Int)open override fun ~~startIntentSenderForResult~~(@NonNullp0: IntentSender, p1: Int, @Nullablep2: Intent?, p3: Int, p4: Int, p5: Int, @Nullablep6: Bundle?) startIntentSenderFromChild [androidJvm]open fun ~~startIntentSenderFromChild~~(p0: Activity, p1: IntentSender, p2: Int, p3: Intent, p4: Int, p5: Int, p6: Int)open fun ~~startIntentSenderFromChild~~(p0: Activity, p1: IntentSender, p2: Int, p3: Intent, p4: Int, p5: Int, p6: Int, p7: Bundle?) startIntentSenderFromFragment [androidJvm]open fun ~~startIntentSenderFromFragment~~(@NonNullp0: Fragment, @NonNullp1: IntentSender, p2: Int, @Nullablep3: Intent?, p4: Int, p5: Int, p6: Int, @Nullablep7: Bundle?) startLocalVoiceInteraction [androidJvm]open fun startLocalVoiceInteraction(p0: Bundle) startLockTask [androidJvm]open fun startLockTask() startManagingCursor [androidJvm]open fun ~~startManagingCursor~~(p0: Cursor) startNextMatchingActivity [androidJvm]open fun startNextMatchingActivity(p0: Intent): Booleanopen fun startNextMatchingActivity(p0: Intent, p1: Bundle?): Boolean startPostponedEnterTransition [androidJvm]open fun startPostponedEnterTransition() startSearch [androidJvm]open fun startSearch(p0: String?, p1: Boolean, p2: Bundle?, p3: Boolean) startService [androidJvm]open override fun startService(p0: Intent): ComponentName? startSupportActionMode [androidJvm]@Nullableopen fun startSupportActionMode(@NonNullp0: ActionMode.Callback): ActionMode? stopLocalVoiceInteraction [androidJvm]open fun stopLocalVoiceInteraction() stopLockTask [androidJvm]open fun stopLockTask() stopManagingCursor [androidJvm]open fun ~~stopManagingCursor~~(p0: Cursor) stopService [androidJvm]open override fun stopService(p0: Intent): Boolean superDispatchKeyEvent [androidJvm]@RestrictTo(value = [RestrictTo.Scope.LIBRARY_GROUP_PREFIX])open override fun superDispatchKeyEvent(@NonNullp0: KeyEvent): Boolean supportFinishAfterTransition [androidJvm]open fun supportFinishAfterTransition() supportInvalidateOptionsMenu [androidJvm]open override fun supportInvalidateOptionsMenu() supportNavigateUpTo [androidJvm]open fun supportNavigateUpTo(@NonNullp0: Intent) supportPostponeEnterTransition [androidJvm]open fun supportPostponeEnterTransition() supportRequestWindowFeature [androidJvm]open fun supportRequestWindowFeature(p0: Int): Boolean supportShouldUpRecreateTask [androidJvm]open fun supportShouldUpRecreateTask(@NonNullp0: Intent): Boolean supportStartPostponedEnterTransition [androidJvm]open fun supportStartPostponedEnterTransition() takeKeyEvents [androidJvm]open fun takeKeyEvents(p0: Boolean) triggerSearch [androidJvm]open fun triggerSearch(p0: String, p1: Bundle?) unbindService [androidJvm]open override fun unbindService(p0: ServiceConnection) unregisterActivityLifecycleCallbacks [androidJvm]open fun unregisterActivityLifecycleCallbacks(p0: Application.ActivityLifecycleCallbacks) unregisterComponentCallbacks [androidJvm]open override fun unregisterComponentCallbacks(p0: ComponentCallbacks) unregisterForContextMenu [androidJvm]open fun unregisterForContextMenu(p0: View) unregisterReceiver [androidJvm]open override fun unregisterReceiver(p0: BroadcastReceiver) updateServiceGroup [androidJvm]open override fun updateServiceGroup(p0: ServiceConnection, p1: Int, p2: Int) validateRequestPermissionsRequestCode [androidJvm]override fun ~~validateRequestPermissionsRequestCode~~(p0: Int)"},{"location":"app/app/dev.atick.compose.ui/-main-activity/-main-activity/","title":"main activity","text":"<p>//app/dev.atick.compose.ui/MainActivity/MainActivity</p>"},{"location":"app/app/dev.atick.compose.ui/-main-activity/-main-activity/#mainactivity","title":"MainActivity","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"app/app/dev.atick.compose.ui/-main-activity/bluetooth-utils/","title":"Bluetooth utils","text":"<p>//app/dev.atick.compose.ui/MainActivity/bluetoothUtils</p>"},{"location":"app/app/dev.atick.compose.ui/-main-activity/bluetooth-utils/#bluetoothutils","title":"bluetoothUtils","text":"<p>[androidJvm]\\</p> <p>@Inject</p> <p>lateinit var bluetoothUtils: BluetoothUtils</p>"},{"location":"app/app/dev.atick.compose.ui.home/","title":"Index","text":"<p>//app/dev.atick.compose.ui.home</p>"},{"location":"app/app/dev.atick.compose.ui.home/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"app/app/dev.atick.compose.ui.home/#types","title":"Types","text":"Name Summary HomeFragment [androidJvm]class HomeFragment : BaseFragmentFragment for the home screen. HomeViewModel [androidJvm]class HomeViewModel@Injectconstructor(jetpackRepository: HomeRepository) : BaseViewModel&lt;HomeUiState&gt; View model for the home screen."},{"location":"app/app/dev.atick.compose.ui.home/#functions","title":"Functions","text":"Name Summary HomeScreen [androidJvm]@Composablefun HomeScreen(homeViewModel: HomeViewModel = viewModel())Composable function that represents the home screen."},{"location":"app/app/dev.atick.compose.ui.home/-home-screen/","title":"home screen","text":"<p>//app/dev.atick.compose.ui.home/HomeScreen</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-screen/#homescreen","title":"HomeScreen","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>fun HomeScreen(homeViewModel: HomeViewModel = viewModel())</p> <p>Composable function that represents the home screen.</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-screen/#parameters","title":"Parameters","text":"<p>androidJvm</p> homeViewModel The view model for the home screen."},{"location":"app/app/dev.atick.compose.ui.home/-home-fragment/","title":"Index","text":"<p>//app/dev.atick.compose.ui.home/HomeFragment</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-fragment/#homefragment","title":"HomeFragment","text":"<p>[androidJvm]\\ class HomeFragment : BaseFragment</p> <p>Fragment for the home screen.</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-fragment/#constructors","title":"Constructors","text":"HomeFragment [androidJvm]constructor()"},{"location":"app/app/dev.atick.compose.ui.home/-home-fragment/#properties","title":"Properties","text":"Name Summary defaultViewModelCreationExtras [androidJvm]@get:NonNull@get:CallSuperopen override val defaultViewModelCreationExtras: CreationExtras defaultViewModelProviderFactory [androidJvm]@get:NonNullopen override val defaultViewModelProviderFactory: ViewModelProvider.Factory lifecycle [androidJvm]@get:NonNullopen override val lifecycle: Lifecycle mPreviousWho [androidJvm]@RestrictTo(value = [RestrictTo.Scope.LIBRARY])@Nullablevar mPreviousWho: String? savedStateRegistry [androidJvm]@get:NonNulloverride val savedStateRegistry: SavedStateRegistry viewModelStore [androidJvm]@get:NonNullopen override val viewModelStore: ViewModelStore"},{"location":"app/app/dev.atick.compose.ui.home/-home-fragment/#functions","title":"Functions","text":"Name Summary ComposeUi [androidJvm]@Composableopen override fun ComposeUi()Compose the UI for the fragment. dump [androidJvm]open fun dump(@NonNullp0: String, @Nullablep1: FileDescriptor?, @NonNullp2: PrintWriter, @Nullablep3: Array&lt;String&gt;?) equals [androidJvm]operator override fun equals(@Nullableother: Any?): Boolean getActivity [androidJvm]@Nullablefun getActivity(): FragmentActivity? getAllowEnterTransitionOverlap [androidJvm]open fun getAllowEnterTransitionOverlap(): Boolean getAllowReturnTransitionOverlap [androidJvm]open fun getAllowReturnTransitionOverlap(): Boolean getArguments [androidJvm]@Nullablefun getArguments(): Bundle? getChildFragmentManager [androidJvm]@NonNullfun getChildFragmentManager(): FragmentManager getContext [androidJvm]@Nullableopen fun getContext(): Context? getEnterTransition [androidJvm]@Nullableopen fun getEnterTransition(): Any? getExitTransition [androidJvm]@Nullableopen fun getExitTransition(): Any? getFragmentManager [androidJvm]@Nullablefun ~~getFragmentManager~~(): FragmentManager? getHost [androidJvm]@Nullablefun getHost(): Any? getId [androidJvm]fun getId(): Int getLayoutInflater [androidJvm]@NonNullfun getLayoutInflater(): LayoutInflater@NonNull@RestrictTo(value = [RestrictTo.Scope.LIBRARY_GROUP_PREFIX])open fun ~~getLayoutInflater~~(@Nullablep0: Bundle?): LayoutInflater getLoaderManager [androidJvm]@NonNullopen fun ~~getLoaderManager~~(): LoaderManager getParentFragment [androidJvm]@Nullablefun getParentFragment(): Fragment? getParentFragmentManager [androidJvm]@NonNullfun getParentFragmentManager(): FragmentManager getReenterTransition [androidJvm]@Nullableopen fun getReenterTransition(): Any? getResources [androidJvm]@NonNullfun getResources(): Resources getRetainInstance [androidJvm]fun ~~getRetainInstance~~(): Boolean getReturnTransition [androidJvm]@Nullableopen fun getReturnTransition(): Any? getSharedElementEnterTransition [androidJvm]@Nullableopen fun getSharedElementEnterTransition(): Any? getSharedElementReturnTransition [androidJvm]@Nullableopen fun getSharedElementReturnTransition(): Any? getString [androidJvm]@NonNullfun getString(@StringResp0: Int): String@NonNullfun getString(@StringResp0: Int, @Nullablevararg p1: Any): String getTag [androidJvm]@Nullablefun getTag(): String? getTargetFragment [androidJvm]@Nullablefun ~~getTargetFragment~~(): Fragment? getTargetRequestCode [androidJvm]fun ~~getTargetRequestCode~~(): Int getText [androidJvm]@NonNullfun getText(@StringResp0: Int): CharSequence getUserVisibleHint [androidJvm]open fun ~~getUserVisibleHint~~(): Boolean getView [androidJvm]@Nullableopen fun getView(): View? getViewLifecycleOwner [androidJvm]@MainThread@NonNullopen fun getViewLifecycleOwner(): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm]@NonNullopen fun getViewLifecycleOwnerLiveData(): LiveData&lt;LifecycleOwner&gt; hashCode [androidJvm]override fun hashCode(): Int hasOptionsMenu [androidJvm]@RestrictTo(value = [RestrictTo.Scope.LIBRARY_GROUP_PREFIX])fun hasOptionsMenu(): Boolean isAdded [androidJvm]fun isAdded(): Boolean isDetached [androidJvm]fun isDetached(): Boolean isHidden [androidJvm]fun isHidden(): Boolean isInLayout [androidJvm]fun isInLayout(): Boolean isMenuVisible [androidJvm]@RestrictTo(value = [RestrictTo.Scope.LIBRARY_GROUP_PREFIX])fun isMenuVisible(): Boolean isRemoving [androidJvm]fun isRemoving(): Boolean isResumed [androidJvm]fun isResumed(): Boolean isStateSaved [androidJvm]fun isStateSaved(): Boolean isVisible [androidJvm]fun isVisible(): Boolean observeStates [androidJvm]open fun observeStates() onActivityCreated [androidJvm]@MainThread@CallSuperopen fun ~~onActivityCreated~~(@Nullablep0: Bundle?) onActivityResult [androidJvm]open fun ~~onActivityResult~~(p0: Int, p1: Int, @Nullablep2: Intent?) onAttach [androidJvm]@MainThread@CallSuperopen fun ~~onAttach~~(@NonNullp0: Activity)@MainThread@CallSuperopen fun onAttach(@NonNullp0: Context) onAttachFragment [androidJvm]@MainThreadopen fun ~~onAttachFragment~~(@NonNullp0: Fragment) onConfigurationChanged [androidJvm]@CallSuperopen override fun onConfigurationChanged(@NonNullp0: Configuration) onContextItemSelected [androidJvm]@MainThreadopen fun onContextItemSelected(@NonNullp0: MenuItem): Boolean onCreate [androidJvm]open override fun onCreate(savedInstanceState: Bundle?) onCreateAnimation [androidJvm]@MainThread@Nullableopen fun onCreateAnimation(p0: Int, p1: Boolean, p2: Int): Animation? onCreateAnimator [androidJvm]@MainThread@Nullableopen fun onCreateAnimator(p0: Int, p1: Boolean, p2: Int): Animator? onCreateContextMenu [androidJvm]@MainThreadopen override fun onCreateContextMenu(@NonNullp0: ContextMenu, @NonNullp1: View, @Nullablep2: ContextMenu.ContextMenuInfo?) onCreateOptionsMenu [androidJvm]@MainThreadopen fun ~~onCreateOptionsMenu~~(@NonNullp0: Menu, @NonNullp1: MenuInflater) onCreateView [androidJvm]open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onDestroy [androidJvm]@MainThread@CallSuperopen fun onDestroy() onDestroyOptionsMenu [androidJvm]@MainThreadopen fun ~~onDestroyOptionsMenu~~() onDestroyView [androidJvm]@MainThread@CallSuperopen fun onDestroyView() onDetach [androidJvm]@MainThread@CallSuperopen fun onDetach() onGetLayoutInflater [androidJvm]@NonNullopen fun onGetLayoutInflater(@Nullablep0: Bundle?): LayoutInflater onHiddenChanged [androidJvm]@MainThreadopen fun onHiddenChanged(p0: Boolean) onInflate [androidJvm]@UiThread@CallSuperopen fun ~~onInflate~~(@NonNullp0: Activity, @NonNullp1: AttributeSet, @Nullablep2: Bundle?)@UiThread@CallSuperopen fun onInflate(@NonNullp0: Context, @NonNullp1: AttributeSet, @Nullablep2: Bundle?) onLowMemory [androidJvm]@MainThread@CallSuperopen override fun onLowMemory() onMultiWindowModeChanged [androidJvm]open fun onMultiWindowModeChanged(p0: Boolean) onOptionsItemSelected [androidJvm]@MainThreadopen fun ~~onOptionsItemSelected~~(@NonNullp0: MenuItem): Boolean onOptionsMenuClosed [androidJvm]@MainThreadopen fun ~~onOptionsMenuClosed~~(@NonNullp0: Menu) onPause [androidJvm]@MainThread@CallSuperopen fun onPause() onPictureInPictureModeChanged [androidJvm]open fun onPictureInPictureModeChanged(p0: Boolean) onPrepareOptionsMenu [androidJvm]@MainThreadopen fun ~~onPrepareOptionsMenu~~(@NonNullp0: Menu) onPrimaryNavigationFragmentChanged [androidJvm]@MainThreadopen fun onPrimaryNavigationFragmentChanged(p0: Boolean) onRequestPermissionsResult [androidJvm]open fun ~~onRequestPermissionsResult~~(p0: Int, @NonNullp1: Array&lt;String&gt;, @NonNullp2: IntArray) onResume [androidJvm]@MainThread@CallSuperopen fun onResume() onSaveInstanceState [androidJvm]@MainThreadopen fun onSaveInstanceState(@NonNullp0: Bundle) onStart [androidJvm]@MainThread@CallSuperopen fun onStart() onStop [androidJvm]@MainThread@CallSuperopen fun onStop() onViewCreated [androidJvm]@MainThreadopen fun onViewCreated(@NonNullp0: View, @Nullablep1: Bundle?) onViewStateRestored [androidJvm]@MainThread@CallSuperopen fun onViewStateRestored(@Nullablep0: Bundle?) postponeEnterTransition [androidJvm]open fun postponeEnterTransition()fun postponeEnterTransition(p0: Long, @NonNullp1: TimeUnit) registerForActivityResult [androidJvm]@MainThread@NonNulloverride fun &lt;I : Any, O : Any&gt; registerForActivityResult(@NonNullp0: ActivityResultContract&lt;I, O&gt;, @NonNullp1: ActivityResultCallback&lt;O&gt;): ActivityResultLauncher&lt;I&gt;@MainThread@NonNulloverride fun &lt;I : Any, O : Any&gt; registerForActivityResult(@NonNullp0: ActivityResultContract&lt;I, O&gt;, @NonNullp1: ActivityResultRegistry, @NonNullp2: ActivityResultCallback&lt;O&gt;): ActivityResultLauncher&lt;I&gt; registerForContextMenu [androidJvm]open fun registerForContextMenu(@NonNullp0: View) requestPermissions [androidJvm]fun ~~requestPermissions~~(@NonNullp0: Array&lt;String&gt;, p1: Int) requireActivity [androidJvm]@NonNullfun requireActivity(): FragmentActivity requireArguments [androidJvm]@NonNullfun requireArguments(): Bundle requireContext [androidJvm]@NonNullfun requireContext(): Context requireFragmentManager [androidJvm]@NonNullfun ~~requireFragmentManager~~(): FragmentManager requireHost [androidJvm]@NonNullfun requireHost(): Any requireParentFragment [androidJvm]@NonNullfun requireParentFragment(): Fragment requireView [androidJvm]@NonNullfun requireView(): View setAllowEnterTransitionOverlap [androidJvm]open fun setAllowEnterTransitionOverlap(p0: Boolean) setAllowReturnTransitionOverlap [androidJvm]open fun setAllowReturnTransitionOverlap(p0: Boolean) setArguments [androidJvm]open fun setArguments(@Nullablep0: Bundle?) setEnterSharedElementCallback [androidJvm]open fun setEnterSharedElementCallback(@Nullablep0: SharedElementCallback?) setEnterTransition [androidJvm]open fun setEnterTransition(@Nullablep0: Any?) setExitSharedElementCallback [androidJvm]open fun setExitSharedElementCallback(@Nullablep0: SharedElementCallback?) setExitTransition [androidJvm]open fun setExitTransition(@Nullablep0: Any?) setHasOptionsMenu [androidJvm]open fun ~~setHasOptionsMenu~~(p0: Boolean) setInitialSavedState [androidJvm]open fun setInitialSavedState(@Nullablep0: Fragment.SavedState?) setMenuVisibility [androidJvm]open fun setMenuVisibility(p0: Boolean) setReenterTransition [androidJvm]open fun setReenterTransition(@Nullablep0: Any?) setRetainInstance [androidJvm]open fun ~~setRetainInstance~~(p0: Boolean) setReturnTransition [androidJvm]open fun setReturnTransition(@Nullablep0: Any?) setSharedElementEnterTransition [androidJvm]open fun setSharedElementEnterTransition(@Nullablep0: Any?) setSharedElementReturnTransition [androidJvm]open fun setSharedElementReturnTransition(@Nullablep0: Any?) setTargetFragment [androidJvm]open fun ~~setTargetFragment~~(@Nullablep0: Fragment?, p1: Int) setUserVisibleHint [androidJvm]open fun ~~setUserVisibleHint~~(p0: Boolean) shouldShowRequestPermissionRationale [androidJvm]open fun shouldShowRequestPermissionRationale(@NonNullp0: String): Boolean startActivity [androidJvm]open fun startActivity(@NonNullp0: Intent)open fun startActivity(@NonNullp0: Intent, @Nullablep1: Bundle?) startActivityForResult [androidJvm]open fun ~~startActivityForResult~~(@NonNullp0: Intent, p1: Int)open fun ~~startActivityForResult~~(@NonNullp0: Intent, p1: Int, @Nullablep2: Bundle?) startIntentSenderForResult [androidJvm]open fun ~~startIntentSenderForResult~~(@NonNullp0: IntentSender, p1: Int, @Nullablep2: Intent?, p3: Int, p4: Int, p5: Int, @Nullablep6: Bundle?) startPostponedEnterTransition [androidJvm]open fun startPostponedEnterTransition() toString [androidJvm]@NonNullopen override fun toString(): String unregisterForContextMenu [androidJvm]open fun unregisterForContextMenu(@NonNullp0: View)"},{"location":"app/app/dev.atick.compose.ui.home/-home-fragment/-compose-ui/","title":"compose ui","text":"<p>//app/dev.atick.compose.ui.home/HomeFragment/ComposeUi</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-fragment/-compose-ui/#composeui","title":"ComposeUi","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>open override fun ComposeUi()</p> <p>Compose the UI for the fragment.</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-fragment/-home-fragment/","title":"home fragment","text":"<p>//app/dev.atick.compose.ui.home/HomeFragment/HomeFragment</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-fragment/-home-fragment/#homefragment","title":"HomeFragment","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/","title":"Index","text":"<p>//app/dev.atick.compose.ui.home/HomeViewModel</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/#homeviewmodel","title":"HomeViewModel","text":"<p>class HomeViewModel@Injectconstructor(jetpackRepository: HomeRepository) : BaseViewModel&lt;HomeUiState&gt; </p> <p>View model for the home screen.</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/#parameters","title":"Parameters","text":"<p>androidJvm</p> jetpackRepository The repository for accessing home screen data."},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/#constructors","title":"Constructors","text":"HomeViewModel [androidJvm]@Injectconstructor(jetpackRepository: HomeRepository)"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/#properties","title":"Properties","text":"Name Summary homeUiState [androidJvm]val homeUiState: StateFlow&lt;HomeUiState&gt;"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/#functions","title":"Functions","text":"Name Summary addCloseable [androidJvm]open fun addCloseable(@NonNullp0: Closeable) clearError [androidJvm]fun clearError()Clears the error toast message from the UI state. getItem [androidJvm]fun getItem()Retrieves an item and updates the UI state accordingly."},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/-home-view-model/","title":"home view model","text":"<p>//app/dev.atick.compose.ui.home/HomeViewModel/HomeViewModel</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/-home-view-model/#homeviewmodel","title":"HomeViewModel","text":"<p>[androidJvm]\\</p> <p>@Inject</p> <p>constructor(jetpackRepository: HomeRepository)</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/-home-view-model/#parameters","title":"Parameters","text":"<p>androidJvm</p> jetpackRepository The repository for accessing home screen data."},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/clear-error/","title":"Clear error","text":"<p>//app/dev.atick.compose.ui.home/HomeViewModel/clearError</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/clear-error/#clearerror","title":"clearError","text":"<p>[androidJvm]\\ fun clearError()</p> <p>Clears the error toast message from the UI state.</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/get-item/","title":"Get item","text":"<p>//app/dev.atick.compose.ui.home/HomeViewModel/getItem</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/get-item/#getitem","title":"getItem","text":"<p>[androidJvm]\\ fun getItem()</p> <p>Retrieves an item and updates the UI state accordingly.</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/home-ui-state/","title":"Home ui state","text":"<p>//app/dev.atick.compose.ui.home/HomeViewModel/homeUiState</p>"},{"location":"app/app/dev.atick.compose.ui.home/-home-view-model/home-ui-state/#homeuistate","title":"homeUiState","text":"<p>[androidJvm]\\ val homeUiState: StateFlow&lt;HomeUiState&gt;</p>"},{"location":"app/app/dev.atick.compose.ui.home.components/","title":"Index","text":"<p>//app/dev.atick.compose.ui.home.components</p>"},{"location":"app/app/dev.atick.compose.ui.home.components/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"app/app/dev.atick.compose.ui.home.components/#functions","title":"Functions","text":"Name Summary HomeContent [androidJvm]@Composablefun HomeContent(modifier: Modifier = Modifier, item: Item? = null, loading: Boolean = false, onButtonClick: () -&gt; Unit)Composable function that displays the content of the home screen."},{"location":"app/app/dev.atick.compose.ui.home.components/-home-content/","title":"home content","text":"<p>//app/dev.atick.compose.ui.home.components/HomeContent</p>"},{"location":"app/app/dev.atick.compose.ui.home.components/-home-content/#homecontent","title":"HomeContent","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>fun HomeContent(modifier: Modifier = Modifier, item: Item? = null, loading: Boolean = false, onButtonClick: () -&gt; Unit)</p> <p>Composable function that displays the content of the home screen.</p>"},{"location":"app/app/dev.atick.compose.ui.home.components/-home-content/#parameters","title":"Parameters","text":"<p>androidJvm</p> modifier The modifier for styling or positioning the content. item The item to display. If null, no item will be shown. loading Whether the content is currently loading or not. onButtonClick The callback function to be invoked when the button is clicked."},{"location":"app/app/dev.atick.compose.ui.home.state/","title":"Index","text":"<p>//app/dev.atick.compose.ui.home.state</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"app/app/dev.atick.compose.ui.home.state/#types","title":"Types","text":"Name Summary HomeUiState [androidJvm]data class HomeUiState(val loading: Boolean = false, val toastMessage: UiText? = null, val item: Item? = null) : BaseUiStateRepresents the UI state for the home screen."},{"location":"app/app/dev.atick.compose.ui.home.state/#functions","title":"Functions","text":"Name Summary setLoading [androidJvm]fun MutableStateFlow&lt;HomeUiState&gt;.setLoading(loading: Boolean)Sets the loading state of the MutableStateFlow with the provided loading value. setToastMessage [androidJvm]fun MutableStateFlow&lt;HomeUiState&gt;.setToastMessage(message: String?)Sets the toast message of the MutableStateFlow with the provided message. If the message is null, the toast message will be cleared."},{"location":"app/app/dev.atick.compose.ui.home.state/set-loading/","title":"Set loading","text":"<p>//app/dev.atick.compose.ui.home.state/setLoading</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/set-loading/#setloading","title":"setLoading","text":"<p>[androidJvm]\\ fun MutableStateFlow&lt;HomeUiState&gt;.setLoading(loading: Boolean)</p> <p>Sets the loading state of the MutableStateFlow with the provided loading value.</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/set-loading/#parameters","title":"Parameters","text":"<p>androidJvm</p> loading The loading value to be set."},{"location":"app/app/dev.atick.compose.ui.home.state/set-toast-message/","title":"Set toast message","text":"<p>//app/dev.atick.compose.ui.home.state/setToastMessage</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/set-toast-message/#settoastmessage","title":"setToastMessage","text":"<p>[androidJvm]\\ fun MutableStateFlow&lt;HomeUiState&gt;.setToastMessage(message: String?)</p> <p>Sets the toast message of the MutableStateFlow with the provided message. If the message is null, the toast message will be cleared.</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/set-toast-message/#parameters","title":"Parameters","text":"<p>androidJvm</p> message The toast message to be set or null to clear the toast message."},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/","title":"Index","text":"<p>//app/dev.atick.compose.ui.home.state/HomeUiState</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/#homeuistate","title":"HomeUiState","text":"<p>[androidJvm]\\ data class HomeUiState(val loading: Boolean = false, val toastMessage: UiText? = null, val item: Item? = null) : BaseUiState</p> <p>Represents the UI state for the home screen.</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/#constructors","title":"Constructors","text":"HomeUiState [androidJvm]constructor(loading: Boolean = false, toastMessage: UiText? = null, item: Item? = null)"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/#properties","title":"Properties","text":"Name Summary item [androidJvm]val item: Item? = nullThe item to be displayed on the screen. If null, no item will be shown. loading [androidJvm]open override val loading: Boolean = falseWhether the content is currently loading or not. toastMessage [androidJvm]open override val toastMessage: UiText? = nullThe toast message to be shown. If null, no toast message will be displayed."},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/-home-ui-state/","title":"home ui state","text":"<p>//app/dev.atick.compose.ui.home.state/HomeUiState/HomeUiState</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/-home-ui-state/#homeuistate","title":"HomeUiState","text":"<p>[androidJvm]\\ constructor(loading: Boolean = false, toastMessage: UiText? = null, item: Item? = null)</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/item/","title":"Item","text":"<p>//app/dev.atick.compose.ui.home.state/HomeUiState/item</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/item/#item","title":"item","text":"<p>[androidJvm]\\ val item: Item? = null</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/loading/","title":"Loading","text":"<p>//app/dev.atick.compose.ui.home.state/HomeUiState/loading</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/loading/#loading","title":"loading","text":"<p>[androidJvm]\\ open override val loading: Boolean = false</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/toast-message/","title":"Toast message","text":"<p>//app/dev.atick.compose.ui.home.state/HomeUiState/toastMessage</p>"},{"location":"app/app/dev.atick.compose.ui.home.state/-home-ui-state/toast-message/#toastmessage","title":"toastMessage","text":"<p>[androidJvm]\\ open override val toastMessage: UiText? = null</p>"},{"location":"bluetooth/classic/","title":"Index","text":"<p>//classic</p>"},{"location":"bluetooth/classic/#classic","title":"classic","text":""},{"location":"bluetooth/classic/#packages","title":"Packages","text":"Name dev.atick.bluetooth.classic dev.atick.bluetooth.classic.di"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/","title":"Index","text":"<p>//classic/dev.atick.bluetooth.classic</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/#types","title":"Types","text":"Name Summary BluetoothClassic [androidJvm]@Singletonclass BluetoothClassic@Injectconstructor(bluetoothAdapter: BluetoothAdapter?, context: Context, ioDispatcher: CoroutineDispatcher) : BluetoothUtils, BluetoothManager, BluetoothDataSourceImplementation of BluetoothUtils, BluetoothManager, and BluetoothDataSource interfaces for managing Bluetooth operations."},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/","title":"Index","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/#bluetoothclassic","title":"BluetoothClassic","text":"<p>[androidJvm]\\ @Singleton</p> <p>class BluetoothClassic@Injectconstructor(bluetoothAdapter: BluetoothAdapter?, context: Context, ioDispatcher: CoroutineDispatcher) : BluetoothUtils, BluetoothManager, BluetoothDataSource</p> <p>Implementation of BluetoothUtils, BluetoothManager, and BluetoothDataSource interfaces for managing Bluetooth operations.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/#constructors","title":"Constructors","text":"BluetoothClassic [androidJvm]@Injectconstructor(bluetoothAdapter: BluetoothAdapter?, context: Context, ioDispatcher: CoroutineDispatcher)"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/#functions","title":"Functions","text":"Name Summary closeConnection [androidJvm]open suspend override fun closeConnection(): Result&lt;Unit&gt;Closes the Bluetooth connection. connect [androidJvm]open suspend override fun connect(address: String): Result&lt;Unit&gt;Connects to a Bluetooth device with the specified address. getBluetoothDataStream [androidJvm]open override fun getBluetoothDataStream(): StateFlow&lt;BtMessage?&gt;Retrieves the data stream of incoming Bluetooth messages. getBluetoothState [androidJvm]open override fun getBluetoothState(): StateFlow&lt;BtState&gt;Retrieves the state of the Bluetooth adapter. getConnectedDeviceState [androidJvm]open override fun getConnectedDeviceState(): StateFlow&lt;BtDevice?&gt;Retrieves the state of the connected Bluetooth device. getPairedDevices [androidJvm]open override fun getPairedDevices(): StateFlow&lt;List&lt;BtDevice&gt;&gt;Retrieves the list of paired Bluetooth devices. getScannedDevices [androidJvm]open override fun getScannedDevices(): StateFlow&lt;List&lt;BtDevice&gt;&gt;Retrieves the list of scanned Bluetooth devices. sendDataToBluetoothDevice [androidJvm]open suspend override fun sendDataToBluetoothDevice(data: String): Result&lt;Unit&gt;Sends data to the connected Bluetooth device. stopDiscovery [androidJvm]open override fun stopDiscovery()Stops the device discovery process."},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/-bluetooth-classic/","title":"bluetooth classic","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/BluetoothClassic</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/-bluetooth-classic/#bluetoothclassic","title":"BluetoothClassic","text":"<p>[androidJvm]\\</p> <p>@Inject</p> <p>constructor(bluetoothAdapter: BluetoothAdapter?, context: Context, ioDispatcher: CoroutineDispatcher)</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/close-connection/","title":"Close connection","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/closeConnection</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/close-connection/#closeconnection","title":"closeConnection","text":"<p>[androidJvm]\\ open suspend override fun closeConnection(): Result&lt;Unit&gt;</p> <p>Closes the Bluetooth connection.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/close-connection/#return","title":"Return","text":"<p>Result indicating the success or failure of the operation.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/connect/","title":"Connect","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/connect</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/connect/#connect","title":"connect","text":"<p>[androidJvm]\\ open suspend override fun connect(address: String): Result&lt;Unit&gt;</p> <p>Connects to a Bluetooth device with the specified address.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/connect/#return","title":"Return","text":"<p>Result indicating the success or failure of the connection.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/connect/#parameters","title":"Parameters","text":"<p>androidJvm</p> address The MAC address of the Bluetooth device."},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-bluetooth-data-stream/","title":"Get bluetooth data stream","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/getBluetoothDataStream</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-bluetooth-data-stream/#getbluetoothdatastream","title":"getBluetoothDataStream","text":"<p>[androidJvm]\\ open override fun getBluetoothDataStream(): StateFlow&lt;BtMessage?&gt;</p> <p>Retrieves the data stream of incoming Bluetooth messages.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-bluetooth-data-stream/#return","title":"Return","text":"<p>StateFlow representing the incoming Bluetooth messages.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-bluetooth-state/","title":"Get bluetooth state","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/getBluetoothState</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-bluetooth-state/#getbluetoothstate","title":"getBluetoothState","text":"<p>[androidJvm]\\ open override fun getBluetoothState(): StateFlow&lt;BtState&gt;</p> <p>Retrieves the state of the Bluetooth adapter.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-bluetooth-state/#return","title":"Return","text":"<p>StateFlow representing the Bluetooth state.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-connected-device-state/","title":"Get connected device state","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/getConnectedDeviceState</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-connected-device-state/#getconnecteddevicestate","title":"getConnectedDeviceState","text":"<p>[androidJvm]\\ open override fun getConnectedDeviceState(): StateFlow&lt;BtDevice?&gt;</p> <p>Retrieves the state of the connected Bluetooth device.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-connected-device-state/#return","title":"Return","text":"<p>StateFlow representing the device state.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-paired-devices/","title":"Get paired devices","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/getPairedDevices</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-paired-devices/#getpaireddevices","title":"getPairedDevices","text":"<p>[androidJvm]\\ open override fun getPairedDevices(): StateFlow&lt;List&lt;BtDevice&gt;&gt;</p> <p>Retrieves the list of paired Bluetooth devices.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-paired-devices/#return","title":"Return","text":"<p>StateFlow representing the list of paired devices.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-scanned-devices/","title":"Get scanned devices","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/getScannedDevices</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-scanned-devices/#getscanneddevices","title":"getScannedDevices","text":"<p>[androidJvm]\\ open override fun getScannedDevices(): StateFlow&lt;List&lt;BtDevice&gt;&gt;</p> <p>Retrieves the list of scanned Bluetooth devices.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/get-scanned-devices/#return","title":"Return","text":"<p>StateFlow representing the list of scanned devices.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/send-data-to-bluetooth-device/","title":"Send data to bluetooth device","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/sendDataToBluetoothDevice</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/send-data-to-bluetooth-device/#senddatatobluetoothdevice","title":"sendDataToBluetoothDevice","text":"<p>[androidJvm]\\ open suspend override fun sendDataToBluetoothDevice(data: String): Result&lt;Unit&gt;</p> <p>Sends data to the connected Bluetooth device.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/send-data-to-bluetooth-device/#return","title":"Return","text":"<p>Result indicating the success or failure of the operation.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/send-data-to-bluetooth-device/#parameters","title":"Parameters","text":"<p>androidJvm</p> data The data to send."},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/stop-discovery/","title":"Stop discovery","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/stopDiscovery</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/stop-discovery/#stopdiscovery","title":"stopDiscovery","text":"<p>[androidJvm]\\ open override fun stopDiscovery()</p> <p>Stops the device discovery process.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/-companion/","title":"Index","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/Companion</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/-companion/#companion","title":"Companion","text":"<p>[androidJvm]\\ object Companion</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/-companion/#properties","title":"Properties","text":"Name Summary BT_UUID [androidJvm]const val BT_UUID: String"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/-companion/-b-t_-u-u-i-d/","title":"b t  u u i d","text":"<p>//classic/dev.atick.bluetooth.classic/BluetoothClassic/Companion/BT_UUID</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic/-bluetooth-classic/-companion/-b-t_-u-u-i-d/#bt_uuid","title":"BT_UUID","text":"<p>[androidJvm]\\ const val BT_UUID: String</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/","title":"Index","text":"<p>//classic/dev.atick.bluetooth.classic.di</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/#types","title":"Types","text":"Name Summary BluetoothClassicModule [androidJvm]@Moduleabstract class BluetoothClassicModuleDagger module for providing Bluetooth Classic related dependencies."},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/","title":"Index","text":"<p>//classic/dev.atick.bluetooth.classic.di/BluetoothClassicModule</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/#bluetoothclassicmodule","title":"BluetoothClassicModule","text":"<p>[androidJvm]\\ @Module</p> <p>abstract class BluetoothClassicModule</p> <p>Dagger module for providing Bluetooth Classic related dependencies.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/#constructors","title":"Constructors","text":"BluetoothClassicModule [androidJvm]constructor()"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/#functions","title":"Functions","text":"Name Summary bindBluetoothDataSource [androidJvm]@Binds@Singletonabstract fun bindBluetoothDataSource(bluetoothClassic: BluetoothClassic): BluetoothDataSourceBinds BluetoothClassic implementation to BluetoothDataSource interface. bindBluetoothManager [androidJvm]@Binds@Singletonabstract fun bindBluetoothManager(bluetoothClassic: BluetoothClassic): BluetoothManagerBinds BluetoothClassic implementation to BluetoothManager interface. provideBluetoothUtils [androidJvm]@Binds@Singletonabstract fun provideBluetoothUtils(bluetoothClassic: BluetoothClassic): BluetoothUtilsBinds BluetoothClassic implementation to BluetoothUtils interface."},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/-bluetooth-classic-module/","title":"bluetooth classic module","text":"<p>//classic/dev.atick.bluetooth.classic.di/BluetoothClassicModule/BluetoothClassicModule</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/-bluetooth-classic-module/#bluetoothclassicmodule","title":"BluetoothClassicModule","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/bind-bluetooth-data-source/","title":"Bind bluetooth data source","text":"<p>//classic/dev.atick.bluetooth.classic.di/BluetoothClassicModule/bindBluetoothDataSource</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/bind-bluetooth-data-source/#bindbluetoothdatasource","title":"bindBluetoothDataSource","text":"<p>[androidJvm]\\</p> <p>@Binds</p> <p>@Singleton</p> <p>abstract fun bindBluetoothDataSource(bluetoothClassic: BluetoothClassic): BluetoothDataSource</p> <p>Binds BluetoothClassic implementation to BluetoothDataSource interface.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/bind-bluetooth-data-source/#return","title":"Return","text":"<p>The BluetoothDataSource interface.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/bind-bluetooth-data-source/#parameters","title":"Parameters","text":"<p>androidJvm</p> bluetoothClassic The Bluetooth Classic implementation."},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/bind-bluetooth-manager/","title":"Bind bluetooth manager","text":"<p>//classic/dev.atick.bluetooth.classic.di/BluetoothClassicModule/bindBluetoothManager</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/bind-bluetooth-manager/#bindbluetoothmanager","title":"bindBluetoothManager","text":"<p>[androidJvm]\\</p> <p>@Binds</p> <p>@Singleton</p> <p>abstract fun bindBluetoothManager(bluetoothClassic: BluetoothClassic): BluetoothManager</p> <p>Binds BluetoothClassic implementation to BluetoothManager interface.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/bind-bluetooth-manager/#return","title":"Return","text":"<p>The BluetoothManager interface.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/bind-bluetooth-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> bluetoothClassic The Bluetooth Classic implementation."},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/provide-bluetooth-utils/","title":"Provide bluetooth utils","text":"<p>//classic/dev.atick.bluetooth.classic.di/BluetoothClassicModule/provideBluetoothUtils</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/provide-bluetooth-utils/#providebluetoothutils","title":"provideBluetoothUtils","text":"<p>[androidJvm]\\</p> <p>@Binds</p> <p>@Singleton</p> <p>abstract fun provideBluetoothUtils(bluetoothClassic: BluetoothClassic): BluetoothUtils</p> <p>Binds BluetoothClassic implementation to BluetoothUtils interface.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/provide-bluetooth-utils/#return","title":"Return","text":"<p>The BluetoothUtils interface.</p>"},{"location":"bluetooth/classic/classic/dev.atick.bluetooth.classic.di/-bluetooth-classic-module/provide-bluetooth-utils/#parameters","title":"Parameters","text":"<p>androidJvm</p> bluetoothClassic The Bluetooth Classic implementation."},{"location":"bluetooth/common/","title":"Index","text":"<p>//common</p>"},{"location":"bluetooth/common/#common","title":"common","text":""},{"location":"bluetooth/common/#packages","title":"Packages","text":"Name dev.atick.bluetooth.common.data dev.atick.bluetooth.common.di dev.atick.bluetooth.common.manager dev.atick.bluetooth.common.models dev.atick.bluetooth.common.receiver dev.atick.bluetooth.common.utils"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.data</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/#types","title":"Types","text":"Name Summary BluetoothDataSource [androidJvm]interface BluetoothDataSourceInterface representing a Bluetooth data source."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.data/BluetoothDataSource</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/#bluetoothdatasource","title":"BluetoothDataSource","text":"<p>[androidJvm]\\ interface BluetoothDataSource</p> <p>Interface representing a Bluetooth data source.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/#functions","title":"Functions","text":"Name Summary getBluetoothDataStream [androidJvm]abstract fun getBluetoothDataStream(): StateFlow&lt;BtMessage?&gt;Returns the state flow of Bluetooth messages received from the connected device. sendDataToBluetoothDevice [androidJvm]abstract suspend fun sendDataToBluetoothDevice(data: String): Result&lt;Unit&gt;Sends data to the connected Bluetooth device."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/get-bluetooth-data-stream/","title":"Get bluetooth data stream","text":"<p>//common/dev.atick.bluetooth.common.data/BluetoothDataSource/getBluetoothDataStream</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/get-bluetooth-data-stream/#getbluetoothdatastream","title":"getBluetoothDataStream","text":"<p>[androidJvm]\\ abstract fun getBluetoothDataStream(): StateFlow&lt;BtMessage?&gt;</p> <p>Returns the state flow of Bluetooth messages received from the connected device.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/get-bluetooth-data-stream/#return","title":"Return","text":"<p>The state flow of Bluetooth messages.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/send-data-to-bluetooth-device/","title":"Send data to bluetooth device","text":"<p>//common/dev.atick.bluetooth.common.data/BluetoothDataSource/sendDataToBluetoothDevice</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/send-data-to-bluetooth-device/#senddatatobluetoothdevice","title":"sendDataToBluetoothDevice","text":"<p>[androidJvm]\\ abstract suspend fun sendDataToBluetoothDevice(data: String): Result&lt;Unit&gt;</p> <p>Sends data to the connected Bluetooth device.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/send-data-to-bluetooth-device/#return","title":"Return","text":"<p>A result indicating the success or failure of sending the data.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.data/-bluetooth-data-source/send-data-to-bluetooth-device/#parameters","title":"Parameters","text":"<p>androidJvm</p> data The data to send."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.di</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/#types","title":"Types","text":"Name Summary BluetoothAdapterModule [androidJvm]@Moduleobject BluetoothAdapterModule"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/-bluetooth-adapter-module/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.di/BluetoothAdapterModule</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/-bluetooth-adapter-module/#bluetoothadaptermodule","title":"BluetoothAdapterModule","text":"<p>[androidJvm]\\ @Module</p> <p>object BluetoothAdapterModule</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/-bluetooth-adapter-module/#functions","title":"Functions","text":"Name Summary provideBluetoothAdapter [androidJvm]@Provides@Singletonfun provideBluetoothAdapter(context: Context): BluetoothAdapter?Provides the BluetoothAdapter instance."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/-bluetooth-adapter-module/provide-bluetooth-adapter/","title":"Provide bluetooth adapter","text":"<p>//common/dev.atick.bluetooth.common.di/BluetoothAdapterModule/provideBluetoothAdapter</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/-bluetooth-adapter-module/provide-bluetooth-adapter/#providebluetoothadapter","title":"provideBluetoothAdapter","text":"<p>[androidJvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideBluetoothAdapter(context: Context): BluetoothAdapter?</p> <p>Provides the BluetoothAdapter instance.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/-bluetooth-adapter-module/provide-bluetooth-adapter/#return","title":"Return","text":"<p>The BluetoothAdapter instance, or null if Bluetooth is not supported.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.di/-bluetooth-adapter-module/provide-bluetooth-adapter/#parameters","title":"Parameters","text":"<p>androidJvm</p> context The application context."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.manager</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/#types","title":"Types","text":"Name Summary BluetoothManager [androidJvm]interface BluetoothManagerBluetoothManager interface provides methods to manage Bluetooth connections."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.manager/BluetoothManager</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/#bluetoothmanager","title":"BluetoothManager","text":"<p>[androidJvm]\\ interface BluetoothManager</p> <p>BluetoothManager interface provides methods to manage Bluetooth connections.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/#functions","title":"Functions","text":"Name Summary closeConnection [androidJvm]abstract suspend fun closeConnection(): Result&lt;Unit&gt;Closes the existing Bluetooth connection. connect [androidJvm]abstract suspend fun connect(address: String): Result&lt;Unit&gt;Attempts to establish a Bluetooth connection with the specified device address. getConnectedDeviceState [androidJvm]abstract fun getConnectedDeviceState(): StateFlow&lt;BtDevice?&gt;Returns the state of the connected Bluetooth device."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/close-connection/","title":"Close connection","text":"<p>//common/dev.atick.bluetooth.common.manager/BluetoothManager/closeConnection</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/close-connection/#closeconnection","title":"closeConnection","text":"<p>[androidJvm]\\ abstract suspend fun closeConnection(): Result&lt;Unit&gt;</p> <p>Closes the existing Bluetooth connection.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/close-connection/#return","title":"Return","text":"<p>A Result indicating the success or failure of closing the connection.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/connect/","title":"Connect","text":"<p>//common/dev.atick.bluetooth.common.manager/BluetoothManager/connect</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/connect/#connect","title":"connect","text":"<p>[androidJvm]\\ abstract suspend fun connect(address: String): Result&lt;Unit&gt;</p> <p>Attempts to establish a Bluetooth connection with the specified device address.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/connect/#return","title":"Return","text":"<p>A Result indicating the success or failure of the connection attempt.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/connect/#parameters","title":"Parameters","text":"<p>androidJvm</p> address The address of the Bluetooth device to connect to."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/get-connected-device-state/","title":"Get connected device state","text":"<p>//common/dev.atick.bluetooth.common.manager/BluetoothManager/getConnectedDeviceState</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/get-connected-device-state/#getconnecteddevicestate","title":"getConnectedDeviceState","text":"<p>[androidJvm]\\ abstract fun getConnectedDeviceState(): StateFlow&lt;BtDevice?&gt;</p> <p>Returns the state of the connected Bluetooth device.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.manager/-bluetooth-manager/get-connected-device-state/#return","title":"Return","text":"<p>A StateFlow emitting the current state of the connected Bluetooth device.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/#types","title":"Types","text":"Name Summary BtDevice [androidJvm]data class BtDevice(val name: String, val address: String, val type: BtDeviceType, val connected: Boolean)Represents a Bluetooth device. BtDeviceType [androidJvm]enum BtDeviceType : Enum&lt;BtDeviceType&gt; Enum class representing the type of a Bluetooth device. BtMessage [androidJvm]data class BtMessage(val timestamp: Long = Date().time, val message: CharSequence)Data class representing a Bluetooth message. BtState [androidJvm]enum BtState : Enum&lt;BtState&gt; Enum class representing the Bluetooth state."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/#functions","title":"Functions","text":"Name Summary simplify [androidJvm]fun BluetoothDevice.simplify(connected: Boolean = false): BtDeviceConverts a BluetoothDevice object to a simplified BtDevice object."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/simplify/","title":"Simplify","text":"<p>//common/dev.atick.bluetooth.common.models/simplify</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/simplify/#simplify","title":"simplify","text":"<p>[androidJvm]\\ fun BluetoothDevice.simplify(connected: Boolean = false): BtDevice</p> <p>Converts a BluetoothDevice object to a simplified BtDevice object.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/simplify/#return","title":"Return","text":"<p>A simplified BtDevice object.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/simplify/#parameters","title":"Parameters","text":"<p>androidJvm</p> connected Indicates whether the Bluetooth device is connected."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDevice</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/#btdevice","title":"BtDevice","text":"<p>[androidJvm]\\ data class BtDevice(val name: String, val address: String, val type: BtDeviceType, val connected: Boolean)</p> <p>Represents a Bluetooth device.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/#constructors","title":"Constructors","text":"BtDevice [androidJvm]constructor(name: String, address: String, type: BtDeviceType, connected: Boolean)"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/#properties","title":"Properties","text":"Name Summary address [androidJvm]val address: StringThe address of the Bluetooth device. connected [androidJvm]val connected: BooleanIndicates whether the Bluetooth device is currently connected. name [androidJvm]val name: StringThe name of the Bluetooth device. type [androidJvm]val type: BtDeviceTypeThe type of the Bluetooth device."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/-bt-device/","title":"bt device","text":"<p>//common/dev.atick.bluetooth.common.models/BtDevice/BtDevice</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/-bt-device/#btdevice","title":"BtDevice","text":"<p>[androidJvm]\\ constructor(name: String, address: String, type: BtDeviceType, connected: Boolean)</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/address/","title":"Address","text":"<p>//common/dev.atick.bluetooth.common.models/BtDevice/address</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/address/#address","title":"address","text":"<p>[androidJvm]\\ val address: String</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/connected/","title":"Connected","text":"<p>//common/dev.atick.bluetooth.common.models/BtDevice/connected</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/connected/#connected","title":"connected","text":"<p>[androidJvm]\\ val connected: Boolean</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/name/","title":"Name","text":"<p>//common/dev.atick.bluetooth.common.models/BtDevice/name</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/name/#name","title":"name","text":"<p>[androidJvm]\\ val name: String</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/type/","title":"Type","text":"<p>//common/dev.atick.bluetooth.common.models/BtDevice/type</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device/type/#type","title":"type","text":"<p>[androidJvm]\\ val type: BtDeviceType</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/#btdevicetype","title":"BtDeviceType","text":"<p>[androidJvm]\\ enum BtDeviceType : Enum&lt;BtDeviceType&gt; </p> <p>Enum class representing the type of a Bluetooth device.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/#entries","title":"Entries","text":"AUDIO_VIDEO [androidJvm]AUDIO_VIDEO COMPUTER [androidJvm]COMPUTER HEALTH [androidJvm]HEALTH IMAGING [androidJvm]IMAGING MISC [androidJvm]MISC NETWORKING [androidJvm]NETWORKING PERIPHERAL [androidJvm]PERIPHERAL PHONE [androidJvm]PHONE TOY [androidJvm]TOY UNCATEGORIZED [androidJvm]UNCATEGORIZED WEARABLE [androidJvm]WEARABLE"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/#functions","title":"Functions","text":"Name Summary valueOf [androidJvm]fun valueOf(value: String): BtDeviceTypeReturns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) values [androidJvm]fun values(): Array&lt;BtDeviceType&gt;Returns an array containing the constants of this enum type, in the order they're declared."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/value-of/","title":"Value of","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/valueOf</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm]\\ fun valueOf(value: String): BtDeviceType</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/values/","title":"Values","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/values</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/values/#values","title":"values","text":"<p>[androidJvm]\\ fun values(): Array&lt;BtDeviceType&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-a-u-d-i-o_-v-i-d-e-o/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/AUDIO_VIDEO</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-a-u-d-i-o_-v-i-d-e-o/#audio_video","title":"AUDIO_VIDEO","text":"<p>[androidJvm]\\ AUDIO_VIDEO</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-a-u-d-i-o_-v-i-d-e-o/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-c-o-m-p-u-t-e-r/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/COMPUTER</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-c-o-m-p-u-t-e-r/#computer","title":"COMPUTER","text":"<p>[androidJvm]\\ COMPUTER</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-c-o-m-p-u-t-e-r/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-h-e-a-l-t-h/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/HEALTH</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-h-e-a-l-t-h/#health","title":"HEALTH","text":"<p>[androidJvm]\\ HEALTH</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-h-e-a-l-t-h/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-i-m-a-g-i-n-g/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/IMAGING</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-i-m-a-g-i-n-g/#imaging","title":"IMAGING","text":"<p>[androidJvm]\\ IMAGING</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-i-m-a-g-i-n-g/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-m-i-s-c/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/MISC</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-m-i-s-c/#misc","title":"MISC","text":"<p>[androidJvm]\\ MISC</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-m-i-s-c/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-n-e-t-w-o-r-k-i-n-g/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/NETWORKING</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-n-e-t-w-o-r-k-i-n-g/#networking","title":"NETWORKING","text":"<p>[androidJvm]\\ NETWORKING</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-n-e-t-w-o-r-k-i-n-g/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-p-e-r-i-p-h-e-r-a-l/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/PERIPHERAL</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-p-e-r-i-p-h-e-r-a-l/#peripheral","title":"PERIPHERAL","text":"<p>[androidJvm]\\ PERIPHERAL</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-p-e-r-i-p-h-e-r-a-l/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-p-h-o-n-e/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/PHONE</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-p-h-o-n-e/#phone","title":"PHONE","text":"<p>[androidJvm]\\ PHONE</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-p-h-o-n-e/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-t-o-y/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/TOY</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-t-o-y/#toy","title":"TOY","text":"<p>[androidJvm]\\ TOY</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-t-o-y/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-u-n-c-a-t-e-g-o-r-i-z-e-d/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/UNCATEGORIZED</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-u-n-c-a-t-e-g-o-r-i-z-e-d/#uncategorized","title":"UNCATEGORIZED","text":"<p>[androidJvm]\\ UNCATEGORIZED</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-u-n-c-a-t-e-g-o-r-i-z-e-d/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-w-e-a-r-a-b-l-e/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtDeviceType/WEARABLE</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-w-e-a-r-a-b-l-e/#wearable","title":"WEARABLE","text":"<p>[androidJvm]\\ WEARABLE</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-device-type/-w-e-a-r-a-b-l-e/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtMessage</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/#btmessage","title":"BtMessage","text":"<p>[androidJvm]\\ data class BtMessage(val timestamp: Long = Date().time, val message: CharSequence)</p> <p>Data class representing a Bluetooth message.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/#constructors","title":"Constructors","text":"BtMessage [androidJvm]constructor(timestamp: Long = Date().time, message: CharSequence)"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/#properties","title":"Properties","text":"Name Summary message [androidJvm]val message: CharSequenceThe content of the message. timestamp [androidJvm]val timestamp: LongThe timestamp of the message."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/-bt-message/","title":"bt message","text":"<p>//common/dev.atick.bluetooth.common.models/BtMessage/BtMessage</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/-bt-message/#btmessage","title":"BtMessage","text":"<p>[androidJvm]\\ constructor(timestamp: Long = Date().time, message: CharSequence)</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/message/","title":"Message","text":"<p>//common/dev.atick.bluetooth.common.models/BtMessage/message</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/message/#message","title":"message","text":"<p>[androidJvm]\\ val message: CharSequence</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/timestamp/","title":"Timestamp","text":"<p>//common/dev.atick.bluetooth.common.models/BtMessage/timestamp</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-message/timestamp/#timestamp","title":"timestamp","text":"<p>[androidJvm]\\ val timestamp: Long</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtState</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/#btstate","title":"BtState","text":"<p>[androidJvm]\\ enum BtState : Enum&lt;BtState&gt; </p> <p>Enum class representing the Bluetooth state.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/#entries","title":"Entries","text":"ENABLED [androidJvm]ENABLEDBluetooth is enabled. DISABLED [androidJvm]DISABLEDBluetooth is disabled."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/#functions","title":"Functions","text":"Name Summary valueOf [androidJvm]fun valueOf(value: String): BtStateReturns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) values [androidJvm]fun values(): Array&lt;BtState&gt;Returns an array containing the constants of this enum type, in the order they're declared."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/value-of/","title":"Value of","text":"<p>//common/dev.atick.bluetooth.common.models/BtState/valueOf</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm]\\ fun valueOf(value: String): BtState</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/values/","title":"Values","text":"<p>//common/dev.atick.bluetooth.common.models/BtState/values</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/values/#values","title":"values","text":"<p>[androidJvm]\\ fun values(): Array&lt;BtState&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/-d-i-s-a-b-l-e-d/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtState/DISABLED</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/-d-i-s-a-b-l-e-d/#disabled","title":"DISABLED","text":"<p>[androidJvm]\\ DISABLED</p> <p>Bluetooth is disabled.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/-d-i-s-a-b-l-e-d/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/-e-n-a-b-l-e-d/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.models/BtState/ENABLED</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/-e-n-a-b-l-e-d/#enabled","title":"ENABLED","text":"<p>[androidJvm]\\ ENABLED</p> <p>Bluetooth is enabled.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.models/-bt-state/-e-n-a-b-l-e-d/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.receiver</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/#types","title":"Types","text":"Name Summary BluetoothStateReceiver [androidJvm]class BluetoothStateReceiver(onBtStateChange: (BtState) -&gt; Unit) : BroadcastReceiverBroadcastReceiver for receiving Bluetooth state changes. DeviceStateReceiver [androidJvm]class DeviceStateReceiver(onConnectionStateChange: (BtDevice) -&gt; Unit) : BroadcastReceiverBroadcastReceiver for receiving Bluetooth device connection state changes. ScannedDeviceReceiver [androidJvm]class ScannedDeviceReceiver(onDeviceFound: (BtDevice) -&gt; Unit) : BroadcastReceiverBroadcastReceiver for receiving Bluetooth device discovery events."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.receiver/BluetoothStateReceiver</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/#bluetoothstatereceiver","title":"BluetoothStateReceiver","text":"<p>class BluetoothStateReceiver(onBtStateChange: (BtState) -&gt; Unit) : BroadcastReceiver</p> <p>BroadcastReceiver for receiving Bluetooth state changes.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/#parameters","title":"Parameters","text":"<p>androidJvm</p> onBtStateChange Callback function to handle Bluetooth state changes."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/#constructors","title":"Constructors","text":"BluetoothStateReceiver [androidJvm]constructor(onBtStateChange: (BtState) -&gt; Unit)"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/#functions","title":"Functions","text":"Name Summary abortBroadcast [androidJvm]fun abortBroadcast() clearAbortBroadcast [androidJvm]fun clearAbortBroadcast() getAbortBroadcast [androidJvm]fun getAbortBroadcast(): Boolean getDebugUnregister [androidJvm]fun getDebugUnregister(): Boolean getResultCode [androidJvm]fun getResultCode(): Int getResultData [androidJvm]fun getResultData(): String getResultExtras [androidJvm]fun getResultExtras(p0: Boolean): Bundle goAsync [androidJvm]fun goAsync(): BroadcastReceiver.PendingResult isInitialStickyBroadcast [androidJvm]fun isInitialStickyBroadcast(): Boolean isOrderedBroadcast [androidJvm]fun isOrderedBroadcast(): Boolean onReceive [androidJvm]open override fun onReceive(context: Context?, intent: Intent?)Called when a broadcast is received. peekService [androidJvm]open fun peekService(p0: Context, p1: Intent): IBinder setDebugUnregister [androidJvm]fun setDebugUnregister(p0: Boolean) setOrderedHint [androidJvm]fun setOrderedHint(p0: Boolean) setResult [androidJvm]fun setResult(p0: Int, p1: String, p2: Bundle) setResultCode [androidJvm]fun setResultCode(p0: Int) setResultData [androidJvm]fun setResultData(p0: String) setResultExtras [androidJvm]fun setResultExtras(p0: Bundle)"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/-bluetooth-state-receiver/","title":"bluetooth state receiver","text":"<p>//common/dev.atick.bluetooth.common.receiver/BluetoothStateReceiver/BluetoothStateReceiver</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/-bluetooth-state-receiver/#bluetoothstatereceiver","title":"BluetoothStateReceiver","text":"<p>[androidJvm]\\ constructor(onBtStateChange: (BtState) -&gt; Unit)</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/-bluetooth-state-receiver/#parameters","title":"Parameters","text":"<p>androidJvm</p> onBtStateChange Callback function to handle Bluetooth state changes."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/on-receive/","title":"On receive","text":"<p>//common/dev.atick.bluetooth.common.receiver/BluetoothStateReceiver/onReceive</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/on-receive/#onreceive","title":"onReceive","text":"<p>[androidJvm]\\ open override fun onReceive(context: Context?, intent: Intent?)</p> <p>Called when a broadcast is received.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-bluetooth-state-receiver/on-receive/#parameters","title":"Parameters","text":"<p>androidJvm</p> context The context of the receiver. intent The intent containing the broadcast information."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.receiver/DeviceStateReceiver</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/#devicestatereceiver","title":"DeviceStateReceiver","text":"<p>class DeviceStateReceiver(onConnectionStateChange: (BtDevice) -&gt; Unit) : BroadcastReceiver</p> <p>BroadcastReceiver for receiving Bluetooth device connection state changes.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/#parameters","title":"Parameters","text":"<p>androidJvm</p> onConnectionStateChange Callback function to handle Bluetooth device connection state changes."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/#constructors","title":"Constructors","text":"DeviceStateReceiver [androidJvm]constructor(onConnectionStateChange: (BtDevice) -&gt; Unit)"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/#functions","title":"Functions","text":"Name Summary abortBroadcast [androidJvm]fun abortBroadcast() clearAbortBroadcast [androidJvm]fun clearAbortBroadcast() getAbortBroadcast [androidJvm]fun getAbortBroadcast(): Boolean getDebugUnregister [androidJvm]fun getDebugUnregister(): Boolean getResultCode [androidJvm]fun getResultCode(): Int getResultData [androidJvm]fun getResultData(): String getResultExtras [androidJvm]fun getResultExtras(p0: Boolean): Bundle goAsync [androidJvm]fun goAsync(): BroadcastReceiver.PendingResult isInitialStickyBroadcast [androidJvm]fun isInitialStickyBroadcast(): Boolean isOrderedBroadcast [androidJvm]fun isOrderedBroadcast(): Boolean onReceive [androidJvm]open override fun onReceive(context: Context?, intent: Intent?)Called when a broadcast is received. peekService [androidJvm]open fun peekService(p0: Context, p1: Intent): IBinder setDebugUnregister [androidJvm]fun setDebugUnregister(p0: Boolean) setOrderedHint [androidJvm]fun setOrderedHint(p0: Boolean) setResult [androidJvm]fun setResult(p0: Int, p1: String, p2: Bundle) setResultCode [androidJvm]fun setResultCode(p0: Int) setResultData [androidJvm]fun setResultData(p0: String) setResultExtras [androidJvm]fun setResultExtras(p0: Bundle)"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/-device-state-receiver/","title":"device state receiver","text":"<p>//common/dev.atick.bluetooth.common.receiver/DeviceStateReceiver/DeviceStateReceiver</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/-device-state-receiver/#devicestatereceiver","title":"DeviceStateReceiver","text":"<p>[androidJvm]\\ constructor(onConnectionStateChange: (BtDevice) -&gt; Unit)</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/-device-state-receiver/#parameters","title":"Parameters","text":"<p>androidJvm</p> onConnectionStateChange Callback function to handle Bluetooth device connection state changes."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/on-receive/","title":"On receive","text":"<p>//common/dev.atick.bluetooth.common.receiver/DeviceStateReceiver/onReceive</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/on-receive/#onreceive","title":"onReceive","text":"<p>[androidJvm]\\ open override fun onReceive(context: Context?, intent: Intent?)</p> <p>Called when a broadcast is received.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-device-state-receiver/on-receive/#parameters","title":"Parameters","text":"<p>androidJvm</p> context The context of the receiver. intent The intent containing the broadcast information."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.receiver/ScannedDeviceReceiver</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/#scanneddevicereceiver","title":"ScannedDeviceReceiver","text":"<p>class ScannedDeviceReceiver(onDeviceFound: (BtDevice) -&gt; Unit) : BroadcastReceiver</p> <p>BroadcastReceiver for receiving Bluetooth device discovery events.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/#parameters","title":"Parameters","text":"<p>androidJvm</p> onDeviceFound Callback function to handle discovered Bluetooth devices."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/#constructors","title":"Constructors","text":"ScannedDeviceReceiver [androidJvm]constructor(onDeviceFound: (BtDevice) -&gt; Unit)"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/#functions","title":"Functions","text":"Name Summary abortBroadcast [androidJvm]fun abortBroadcast() clearAbortBroadcast [androidJvm]fun clearAbortBroadcast() getAbortBroadcast [androidJvm]fun getAbortBroadcast(): Boolean getDebugUnregister [androidJvm]fun getDebugUnregister(): Boolean getResultCode [androidJvm]fun getResultCode(): Int getResultData [androidJvm]fun getResultData(): String getResultExtras [androidJvm]fun getResultExtras(p0: Boolean): Bundle goAsync [androidJvm]fun goAsync(): BroadcastReceiver.PendingResult isInitialStickyBroadcast [androidJvm]fun isInitialStickyBroadcast(): Boolean isOrderedBroadcast [androidJvm]fun isOrderedBroadcast(): Boolean onReceive [androidJvm]open override fun onReceive(context: Context?, intent: Intent?)Called when a broadcast is received. peekService [androidJvm]open fun peekService(p0: Context, p1: Intent): IBinder setDebugUnregister [androidJvm]fun setDebugUnregister(p0: Boolean) setOrderedHint [androidJvm]fun setOrderedHint(p0: Boolean) setResult [androidJvm]fun setResult(p0: Int, p1: String, p2: Bundle) setResultCode [androidJvm]fun setResultCode(p0: Int) setResultData [androidJvm]fun setResultData(p0: String) setResultExtras [androidJvm]fun setResultExtras(p0: Bundle)"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/-scanned-device-receiver/","title":"scanned device receiver","text":"<p>//common/dev.atick.bluetooth.common.receiver/ScannedDeviceReceiver/ScannedDeviceReceiver</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/-scanned-device-receiver/#scanneddevicereceiver","title":"ScannedDeviceReceiver","text":"<p>[androidJvm]\\ constructor(onDeviceFound: (BtDevice) -&gt; Unit)</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/-scanned-device-receiver/#parameters","title":"Parameters","text":"<p>androidJvm</p> onDeviceFound Callback function to handle discovered Bluetooth devices."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/on-receive/","title":"On receive","text":"<p>//common/dev.atick.bluetooth.common.receiver/ScannedDeviceReceiver/onReceive</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/on-receive/#onreceive","title":"onReceive","text":"<p>[androidJvm]\\ open override fun onReceive(context: Context?, intent: Intent?)</p> <p>Called when a broadcast is received.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.receiver/-scanned-device-receiver/on-receive/#parameters","title":"Parameters","text":"<p>androidJvm</p> context The context of the receiver. intent The intent containing the broadcast information."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.utils</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/#types","title":"Types","text":"Name Summary BluetoothUtils [androidJvm]interface BluetoothUtilsInterface defining Bluetooth utility methods."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/","title":"Index","text":"<p>//common/dev.atick.bluetooth.common.utils/BluetoothUtils</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/#bluetoothutils","title":"BluetoothUtils","text":"<p>[androidJvm]\\ interface BluetoothUtils</p> <p>Interface defining Bluetooth utility methods.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/#functions","title":"Functions","text":"Name Summary getBluetoothState [androidJvm]abstract fun getBluetoothState(): StateFlow&lt;BtState&gt;Retrieves the current state of Bluetooth. getPairedDevices [androidJvm]abstract fun getPairedDevices(): StateFlow&lt;List&lt;BtDevice&gt;&gt;Retrieves the list of paired Bluetooth devices. getScannedDevices [androidJvm]abstract fun getScannedDevices(): StateFlow&lt;List&lt;BtDevice&gt;&gt;Retrieves the list of scanned Bluetooth devices. stopDiscovery [androidJvm]abstract fun stopDiscovery()Stops the Bluetooth device discovery process."},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/get-bluetooth-state/","title":"Get bluetooth state","text":"<p>//common/dev.atick.bluetooth.common.utils/BluetoothUtils/getBluetoothState</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/get-bluetooth-state/#getbluetoothstate","title":"getBluetoothState","text":"<p>[androidJvm]\\ abstract fun getBluetoothState(): StateFlow&lt;BtState&gt;</p> <p>Retrieves the current state of Bluetooth.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/get-bluetooth-state/#return","title":"Return","text":"<p>A StateFlow emitting the current Bluetooth state.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/get-paired-devices/","title":"Get paired devices","text":"<p>//common/dev.atick.bluetooth.common.utils/BluetoothUtils/getPairedDevices</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/get-paired-devices/#getpaireddevices","title":"getPairedDevices","text":"<p>[androidJvm]\\ abstract fun getPairedDevices(): StateFlow&lt;List&lt;BtDevice&gt;&gt;</p> <p>Retrieves the list of paired Bluetooth devices.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/get-paired-devices/#return","title":"Return","text":"<p>A StateFlow emitting the list of paired Bluetooth devices.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/get-scanned-devices/","title":"Get scanned devices","text":"<p>//common/dev.atick.bluetooth.common.utils/BluetoothUtils/getScannedDevices</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/get-scanned-devices/#getscanneddevices","title":"getScannedDevices","text":"<p>[androidJvm]\\ abstract fun getScannedDevices(): StateFlow&lt;List&lt;BtDevice&gt;&gt;</p> <p>Retrieves the list of scanned Bluetooth devices.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/get-scanned-devices/#return","title":"Return","text":"<p>A StateFlow emitting the list of scanned Bluetooth devices.</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/stop-discovery/","title":"Stop discovery","text":"<p>//common/dev.atick.bluetooth.common.utils/BluetoothUtils/stopDiscovery</p>"},{"location":"bluetooth/common/common/dev.atick.bluetooth.common.utils/-bluetooth-utils/stop-discovery/#stopdiscovery","title":"stopDiscovery","text":"<p>[androidJvm]\\ abstract fun stopDiscovery()</p> <p>Stops the Bluetooth device discovery process.</p>"},{"location":"core/android/","title":"Index","text":"<p>//android</p>"},{"location":"core/android/#android","title":"android","text":""},{"location":"core/android/#packages","title":"Packages","text":"Name dev.atick.core.di dev.atick.core.extensions dev.atick.core.utils"},{"location":"core/android/android/dev.atick.core.di/","title":"Index","text":"<p>//android/dev.atick.core.di</p>"},{"location":"core/android/android/dev.atick.core.di/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"core/android/android/dev.atick.core.di/#types","title":"Types","text":"Name Summary DefaultDispatcher [androidJvm]@Qualifierannotation class DefaultDispatcherAnnotation used to mark the default coroutine dispatcher. DispatcherModule [androidJvm]@Moduleobject DispatcherModuleDagger module that provides coroutine dispatchers for different contexts. IoDispatcher [androidJvm]@Qualifierannotation class IoDispatcherAnnotation used to mark the I/O coroutine dispatcher. MainDispatcher [androidJvm]@Qualifierannotation class MainDispatcherAnnotation used to mark the main coroutine dispatcher."},{"location":"core/android/android/dev.atick.core.di/-default-dispatcher/","title":"Index","text":"<p>//android/dev.atick.core.di/DefaultDispatcher</p>"},{"location":"core/android/android/dev.atick.core.di/-default-dispatcher/#defaultdispatcher","title":"DefaultDispatcher","text":"<p>[androidJvm]\\ @Qualifier</p> <p>annotation class DefaultDispatcher</p> <p>Annotation used to mark the default coroutine dispatcher.</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/","title":"Index","text":"<p>//android/dev.atick.core.di/DispatcherModule</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/#dispatchermodule","title":"DispatcherModule","text":"<p>[androidJvm]\\ @Module</p> <p>object DispatcherModule</p> <p>Dagger module that provides coroutine dispatchers for different contexts.</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/#functions","title":"Functions","text":"Name Summary providesDefaultDispatcher [androidJvm]@Providesfun providesDefaultDispatcher(): CoroutineDispatcherProvides the default coroutine dispatcher, which is used for general-purpose background tasks. providesIoDispatcher [androidJvm]@Providesfun providesIoDispatcher(): CoroutineDispatcherProvides the I/O coroutine dispatcher, which is used for I/O-bound tasks such as disk or network operations. providesMainDispatcher [androidJvm]@Providesfun providesMainDispatcher(): CoroutineDispatcherProvides the main coroutine dispatcher, which is used for executing tasks on the main/UI thread."},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/provides-default-dispatcher/","title":"Provides default dispatcher","text":"<p>//android/dev.atick.core.di/DispatcherModule/providesDefaultDispatcher</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/provides-default-dispatcher/#providesdefaultdispatcher","title":"providesDefaultDispatcher","text":"<p>[androidJvm]\\</p> <p>@Provides</p> <p>fun providesDefaultDispatcher(): CoroutineDispatcher</p> <p>Provides the default coroutine dispatcher, which is used for general-purpose background tasks.</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/provides-default-dispatcher/#return","title":"Return","text":"<p>The default coroutine dispatcher.</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/provides-io-dispatcher/","title":"Provides io dispatcher","text":"<p>//android/dev.atick.core.di/DispatcherModule/providesIoDispatcher</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/provides-io-dispatcher/#providesiodispatcher","title":"providesIoDispatcher","text":"<p>[androidJvm]\\</p> <p>@Provides</p> <p>fun providesIoDispatcher(): CoroutineDispatcher</p> <p>Provides the I/O coroutine dispatcher, which is used for I/O-bound tasks such as disk or network operations.</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/provides-io-dispatcher/#return","title":"Return","text":"<p>The I/O coroutine dispatcher.</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/provides-main-dispatcher/","title":"Provides main dispatcher","text":"<p>//android/dev.atick.core.di/DispatcherModule/providesMainDispatcher</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/provides-main-dispatcher/#providesmaindispatcher","title":"providesMainDispatcher","text":"<p>[androidJvm]\\</p> <p>@Provides</p> <p>fun providesMainDispatcher(): CoroutineDispatcher</p> <p>Provides the main coroutine dispatcher, which is used for executing tasks on the main/UI thread.</p>"},{"location":"core/android/android/dev.atick.core.di/-dispatcher-module/provides-main-dispatcher/#return","title":"Return","text":"<p>The main coroutine dispatcher.</p>"},{"location":"core/android/android/dev.atick.core.di/-io-dispatcher/","title":"Index","text":"<p>//android/dev.atick.core.di/IoDispatcher</p>"},{"location":"core/android/android/dev.atick.core.di/-io-dispatcher/#iodispatcher","title":"IoDispatcher","text":"<p>[androidJvm]\\ @Qualifier</p> <p>annotation class IoDispatcher</p> <p>Annotation used to mark the I/O coroutine dispatcher.</p>"},{"location":"core/android/android/dev.atick.core.di/-main-dispatcher/","title":"Index","text":"<p>//android/dev.atick.core.di/MainDispatcher</p>"},{"location":"core/android/android/dev.atick.core.di/-main-dispatcher/#maindispatcher","title":"MainDispatcher","text":"<p>[androidJvm]\\ @Qualifier</p> <p>annotation class MainDispatcher</p> <p>Annotation used to mark the main coroutine dispatcher.</p>"},{"location":"core/android/android/dev.atick.core.extensions/","title":"Index","text":"<p>//android/dev.atick.core.extensions</p>"},{"location":"core/android/android/dev.atick.core.extensions/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"core/android/android/dev.atick.core.extensions/#functions","title":"Functions","text":"Name Summary cancelNotification [androidJvm]fun Context.cancelNotification(notificationId: Int)Cancels a previously shown notification. getFileFromContentUri [androidJvm]fun Context.getFileFromContentUri(contentUri: Uri): File?Retrieves a File object from the given content URI. getTmpFileUri [androidJvm]fun Context.getTmpFileUri(appId: String): UriRetrieves a temporary file URI for the specified app ID. hasPermission [androidJvm]fun Context.hasPermission(permission: String): BooleanChecks if the app has a given permission. isAllPermissionsGranted [androidJvm]fun Context.isAllPermissionsGranted(permissions: List&lt;String&gt;): BooleanChecks if all the given permissions are granted. isEmailValid [androidJvm]fun String?.isEmailValid(): BooleanChecks if the string is a valid email address. isPasswordValid [androidJvm]fun String?.isPasswordValid(): BooleanChecks if the string is a valid password based on the specified criteria. showNotification [androidJvm]fun Context.showNotification(notificationId: Int, notification: Notification)Shows a notification using the specified notification ID and notification object. showToast [androidJvm]fun Context.showToast(message: String)Displays a short toast message. stateInDelayed [androidJvm]fun &lt;T&gt; Flow&lt;T&gt;.stateInDelayed(initialValue: T, scope: CoroutineScope): StateFlow&lt;T&gt;Returns a StateFlow that represents the last value emitted by the Flow"},{"location":"core/android/android/dev.atick.core.extensions/cancel-notification/","title":"Cancel notification","text":"<p>//android/dev.atick.core.extensions/cancelNotification</p>"},{"location":"core/android/android/dev.atick.core.extensions/cancel-notification/#cancelnotification","title":"cancelNotification","text":"<p>[androidJvm]\\ fun Context.cancelNotification(notificationId: Int)</p> <p>Cancels a previously shown notification.</p>"},{"location":"core/android/android/dev.atick.core.extensions/cancel-notification/#parameters","title":"Parameters","text":"<p>androidJvm</p> notificationId The ID of the notification to be canceled."},{"location":"core/android/android/dev.atick.core.extensions/get-file-from-content-uri/","title":"Get file from content uri","text":"<p>//android/dev.atick.core.extensions/getFileFromContentUri</p>"},{"location":"core/android/android/dev.atick.core.extensions/get-file-from-content-uri/#getfilefromcontenturi","title":"getFileFromContentUri","text":"<p>[androidJvm]\\ fun Context.getFileFromContentUri(contentUri: Uri): File?</p> <p>Retrieves a File object from the given content URI.</p>"},{"location":"core/android/android/dev.atick.core.extensions/get-file-from-content-uri/#return","title":"Return","text":"<p>The File object representing the content URI, or <code>null</code> if an error occurred.</p>"},{"location":"core/android/android/dev.atick.core.extensions/get-file-from-content-uri/#parameters","title":"Parameters","text":"<p>androidJvm</p> contentUri The content URI of the file."},{"location":"core/android/android/dev.atick.core.extensions/get-tmp-file-uri/","title":"Get tmp file uri","text":"<p>//android/dev.atick.core.extensions/getTmpFileUri</p>"},{"location":"core/android/android/dev.atick.core.extensions/get-tmp-file-uri/#gettmpfileuri","title":"getTmpFileUri","text":"<p>[androidJvm]\\ fun Context.getTmpFileUri(appId: String): Uri</p> <p>Retrieves a temporary file URI for the specified app ID.</p>"},{"location":"core/android/android/dev.atick.core.extensions/get-tmp-file-uri/#return","title":"Return","text":"<p>The URI of the temporary file.</p>"},{"location":"core/android/android/dev.atick.core.extensions/get-tmp-file-uri/#parameters","title":"Parameters","text":"<p>androidJvm</p> appId The ID of the app."},{"location":"core/android/android/dev.atick.core.extensions/get-tmp-file-uri/#throws","title":"Throws","text":"IllegalAccessException if unable to create or retrieve the temporary file."},{"location":"core/android/android/dev.atick.core.extensions/has-permission/","title":"Has permission","text":"<p>//android/dev.atick.core.extensions/hasPermission</p>"},{"location":"core/android/android/dev.atick.core.extensions/has-permission/#haspermission","title":"hasPermission","text":"<p>[androidJvm]\\ fun Context.hasPermission(permission: String): Boolean</p> <p>Checks if the app has a given permission.</p>"},{"location":"core/android/android/dev.atick.core.extensions/has-permission/#return","title":"Return","text":"<p><code>true</code> if the permission is granted, <code>false</code> otherwise.</p>"},{"location":"core/android/android/dev.atick.core.extensions/has-permission/#parameters","title":"Parameters","text":"<p>androidJvm</p> permission The permission to check."},{"location":"core/android/android/dev.atick.core.extensions/is-all-permissions-granted/","title":"Is all permissions granted","text":"<p>//android/dev.atick.core.extensions/isAllPermissionsGranted</p>"},{"location":"core/android/android/dev.atick.core.extensions/is-all-permissions-granted/#isallpermissionsgranted","title":"isAllPermissionsGranted","text":"<p>[androidJvm]\\ fun Context.isAllPermissionsGranted(permissions: List&lt;String&gt;): Boolean</p> <p>Checks if all the given permissions are granted.</p>"},{"location":"core/android/android/dev.atick.core.extensions/is-all-permissions-granted/#return","title":"Return","text":"<p><code>true</code> if all permissions are granted, <code>false</code> otherwise.</p>"},{"location":"core/android/android/dev.atick.core.extensions/is-all-permissions-granted/#parameters","title":"Parameters","text":"<p>androidJvm</p> permissions List of permissions to check."},{"location":"core/android/android/dev.atick.core.extensions/is-email-valid/","title":"Is email valid","text":"<p>//android/dev.atick.core.extensions/isEmailValid</p>"},{"location":"core/android/android/dev.atick.core.extensions/is-email-valid/#isemailvalid","title":"isEmailValid","text":"<p>[androidJvm]\\ fun String?.isEmailValid(): Boolean</p> <p>Checks if the string is a valid email address.</p>"},{"location":"core/android/android/dev.atick.core.extensions/is-email-valid/#return","title":"Return","text":"<p><code>true</code> if the string is a valid email address, <code>false</code> otherwise.</p>"},{"location":"core/android/android/dev.atick.core.extensions/is-password-valid/","title":"Is password valid","text":"<p>//android/dev.atick.core.extensions/isPasswordValid</p>"},{"location":"core/android/android/dev.atick.core.extensions/is-password-valid/#ispasswordvalid","title":"isPasswordValid","text":"<p>[androidJvm]\\ fun String?.isPasswordValid(): Boolean</p> <p>Checks if the string is a valid password based on the specified criteria.</p>"},{"location":"core/android/android/dev.atick.core.extensions/is-password-valid/#return","title":"Return","text":"<p><code>true</code> if the string is a valid password, <code>false</code> otherwise.</p>"},{"location":"core/android/android/dev.atick.core.extensions/show-notification/","title":"Show notification","text":"<p>//android/dev.atick.core.extensions/showNotification</p>"},{"location":"core/android/android/dev.atick.core.extensions/show-notification/#shownotification","title":"showNotification","text":"<p>[androidJvm]\\ fun Context.showNotification(notificationId: Int, notification: Notification)</p> <p>Shows a notification using the specified notification ID and notification object.</p>"},{"location":"core/android/android/dev.atick.core.extensions/show-notification/#parameters","title":"Parameters","text":"<p>androidJvm</p> notificationId The ID of the notification. notification The notification object to be shown."},{"location":"core/android/android/dev.atick.core.extensions/show-toast/","title":"Show toast","text":"<p>//android/dev.atick.core.extensions/showToast</p>"},{"location":"core/android/android/dev.atick.core.extensions/show-toast/#showtoast","title":"showToast","text":"<p>[androidJvm]\\ fun Context.showToast(message: String)</p> <p>Displays a short toast message.</p>"},{"location":"core/android/android/dev.atick.core.extensions/show-toast/#parameters","title":"Parameters","text":"<p>androidJvm</p> message The message to be displayed in the toast."},{"location":"core/android/android/dev.atick.core.extensions/state-in-delayed/","title":"State in delayed","text":"<p>//android/dev.atick.core.extensions/stateInDelayed</p>"},{"location":"core/android/android/dev.atick.core.extensions/state-in-delayed/#stateindelayed","title":"stateInDelayed","text":"<p>[androidJvm]\\ fun &lt;T&gt; Flow&lt;T&gt;.stateInDelayed(initialValue: T, scope: CoroutineScope): StateFlow&lt;T&gt;</p> <p>Returns a StateFlow that represents the last value emitted by the Flow</p>"},{"location":"core/android/android/dev.atick.core.extensions/state-in-delayed/#return","title":"Return","text":"<p>A StateFlow that represents the last value emitted by the Flow</p>"},{"location":"core/android/android/dev.atick.core.extensions/state-in-delayed/#parameters","title":"Parameters","text":"<p>androidJvm</p> initialValue The initial value of the StateFlow scope The CoroutineScope to be used for the StateFlow"},{"location":"core/android/android/dev.atick.core.utils/","title":"Index","text":"<p>//android/dev.atick.core.utils</p>"},{"location":"core/android/android/dev.atick.core.utils/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"core/android/android/dev.atick.core.utils/#types","title":"Types","text":"Name Summary Resource [androidJvm]sealed class Resource&lt;T&gt;A sealed class that represents the result of a resource operation. SingleLiveEvent [androidJvm]open class SingleLiveEvent&lt;out T&gt;(content: T)A class that represents a single-use event."},{"location":"core/android/android/dev.atick.core.utils/#functions","title":"Functions","text":"Name Summary networkBoundResource [androidJvm]inline fun &lt;ResultType, RequestType&gt; networkBoundResource(crossinline query: () -&gt; Flow&lt;ResultType&gt;, crossinline fetch: suspend () -&gt; RequestType, crossinline saveFetchedResult: suspend (RequestType) -&gt; Unit, crossinline shouldFetch: (ResultType) -&gt; Boolean = { true }): Flow&lt;Resource&lt;ResultType&gt;&gt;Creates a network-bound resource flow that performs a query and fetches new data if necessary."},{"location":"core/android/android/dev.atick.core.utils/network-bound-resource/","title":"Network bound resource","text":"<p>//android/dev.atick.core.utils/networkBoundResource</p>"},{"location":"core/android/android/dev.atick.core.utils/network-bound-resource/#networkboundresource","title":"networkBoundResource","text":"<p>[androidJvm]\\ inline fun &lt;ResultType, RequestType&gt; networkBoundResource(crossinline query: () -&gt; Flow&lt;ResultType&gt;, crossinline fetch: suspend () -&gt; RequestType, crossinline saveFetchedResult: suspend (RequestType) -&gt; Unit, crossinline shouldFetch: (ResultType) -&gt; Boolean = { true }): Flow&lt;Resource&lt;ResultType&gt;&gt;</p> <p>Creates a network-bound resource flow that performs a query and fetches new data if necessary.</p>"},{"location":"core/android/android/dev.atick.core.utils/network-bound-resource/#return","title":"Return","text":"<p>A flow emitting the resource state based on the query and fetch operations.</p>"},{"location":"core/android/android/dev.atick.core.utils/network-bound-resource/#parameters","title":"Parameters","text":"<p>androidJvm</p> ResultType The type of the query result. RequestType The type of the fetched data. query The query function that returns a flow of the current data. fetch The suspend function that fetches new data. saveFetchedResult The suspend function that saves the fetched result. shouldFetch The predicate function that determines if fetching new data is necessary."},{"location":"core/android/android/dev.atick.core.utils/-resource/","title":"Index","text":"<p>//android/dev.atick.core.utils/Resource</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/#resource","title":"Resource","text":"<p>sealed class Resource&lt;T&gt;</p> <p>A sealed class that represents the result of a resource operation.</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of data. data The data result of the operation. error The error that occurred during the operation, if any."},{"location":"core/android/android/dev.atick.core.utils/-resource/#inheritors","title":"Inheritors","text":"Success Loading Error"},{"location":"core/android/android/dev.atick.core.utils/-resource/#types","title":"Types","text":"Name Summary Error [androidJvm]class Error&lt;T&gt;(data: T? = null, error: Throwable) : Resource&lt;T&gt; Represents an error state with optional data and an error. Loading [androidJvm]class Loading&lt;T&gt;(data: T? = null) : Resource&lt;T&gt; Represents a loading state with optional data. Success [androidJvm]class Success&lt;T&gt;(data: T) : Resource&lt;T&gt; Represents a successful result with data."},{"location":"core/android/android/dev.atick.core.utils/-resource/#properties","title":"Properties","text":"Name Summary data [androidJvm]val data: T? = null error [androidJvm]val error: Throwable? = null"},{"location":"core/android/android/dev.atick.core.utils/-resource/data/","title":"Data","text":"<p>//android/dev.atick.core.utils/Resource/data</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/data/#data","title":"data","text":"<p>[androidJvm]\\ val data: T? = null</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/data/#parameters","title":"Parameters","text":"<p>androidJvm</p> data The data result of the operation."},{"location":"core/android/android/dev.atick.core.utils/-resource/error/","title":"Error","text":"<p>//android/dev.atick.core.utils/Resource/error</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/error/#error","title":"error","text":"<p>[androidJvm]\\ val error: Throwable? = null</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/error/#parameters","title":"Parameters","text":"<p>androidJvm</p> error The error that occurred during the operation, if any."},{"location":"core/android/android/dev.atick.core.utils/-resource/-error/","title":"Index","text":"<p>//android/dev.atick.core.utils/Resource/Error</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-error/#error","title":"Error","text":"<p>class Error&lt;T&gt;(data: T? = null, error: Throwable) : Resource&lt;T&gt; </p> <p>Represents an error state with optional data and an error.</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-error/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of data. data The optional data result of the operation. error The error that occurred during the operation."},{"location":"core/android/android/dev.atick.core.utils/-resource/-error/#constructors","title":"Constructors","text":"Error [androidJvm]constructor(data: T? = null, error: Throwable)"},{"location":"core/android/android/dev.atick.core.utils/-resource/-error/#properties","title":"Properties","text":"Name Summary data [androidJvm]val data: T? error [androidJvm]val error: Throwable?"},{"location":"core/android/android/dev.atick.core.utils/-resource/-error/-error/","title":"error","text":"<p>//android/dev.atick.core.utils/Resource/Error/Error</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-error/-error/#error","title":"Error","text":"<p>[androidJvm]\\ constructor(data: T? = null, error: Throwable)</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-error/-error/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of data. data The optional data result of the operation. error The error that occurred during the operation."},{"location":"core/android/android/dev.atick.core.utils/-resource/-loading/","title":"Index","text":"<p>//android/dev.atick.core.utils/Resource/Loading</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-loading/#loading","title":"Loading","text":"<p>class Loading&lt;T&gt;(data: T? = null) : Resource&lt;T&gt; </p> <p>Represents a loading state with optional data.</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-loading/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of data. data The optional data result of the operation."},{"location":"core/android/android/dev.atick.core.utils/-resource/-loading/#constructors","title":"Constructors","text":"Loading [androidJvm]constructor(data: T? = null)"},{"location":"core/android/android/dev.atick.core.utils/-resource/-loading/#properties","title":"Properties","text":"Name Summary data [androidJvm]val data: T? error [androidJvm]val error: Throwable?"},{"location":"core/android/android/dev.atick.core.utils/-resource/-loading/-loading/","title":"loading","text":"<p>//android/dev.atick.core.utils/Resource/Loading/Loading</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-loading/-loading/#loading","title":"Loading","text":"<p>[androidJvm]\\ constructor(data: T? = null)</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-loading/-loading/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of data. data The optional data result of the operation."},{"location":"core/android/android/dev.atick.core.utils/-resource/-success/","title":"Index","text":"<p>//android/dev.atick.core.utils/Resource/Success</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-success/#success","title":"Success","text":"<p>class Success&lt;T&gt;(data: T) : Resource&lt;T&gt; </p> <p>Represents a successful result with data.</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-success/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of data. data The data result of the operation."},{"location":"core/android/android/dev.atick.core.utils/-resource/-success/#constructors","title":"Constructors","text":"Success [androidJvm]constructor(data: T)"},{"location":"core/android/android/dev.atick.core.utils/-resource/-success/#properties","title":"Properties","text":"Name Summary data [androidJvm]val data: T? error [androidJvm]val error: Throwable?"},{"location":"core/android/android/dev.atick.core.utils/-resource/-success/-success/","title":"success","text":"<p>//android/dev.atick.core.utils/Resource/Success/Success</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-success/-success/#success","title":"Success","text":"<p>[androidJvm]\\ constructor(data: T)</p>"},{"location":"core/android/android/dev.atick.core.utils/-resource/-success/-success/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of data. data The data result of the operation."},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/","title":"Index","text":"<p>//android/dev.atick.core.utils/SingleLiveEvent</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/#singleliveevent","title":"SingleLiveEvent","text":"<p>open class SingleLiveEvent&lt;out T&gt;(content: T)</p> <p>A class that represents a single-use event.</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of the event content. content The content of the event."},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/#constructors","title":"Constructors","text":"SingleLiveEvent [androidJvm]constructor(content: T)"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/#properties","title":"Properties","text":"Name Summary hasBeenHandled [androidJvm]var hasBeenHandled: BooleanFlag indicating whether the event has been handled."},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/#functions","title":"Functions","text":"Name Summary getContentIfNotHandled [androidJvm]fun getContentIfNotHandled(): T?Returns the content if it has not been handled yet. peekContent [androidJvm]fun peekContent(): TReturns the content regardless of whether it has been handled."},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/-single-live-event/","title":"single live event","text":"<p>//android/dev.atick.core.utils/SingleLiveEvent/SingleLiveEvent</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/-single-live-event/#singleliveevent","title":"SingleLiveEvent","text":"<p>[androidJvm]\\ constructor(content: T)</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/-single-live-event/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of the event content. content The content of the event."},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/get-content-if-not-handled/","title":"Get content if not handled","text":"<p>//android/dev.atick.core.utils/SingleLiveEvent/getContentIfNotHandled</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/get-content-if-not-handled/#getcontentifnothandled","title":"getContentIfNotHandled","text":"<p>[androidJvm]\\ fun getContentIfNotHandled(): T?</p> <p>Returns the content if it has not been handled yet.</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/get-content-if-not-handled/#return","title":"Return","text":"<p>The content of the event if it has not been handled, or null if it has been handled.</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/has-been-handled/","title":"Has been handled","text":"<p>//android/dev.atick.core.utils/SingleLiveEvent/hasBeenHandled</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/has-been-handled/#hasbeenhandled","title":"hasBeenHandled","text":"<p>[androidJvm]\\ var hasBeenHandled: Boolean</p> <p>Flag indicating whether the event has been handled.</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/peek-content/","title":"Peek content","text":"<p>//android/dev.atick.core.utils/SingleLiveEvent/peekContent</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/peek-content/#peekcontent","title":"peekContent","text":"<p>[androidJvm]\\ fun peekContent(): T</p> <p>Returns the content regardless of whether it has been handled.</p>"},{"location":"core/android/android/dev.atick.core.utils/-single-live-event/peek-content/#return","title":"Return","text":"<p>The content of the event.</p>"},{"location":"core/ui/","title":"Index","text":"<p>//ui</p>"},{"location":"core/ui/#ui","title":"ui","text":""},{"location":"core/ui/#packages","title":"Packages","text":"Name dev.atick.core.ui.base dev.atick.core.ui.components dev.atick.core.ui.extensions dev.atick.core.ui.theme dev.atick.core.ui.utils"},{"location":"core/ui/ui/dev.atick.core.ui.base/","title":"Index","text":"<p>//ui/dev.atick.core.ui.base</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"core/ui/ui/dev.atick.core.ui.base/#types","title":"Types","text":"Name Summary BaseFragment [androidJvm]abstract class BaseFragment : FragmentA base fragment class that provides common functionality for fragments using Jetpack Compose. BaseUiState [androidJvm]abstract class BaseUiStateAbstract base class for UI states. BaseViewModel [androidJvm]open class BaseViewModel&lt;T : BaseUiState&gt; : ViewModelBase class for ViewModels."},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/","title":"Index","text":"<p>//ui/dev.atick.core.ui.base/BaseFragment</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/#basefragment","title":"BaseFragment","text":"<p>[androidJvm]\\ abstract class BaseFragment : Fragment</p> <p>A base fragment class that provides common functionality for fragments using Jetpack Compose.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/#constructors","title":"Constructors","text":"BaseFragment [androidJvm]constructor()"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/#properties","title":"Properties","text":"Name Summary defaultViewModelCreationExtras [androidJvm]@get:NonNull@get:CallSuperopen override val defaultViewModelCreationExtras: CreationExtras defaultViewModelProviderFactory [androidJvm]@get:NonNullopen override val defaultViewModelProviderFactory: ViewModelProvider.Factory lifecycle [androidJvm]@get:NonNullopen override val lifecycle: Lifecycle mPreviousWho [androidJvm]@RestrictTo(value = [RestrictTo.Scope.LIBRARY])@Nullablevar mPreviousWho: String? savedStateRegistry [androidJvm]@get:NonNulloverride val savedStateRegistry: SavedStateRegistry viewModelStore [androidJvm]@get:NonNullopen override val viewModelStore: ViewModelStore"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/#functions","title":"Functions","text":"Name Summary collectWithLifecycle [androidJvm]inline fun &lt;T&gt; LifecycleOwner.collectWithLifecycle(flow: Flow&lt;T&gt;, crossinline action: (T) -&gt; Unit)Observe a Flow and execute an action when the value is changed. ComposeUi [androidJvm]@Composableabstract fun ComposeUi()Defines the Jetpack Compose UI of the fragment. dump [androidJvm]open fun dump(@NonNullp0: String, @Nullablep1: FileDescriptor?, @NonNullp2: PrintWriter, @Nullablep3: Array&lt;String&gt;?) equals [androidJvm]operator override fun equals(@Nullableother: Any?): Boolean getActivity [androidJvm]@Nullablefun getActivity(): FragmentActivity? getAllowEnterTransitionOverlap [androidJvm]open fun getAllowEnterTransitionOverlap(): Boolean getAllowReturnTransitionOverlap [androidJvm]open fun getAllowReturnTransitionOverlap(): Boolean getArguments [androidJvm]@Nullablefun getArguments(): Bundle? getChildFragmentManager [androidJvm]@NonNullfun getChildFragmentManager(): FragmentManager getContext [androidJvm]@Nullableopen fun getContext(): Context? getEnterTransition [androidJvm]@Nullableopen fun getEnterTransition(): Any? getExitTransition [androidJvm]@Nullableopen fun getExitTransition(): Any? getFragmentManager [androidJvm]@Nullablefun ~~getFragmentManager~~(): FragmentManager? getHost [androidJvm]@Nullablefun getHost(): Any? getId [androidJvm]fun getId(): Int getLayoutInflater [androidJvm]@NonNullfun getLayoutInflater(): LayoutInflater@NonNull@RestrictTo(value = [RestrictTo.Scope.LIBRARY_GROUP_PREFIX])open fun ~~getLayoutInflater~~(@Nullablep0: Bundle?): LayoutInflater getLoaderManager [androidJvm]@NonNullopen fun ~~getLoaderManager~~(): LoaderManager getParentFragment [androidJvm]@Nullablefun getParentFragment(): Fragment? getParentFragmentManager [androidJvm]@NonNullfun getParentFragmentManager(): FragmentManager getReenterTransition [androidJvm]@Nullableopen fun getReenterTransition(): Any? getResources [androidJvm]@NonNullfun getResources(): Resources getRetainInstance [androidJvm]fun ~~getRetainInstance~~(): Boolean getReturnTransition [androidJvm]@Nullableopen fun getReturnTransition(): Any? getSharedElementEnterTransition [androidJvm]@Nullableopen fun getSharedElementEnterTransition(): Any? getSharedElementReturnTransition [androidJvm]@Nullableopen fun getSharedElementReturnTransition(): Any? getString [androidJvm]@NonNullfun getString(@StringResp0: Int): String@NonNullfun getString(@StringResp0: Int, @Nullablevararg p1: Any): String getTag [androidJvm]@Nullablefun getTag(): String? getTargetFragment [androidJvm]@Nullablefun ~~getTargetFragment~~(): Fragment? getTargetRequestCode [androidJvm]fun ~~getTargetRequestCode~~(): Int getText [androidJvm]@NonNullfun getText(@StringResp0: Int): CharSequence getUserVisibleHint [androidJvm]open fun ~~getUserVisibleHint~~(): Boolean getView [androidJvm]@Nullableopen fun getView(): View? getViewLifecycleOwner [androidJvm]@MainThread@NonNullopen fun getViewLifecycleOwner(): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm]@NonNullopen fun getViewLifecycleOwnerLiveData(): LiveData&lt;LifecycleOwner&gt; hashCode [androidJvm]override fun hashCode(): Int hasOptionsMenu [androidJvm]@RestrictTo(value = [RestrictTo.Scope.LIBRARY_GROUP_PREFIX])fun hasOptionsMenu(): Boolean isAdded [androidJvm]fun isAdded(): Boolean isDetached [androidJvm]fun isDetached(): Boolean isHidden [androidJvm]fun isHidden(): Boolean isInLayout [androidJvm]fun isInLayout(): Boolean isMenuVisible [androidJvm]@RestrictTo(value = [RestrictTo.Scope.LIBRARY_GROUP_PREFIX])fun isMenuVisible(): Boolean isRemoving [androidJvm]fun isRemoving(): Boolean isResumed [androidJvm]fun isResumed(): Boolean isStateSaved [androidJvm]fun isStateSaved(): Boolean isVisible [androidJvm]fun isVisible(): Boolean observe [androidJvm]inline fun &lt;T&gt; LifecycleOwner.observe(liveData: LiveData&lt;T&gt;, crossinline action: (T) -&gt; Unit)Observe a LiveData and execute an action when the value is changed. observeEvent [androidJvm]inline fun &lt;T&gt; LifecycleOwner.observeEvent(liveData: LiveData&lt;SingleLiveEvent&lt;T&gt;&gt;, crossinline action: (T) -&gt; Unit)inline fun &lt;T&gt; LifecycleOwner.observeEvent(liveData: MutableLiveData&lt;SingleLiveEvent&lt;T&gt;&gt;, crossinline action: (T) -&gt; Unit)Observe a LiveData and execute an action when the value is changed. observeStates [androidJvm]open fun observeStates()Observes the states relevant to the fragment. This method can be overridden by subclasses to implement state observation. onActivityCreated [androidJvm]@MainThread@CallSuperopen fun ~~onActivityCreated~~(@Nullablep0: Bundle?) onActivityResult [androidJvm]open fun ~~onActivityResult~~(p0: Int, p1: Int, @Nullablep2: Intent?) onAttach [androidJvm]@MainThread@CallSuperopen fun ~~onAttach~~(@NonNullp0: Activity)@MainThread@CallSuperopen fun onAttach(@NonNullp0: Context) onAttachFragment [androidJvm]@MainThreadopen fun ~~onAttachFragment~~(@NonNullp0: Fragment) onConfigurationChanged [androidJvm]@CallSuperopen override fun onConfigurationChanged(@NonNullp0: Configuration) onContextItemSelected [androidJvm]@MainThreadopen fun onContextItemSelected(@NonNullp0: MenuItem): Boolean onCreate [androidJvm]open override fun onCreate(savedInstanceState: Bundle?)Called when the fragment is created. onCreateAnimation [androidJvm]@MainThread@Nullableopen fun onCreateAnimation(p0: Int, p1: Boolean, p2: Int): Animation? onCreateAnimator [androidJvm]@MainThread@Nullableopen fun onCreateAnimator(p0: Int, p1: Boolean, p2: Int): Animator? onCreateContextMenu [androidJvm]@MainThreadopen override fun onCreateContextMenu(@NonNullp0: ContextMenu, @NonNullp1: View, @Nullablep2: ContextMenu.ContextMenuInfo?) onCreateOptionsMenu [androidJvm]@MainThreadopen fun ~~onCreateOptionsMenu~~(@NonNullp0: Menu, @NonNullp1: MenuInflater) onCreateView [androidJvm]open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?Called to create the fragment's view. onDestroy [androidJvm]@MainThread@CallSuperopen fun onDestroy() onDestroyOptionsMenu [androidJvm]@MainThreadopen fun ~~onDestroyOptionsMenu~~() onDestroyView [androidJvm]@MainThread@CallSuperopen fun onDestroyView() onDetach [androidJvm]@MainThread@CallSuperopen fun onDetach() onGetLayoutInflater [androidJvm]@NonNullopen fun onGetLayoutInflater(@Nullablep0: Bundle?): LayoutInflater onHiddenChanged [androidJvm]@MainThreadopen fun onHiddenChanged(p0: Boolean) onInflate [androidJvm]@UiThread@CallSuperopen fun ~~onInflate~~(@NonNullp0: Activity, @NonNullp1: AttributeSet, @Nullablep2: Bundle?)@UiThread@CallSuperopen fun onInflate(@NonNullp0: Context, @NonNullp1: AttributeSet, @Nullablep2: Bundle?) onLowMemory [androidJvm]@MainThread@CallSuperopen override fun onLowMemory() onMultiWindowModeChanged [androidJvm]open fun onMultiWindowModeChanged(p0: Boolean) onOptionsItemSelected [androidJvm]@MainThreadopen fun ~~onOptionsItemSelected~~(@NonNullp0: MenuItem): Boolean onOptionsMenuClosed [androidJvm]@MainThreadopen fun ~~onOptionsMenuClosed~~(@NonNullp0: Menu) onPause [androidJvm]@MainThread@CallSuperopen fun onPause() onPictureInPictureModeChanged [androidJvm]open fun onPictureInPictureModeChanged(p0: Boolean) onPrepareOptionsMenu [androidJvm]@MainThreadopen fun ~~onPrepareOptionsMenu~~(@NonNullp0: Menu) onPrimaryNavigationFragmentChanged [androidJvm]@MainThreadopen fun onPrimaryNavigationFragmentChanged(p0: Boolean) onRequestPermissionsResult [androidJvm]open fun ~~onRequestPermissionsResult~~(p0: Int, @NonNullp1: Array&lt;String&gt;, @NonNullp2: IntArray) onResume [androidJvm]@MainThread@CallSuperopen fun onResume() onSaveInstanceState [androidJvm]@MainThreadopen fun onSaveInstanceState(@NonNullp0: Bundle) onStart [androidJvm]@MainThread@CallSuperopen fun onStart() onStop [androidJvm]@MainThread@CallSuperopen fun onStop() onViewCreated [androidJvm]@MainThreadopen fun onViewCreated(@NonNullp0: View, @Nullablep1: Bundle?) onViewStateRestored [androidJvm]@MainThread@CallSuperopen fun onViewStateRestored(@Nullablep0: Bundle?) postponeEnterTransition [androidJvm]open fun postponeEnterTransition()fun postponeEnterTransition(p0: Long, @NonNullp1: TimeUnit) registerForActivityResult [androidJvm]@MainThread@NonNulloverride fun &lt;I : Any, O : Any&gt; registerForActivityResult(@NonNullp0: ActivityResultContract&lt;I, O&gt;, @NonNullp1: ActivityResultCallback&lt;O&gt;): ActivityResultLauncher&lt;I&gt;@MainThread@NonNulloverride fun &lt;I : Any, O : Any&gt; registerForActivityResult(@NonNullp0: ActivityResultContract&lt;I, O&gt;, @NonNullp1: ActivityResultRegistry, @NonNullp2: ActivityResultCallback&lt;O&gt;): ActivityResultLauncher&lt;I&gt; registerForContextMenu [androidJvm]open fun registerForContextMenu(@NonNullp0: View) requestPermissions [androidJvm]fun ~~requestPermissions~~(@NonNullp0: Array&lt;String&gt;, p1: Int) requireActivity [androidJvm]@NonNullfun requireActivity(): FragmentActivity requireArguments [androidJvm]@NonNullfun requireArguments(): Bundle requireContext [androidJvm]@NonNullfun requireContext(): Context requireFragmentManager [androidJvm]@NonNullfun ~~requireFragmentManager~~(): FragmentManager requireHost [androidJvm]@NonNullfun requireHost(): Any requireParentFragment [androidJvm]@NonNullfun requireParentFragment(): Fragment requireView [androidJvm]@NonNullfun requireView(): View setAllowEnterTransitionOverlap [androidJvm]open fun setAllowEnterTransitionOverlap(p0: Boolean) setAllowReturnTransitionOverlap [androidJvm]open fun setAllowReturnTransitionOverlap(p0: Boolean) setArguments [androidJvm]open fun setArguments(@Nullablep0: Bundle?) setEnterSharedElementCallback [androidJvm]open fun setEnterSharedElementCallback(@Nullablep0: SharedElementCallback?) setEnterTransition [androidJvm]open fun setEnterTransition(@Nullablep0: Any?) setExitSharedElementCallback [androidJvm]open fun setExitSharedElementCallback(@Nullablep0: SharedElementCallback?) setExitTransition [androidJvm]open fun setExitTransition(@Nullablep0: Any?) setHasOptionsMenu [androidJvm]open fun ~~setHasOptionsMenu~~(p0: Boolean) setInitialSavedState [androidJvm]open fun setInitialSavedState(@Nullablep0: Fragment.SavedState?) setMenuVisibility [androidJvm]open fun setMenuVisibility(p0: Boolean) setReenterTransition [androidJvm]open fun setReenterTransition(@Nullablep0: Any?) setRetainInstance [androidJvm]open fun ~~setRetainInstance~~(p0: Boolean) setReturnTransition [androidJvm]open fun setReturnTransition(@Nullablep0: Any?) setSharedElementEnterTransition [androidJvm]open fun setSharedElementEnterTransition(@Nullablep0: Any?) setSharedElementReturnTransition [androidJvm]open fun setSharedElementReturnTransition(@Nullablep0: Any?) setTargetFragment [androidJvm]open fun ~~setTargetFragment~~(@Nullablep0: Fragment?, p1: Int) setUserVisibleHint [androidJvm]open fun ~~setUserVisibleHint~~(p0: Boolean) shouldShowRequestPermissionRationale [androidJvm]open fun shouldShowRequestPermissionRationale(@NonNullp0: String): Boolean startActivity [androidJvm]open fun startActivity(@NonNullp0: Intent)open fun startActivity(@NonNullp0: Intent, @Nullablep1: Bundle?) startActivityForResult [androidJvm]open fun ~~startActivityForResult~~(@NonNullp0: Intent, p1: Int)open fun ~~startActivityForResult~~(@NonNullp0: Intent, p1: Int, @Nullablep2: Bundle?) startIntentSenderForResult [androidJvm]open fun ~~startIntentSenderForResult~~(@NonNullp0: IntentSender, p1: Int, @Nullablep2: Intent?, p3: Int, p4: Int, p5: Int, @Nullablep6: Bundle?) startPostponedEnterTransition [androidJvm]open fun startPostponedEnterTransition() toString [androidJvm]@NonNullopen override fun toString(): String unregisterForContextMenu [androidJvm]open fun unregisterForContextMenu(@NonNullp0: View)"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/-base-fragment/","title":"base fragment","text":"<p>//ui/dev.atick.core.ui.base/BaseFragment/BaseFragment</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/-base-fragment/#basefragment","title":"BaseFragment","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/-compose-ui/","title":"compose ui","text":"<p>//ui/dev.atick.core.ui.base/BaseFragment/ComposeUi</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/-compose-ui/#composeui","title":"ComposeUi","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>abstract fun ComposeUi()</p> <p>Defines the Jetpack Compose UI of the fragment.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/observe-states/","title":"Observe states","text":"<p>//ui/dev.atick.core.ui.base/BaseFragment/observeStates</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/observe-states/#observestates","title":"observeStates","text":"<p>[androidJvm]\\ open fun observeStates()</p> <p>Observes the states relevant to the fragment. This method can be overridden by subclasses to implement state observation.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/on-create-view/","title":"On create view","text":"<p>//ui/dev.atick.core.ui.base/BaseFragment/onCreateView</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/on-create-view/#oncreateview","title":"onCreateView","text":"<p>[androidJvm]\\ open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?</p> <p>Called to create the fragment's view.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/on-create-view/#return","title":"Return","text":"<p>The created view.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/on-create-view/#parameters","title":"Parameters","text":"<p>androidJvm</p> inflater The layout inflater. container The parent view. savedInstanceState The saved instance state."},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/on-create/","title":"On create","text":"<p>//ui/dev.atick.core.ui.base/BaseFragment/onCreate</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/on-create/#oncreate","title":"onCreate","text":"<p>[androidJvm]\\ open override fun onCreate(savedInstanceState: Bundle?)</p> <p>Called when the fragment is created.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-fragment/on-create/#parameters","title":"Parameters","text":"<p>androidJvm</p> savedInstanceState The saved instance state."},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/","title":"Index","text":"<p>//ui/dev.atick.core.ui.base/BaseUiState</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/#baseuistate","title":"BaseUiState","text":"<p>[androidJvm]\\ abstract class BaseUiState</p> <p>Abstract base class for UI states.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/#constructors","title":"Constructors","text":"BaseUiState [androidJvm]constructor()"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/#properties","title":"Properties","text":"Name Summary loading [androidJvm]abstract val loading: BooleanIndicates whether the UI is in a loading state. toastMessage [androidJvm]abstract val toastMessage: UiText?The toast message to display, if any."},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/-base-ui-state/","title":"base ui state","text":"<p>//ui/dev.atick.core.ui.base/BaseUiState/BaseUiState</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/-base-ui-state/#baseuistate","title":"BaseUiState","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/loading/","title":"Loading","text":"<p>//ui/dev.atick.core.ui.base/BaseUiState/loading</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/loading/#loading","title":"loading","text":"<p>[androidJvm]\\ abstract val loading: Boolean</p> <p>Indicates whether the UI is in a loading state.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/toast-message/","title":"Toast message","text":"<p>//ui/dev.atick.core.ui.base/BaseUiState/toastMessage</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-ui-state/toast-message/#toastmessage","title":"toastMessage","text":"<p>[androidJvm]\\ abstract val toastMessage: UiText?</p> <p>The toast message to display, if any.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-view-model/","title":"Index","text":"<p>//ui/dev.atick.core.ui.base/BaseViewModel</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-view-model/#baseviewmodel","title":"BaseViewModel","text":"<p>open class BaseViewModel&lt;T : BaseUiState&gt; : ViewModel</p> <p>Base class for ViewModels.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-view-model/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of the UI state associated with the ViewModel."},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-view-model/#constructors","title":"Constructors","text":"BaseViewModel [androidJvm]constructor()"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-view-model/#functions","title":"Functions","text":"Name Summary addCloseable [androidJvm]open fun addCloseable(@NonNullp0: Closeable)"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-view-model/-base-view-model/","title":"base view model","text":"<p>//ui/dev.atick.core.ui.base/BaseViewModel/BaseViewModel</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-view-model/-base-view-model/#baseviewmodel","title":"BaseViewModel","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"core/ui/ui/dev.atick.core.ui.base/-base-view-model/-base-view-model/#parameters","title":"Parameters","text":"<p>androidJvm</p> T The type of the UI state associated with the ViewModel."},{"location":"core/ui/ui/dev.atick.core.ui.components/","title":"Index","text":"<p>//ui/dev.atick.core.ui.components</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"core/ui/ui/dev.atick.core.ui.components/#types","title":"Types","text":"Name Summary AnimationType [androidJvm]enum AnimationType : Enum&lt;AnimationType&gt; LoadingIndicatorState [androidJvm]@Stableinterface LoadingIndicatorState LoadingIndicatorStateImpl [androidJvm]class LoadingIndicatorStateImpl : LoadingIndicatorState"},{"location":"core/ui/ui/dev.atick.core.ui.components/#functions","title":"Functions","text":"Name Summary LoadingButton [androidJvm]@Composablefun LoadingButton(onClick: () -&gt; Unit, modifier: Modifier = Modifier, enabled: Boolean = true, loading: Boolean = false, animationType: AnimationType = AnimationType.Bounce, colors: ButtonColors = ButtonDefaults.buttonColors(), indicatorSpacing: Dp = 4.dp, content: @Composable() -&gt; Unit) rememberLoadingIndicatorState [androidJvm]@Composablefun rememberLoadingIndicatorState(animating: Boolean, animationType: AnimationType): LoadingIndicatorState TitleText [androidJvm]@Composablefun TitleText(modifier: Modifier = Modifier, title: String, color: Color = MaterialTheme.colorScheme.primary)Title text for the top bar. TopBar [androidJvm]@Composablefun TopBar(modifier: Modifier = Modifier, title: String, onSearchClick: () -&gt; Unit? = null, onRefreshClick: () -&gt; Unit? = null, onMenuClick: () -&gt; Unit? = null, onExitClick: () -&gt; Unit? = null, onLogoutClick: () -&gt; Unit? = null)Top bar for the app."},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-button/","title":"loading button","text":"<p>//ui/dev.atick.core.ui.components/LoadingButton</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-button/#loadingbutton","title":"LoadingButton","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>fun LoadingButton(onClick: () -&gt; Unit, modifier: Modifier = Modifier, enabled: Boolean = true, loading: Boolean = false, animationType: AnimationType = AnimationType.Bounce, colors: ButtonColors = ButtonDefaults.buttonColors(), indicatorSpacing: Dp = 4.dp, content: @Composable() -&gt; Unit)</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-title-text/","title":"title text","text":"<p>//ui/dev.atick.core.ui.components/TitleText</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-title-text/#titletext","title":"TitleText","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>fun TitleText(modifier: Modifier = Modifier, title: String, color: Color = MaterialTheme.colorScheme.primary)</p> <p>Title text for the top bar.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-title-text/#parameters","title":"Parameters","text":"<p>androidJvm</p> modifier Modifier to be applied to the layout. title Title of the top bar. color Color of the title text."},{"location":"core/ui/ui/dev.atick.core.ui.components/-top-bar/","title":"top bar","text":"<p>//ui/dev.atick.core.ui.components/TopBar</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-top-bar/#topbar","title":"TopBar","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>fun TopBar(modifier: Modifier = Modifier, title: String, onSearchClick: () -&gt; Unit? = null, onRefreshClick: () -&gt; Unit? = null, onMenuClick: () -&gt; Unit? = null, onExitClick: () -&gt; Unit? = null, onLogoutClick: () -&gt; Unit? = null)</p> <p>Top bar for the app.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-top-bar/#parameters","title":"Parameters","text":"<p>androidJvm</p> modifier Modifier to be applied to the layout. title Title of the top bar. onSearchClick Callback when search button is clicked. onRefreshClick Callback when refresh button is clicked. onMenuClick Callback when menu button is clicked. onExitClick Callback when exit button is clicked. onLogoutClick Callback when logout button is clicked."},{"location":"core/ui/ui/dev.atick.core.ui.components/remember-loading-indicator-state/","title":"Remember loading indicator state","text":"<p>//ui/dev.atick.core.ui.components/rememberLoadingIndicatorState</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/remember-loading-indicator-state/#rememberloadingindicatorstate","title":"rememberLoadingIndicatorState","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>fun rememberLoadingIndicatorState(animating: Boolean, animationType: AnimationType): LoadingIndicatorState</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/","title":"Index","text":"<p>//ui/dev.atick.core.ui.components/AnimationType</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/#animationtype","title":"AnimationType","text":"<p>[androidJvm]\\ enum AnimationType : Enum&lt;AnimationType&gt;</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/#entries","title":"Entries","text":"Bounce [androidJvm]Bounce LazyBounce [androidJvm]LazyBounce Fade [androidJvm]Fade"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/#functions","title":"Functions","text":"Name Summary valueOf [androidJvm]fun valueOf(value: String): AnimationTypeReturns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) values [androidJvm]fun values(): Array&lt;AnimationType&gt;Returns an array containing the constants of this enum type, in the order they're declared."},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/value-of/","title":"Value of","text":"<p>//ui/dev.atick.core.ui.components/AnimationType/valueOf</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm]\\ fun valueOf(value: String): AnimationType</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/values/","title":"Values","text":"<p>//ui/dev.atick.core.ui.components/AnimationType/values</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/values/#values","title":"values","text":"<p>[androidJvm]\\ fun values(): Array&lt;AnimationType&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/-bounce/","title":"Index","text":"<p>//ui/dev.atick.core.ui.components/AnimationType/Bounce</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/-bounce/#bounce","title":"Bounce","text":"<p>[androidJvm]\\ Bounce</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/-bounce/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/-fade/","title":"Index","text":"<p>//ui/dev.atick.core.ui.components/AnimationType/Fade</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/-fade/#fade","title":"Fade","text":"<p>[androidJvm]\\ Fade</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/-fade/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/-lazy-bounce/","title":"Index","text":"<p>//ui/dev.atick.core.ui.components/AnimationType/LazyBounce</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/-lazy-bounce/#lazybounce","title":"LazyBounce","text":"<p>[androidJvm]\\ LazyBounce</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-animation-type/-lazy-bounce/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state/","title":"Index","text":"<p>//ui/dev.atick.core.ui.components/LoadingIndicatorState</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state/#loadingindicatorstate","title":"LoadingIndicatorState","text":"<p>@Stable</p> <p>interface LoadingIndicatorState</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state/#inheritors","title":"Inheritors","text":"LoadingIndicatorStateImpl"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state/#functions","title":"Functions","text":"Name Summary get [androidJvm]abstract operator fun get(index: Int): Float start [androidJvm]abstract fun start(animationType: AnimationType, scope: CoroutineScope)"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state/get/","title":"Get","text":"<p>//ui/dev.atick.core.ui.components/LoadingIndicatorState/get</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state/get/#get","title":"get","text":"<p>[androidJvm]\\ abstract operator fun get(index: Int): Float</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state/start/","title":"Start","text":"<p>//ui/dev.atick.core.ui.components/LoadingIndicatorState/start</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state/start/#start","title":"start","text":"<p>[androidJvm]\\ abstract fun start(animationType: AnimationType, scope: CoroutineScope)</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/","title":"Index","text":"<p>//ui/dev.atick.core.ui.components/LoadingIndicatorStateImpl</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/#loadingindicatorstateimpl","title":"LoadingIndicatorStateImpl","text":"<p>[androidJvm]\\ class LoadingIndicatorStateImpl : LoadingIndicatorState</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/#constructors","title":"Constructors","text":"LoadingIndicatorStateImpl [androidJvm]constructor()"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/#functions","title":"Functions","text":"Name Summary equals [androidJvm]open operator override fun equals(other: Any?): Boolean get [androidJvm]open operator override fun get(index: Int): Float hashCode [androidJvm]open override fun hashCode(): Int start [androidJvm]open override fun start(animationType: AnimationType, scope: CoroutineScope)"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/-loading-indicator-state-impl/","title":"loading indicator state impl","text":"<p>//ui/dev.atick.core.ui.components/LoadingIndicatorStateImpl/LoadingIndicatorStateImpl</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/-loading-indicator-state-impl/#loadingindicatorstateimpl","title":"LoadingIndicatorStateImpl","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/equals/","title":"Equals","text":"<p>//ui/dev.atick.core.ui.components/LoadingIndicatorStateImpl/equals</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/equals/#equals","title":"equals","text":"<p>[androidJvm]\\ open operator override fun equals(other: Any?): Boolean</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/get/","title":"Get","text":"<p>//ui/dev.atick.core.ui.components/LoadingIndicatorStateImpl/get</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/get/#get","title":"get","text":"<p>[androidJvm]\\ open operator override fun get(index: Int): Float</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/hash-code/","title":"Hash code","text":"<p>//ui/dev.atick.core.ui.components/LoadingIndicatorStateImpl/hashCode</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/hash-code/#hashcode","title":"hashCode","text":"<p>[androidJvm]\\ open override fun hashCode(): Int</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/start/","title":"Start","text":"<p>//ui/dev.atick.core.ui.components/LoadingIndicatorStateImpl/start</p>"},{"location":"core/ui/ui/dev.atick.core.ui.components/-loading-indicator-state-impl/start/#start","title":"start","text":"<p>[androidJvm]\\ open override fun start(animationType: AnimationType, scope: CoroutineScope)</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/","title":"Index","text":"<p>//ui/dev.atick.core.ui.extensions</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"core/ui/ui/dev.atick.core.ui.extensions/#functions","title":"Functions","text":"Name Summary checkForPermissions [androidJvm]inline fun ComponentActivity.checkForPermissions(permissions: List&lt;String&gt;, crossinline onSuccess: () -&gt; Unit)Check for permissions. collectWithLifecycle [androidJvm]inline fun &lt;T&gt; LifecycleOwner.collectWithLifecycle(flow: Flow&lt;T&gt;, crossinline action: (T) -&gt; Unit)Observe a Flow and execute an action when the value is changed. observe [androidJvm]inline fun &lt;T&gt; LifecycleOwner.observe(liveData: LiveData&lt;T&gt;, crossinline action: (T) -&gt; Unit)Observe a LiveData and execute an action when the value is changed. observeEvent [androidJvm]inline fun &lt;T&gt; LifecycleOwner.observeEvent(liveData: LiveData&lt;SingleLiveEvent&lt;T&gt;&gt;, crossinline action: (T) -&gt; Unit)inline fun &lt;T&gt; LifecycleOwner.observeEvent(liveData: MutableLiveData&lt;SingleLiveEvent&lt;T&gt;&gt;, crossinline action: (T) -&gt; Unit)Observe a LiveData and execute an action when the value is changed. openPermissionSettings [androidJvm]fun ComponentActivity.openPermissionSettings()Open app settings. permissionLauncher [androidJvm]inline fun ComponentActivity.permissionLauncher(crossinline onSuccess: () -&gt; Unit = {}, crossinline onFailure: () -&gt; Unit = {}): ActivityResultLauncher&lt;Array&lt;String&gt;&gt;Launch an activity for permission. resultLauncher [androidJvm]inline fun ComponentActivity.resultLauncher(crossinline onSuccess: () -&gt; Unit = {}, crossinline onFailure: () -&gt; Unit = {}): ActivityResultLauncher&lt;Intent&gt;Launch an activity for result."},{"location":"core/ui/ui/dev.atick.core.ui.extensions/check-for-permissions/","title":"Check for permissions","text":"<p>//ui/dev.atick.core.ui.extensions/checkForPermissions</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/check-for-permissions/#checkforpermissions","title":"checkForPermissions","text":"<p>[androidJvm]\\ inline fun ComponentActivity.checkForPermissions(permissions: List&lt;String&gt;, crossinline onSuccess: () -&gt; Unit)</p> <p>Check for permissions.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/check-for-permissions/#parameters","title":"Parameters","text":"<p>androidJvm</p> permissions List of permissions to be checked. onSuccess Callback when the result is successful."},{"location":"core/ui/ui/dev.atick.core.ui.extensions/collect-with-lifecycle/","title":"Collect with lifecycle","text":"<p>//ui/dev.atick.core.ui.extensions/collectWithLifecycle</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/collect-with-lifecycle/#collectwithlifecycle","title":"collectWithLifecycle","text":"<p>[androidJvm]\\ inline fun &lt;T&gt; LifecycleOwner.collectWithLifecycle(flow: Flow&lt;T&gt;, crossinline action: (T) -&gt; Unit)</p> <p>Observe a Flow and execute an action when the value is changed.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/collect-with-lifecycle/#parameters","title":"Parameters","text":"<p>androidJvm</p> action The action to be executed when the value is changed."},{"location":"core/ui/ui/dev.atick.core.ui.extensions/observe-event/","title":"Observe event","text":"<p>//ui/dev.atick.core.ui.extensions/observeEvent</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/observe-event/#observeevent","title":"observeEvent","text":"<p>[androidJvm]\\ inline fun &lt;T&gt; LifecycleOwner.observeEvent(liveData: LiveData&lt;SingleLiveEvent&lt;T&gt;&gt;, crossinline action: (T) -&gt; Unit)</p> <p>inline fun &lt;T&gt; LifecycleOwner.observeEvent(liveData: MutableLiveData&lt;SingleLiveEvent&lt;T&gt;&gt;, crossinline action: (T) -&gt; Unit)</p> <p>Observe a LiveData and execute an action when the value is changed.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/observe-event/#parameters","title":"Parameters","text":"<p>androidJvm</p> action The action to be executed when the value is changed."},{"location":"core/ui/ui/dev.atick.core.ui.extensions/observe/","title":"Observe","text":"<p>//ui/dev.atick.core.ui.extensions/observe</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/observe/#observe","title":"observe","text":"<p>[androidJvm]\\ inline fun &lt;T&gt; LifecycleOwner.observe(liveData: LiveData&lt;T&gt;, crossinline action: (T) -&gt; Unit)</p> <p>Observe a LiveData and execute an action when the value is changed.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/observe/#parameters","title":"Parameters","text":"<p>androidJvm</p> action The action to be executed when the value is changed."},{"location":"core/ui/ui/dev.atick.core.ui.extensions/open-permission-settings/","title":"Open permission settings","text":"<p>//ui/dev.atick.core.ui.extensions/openPermissionSettings</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/open-permission-settings/#openpermissionsettings","title":"openPermissionSettings","text":"<p>[androidJvm]\\ fun ComponentActivity.openPermissionSettings()</p> <p>Open app settings.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/permission-launcher/","title":"Permission launcher","text":"<p>//ui/dev.atick.core.ui.extensions/permissionLauncher</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/permission-launcher/#permissionlauncher","title":"permissionLauncher","text":"<p>[androidJvm]\\ inline fun ComponentActivity.permissionLauncher(crossinline onSuccess: () -&gt; Unit = {}, crossinline onFailure: () -&gt; Unit = {}): ActivityResultLauncher&lt;Array&lt;String&gt;&gt;</p> <p>Launch an activity for permission.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/permission-launcher/#parameters","title":"Parameters","text":"<p>androidJvm</p> onSuccess Callback when the result is successful. onFailure Callback when the result is failed."},{"location":"core/ui/ui/dev.atick.core.ui.extensions/result-launcher/","title":"Result launcher","text":"<p>//ui/dev.atick.core.ui.extensions/resultLauncher</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/result-launcher/#resultlauncher","title":"resultLauncher","text":"<p>[androidJvm]\\ inline fun ComponentActivity.resultLauncher(crossinline onSuccess: () -&gt; Unit = {}, crossinline onFailure: () -&gt; Unit = {}): ActivityResultLauncher&lt;Intent&gt;</p> <p>Launch an activity for result.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.extensions/result-launcher/#parameters","title":"Parameters","text":"<p>androidJvm</p> onSuccess Callback when the result is successful. onFailure Callback when the result is failed."},{"location":"core/ui/ui/dev.atick.core.ui.theme/","title":"Index","text":"<p>//ui/dev.atick.core.ui.theme</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"core/ui/ui/dev.atick.core.ui.theme/#properties","title":"Properties","text":"Name Summary md_theme_dark_background [androidJvm]val md_theme_dark_background: Color md_theme_dark_error [androidJvm]val md_theme_dark_error: Color md_theme_dark_errorContainer [androidJvm]val md_theme_dark_errorContainer: Color md_theme_dark_inverseOnSurface [androidJvm]val md_theme_dark_inverseOnSurface: Color md_theme_dark_inversePrimary [androidJvm]val md_theme_dark_inversePrimary: Color md_theme_dark_inverseSurface [androidJvm]val md_theme_dark_inverseSurface: Color md_theme_dark_onBackground [androidJvm]val md_theme_dark_onBackground: Color md_theme_dark_onError [androidJvm]val md_theme_dark_onError: Color md_theme_dark_onErrorContainer [androidJvm]val md_theme_dark_onErrorContainer: Color md_theme_dark_onPrimary [androidJvm]val md_theme_dark_onPrimary: Color md_theme_dark_onPrimaryContainer [androidJvm]val md_theme_dark_onPrimaryContainer: Color md_theme_dark_onSecondary [androidJvm]val md_theme_dark_onSecondary: Color md_theme_dark_onSecondaryContainer [androidJvm]val md_theme_dark_onSecondaryContainer: Color md_theme_dark_onSurface [androidJvm]val md_theme_dark_onSurface: Color md_theme_dark_onSurfaceVariant [androidJvm]val md_theme_dark_onSurfaceVariant: Color md_theme_dark_onTertiary [androidJvm]val md_theme_dark_onTertiary: Color md_theme_dark_onTertiaryContainer [androidJvm]val md_theme_dark_onTertiaryContainer: Color md_theme_dark_outline [androidJvm]val md_theme_dark_outline: Color md_theme_dark_outlineVariant [androidJvm]val md_theme_dark_outlineVariant: Color md_theme_dark_primary [androidJvm]val md_theme_dark_primary: Color md_theme_dark_primaryContainer [androidJvm]val md_theme_dark_primaryContainer: Color md_theme_dark_scrim [androidJvm]val md_theme_dark_scrim: Color md_theme_dark_secondary [androidJvm]val md_theme_dark_secondary: Color md_theme_dark_secondaryContainer [androidJvm]val md_theme_dark_secondaryContainer: Color md_theme_dark_surface [androidJvm]val md_theme_dark_surface: Color md_theme_dark_surfaceTint [androidJvm]val md_theme_dark_surfaceTint: Color md_theme_dark_surfaceVariant [androidJvm]val md_theme_dark_surfaceVariant: Color md_theme_dark_tertiary [androidJvm]val md_theme_dark_tertiary: Color md_theme_dark_tertiaryContainer [androidJvm]val md_theme_dark_tertiaryContainer: Color md_theme_light_background [androidJvm]val md_theme_light_background: Color md_theme_light_error [androidJvm]val md_theme_light_error: Color md_theme_light_errorContainer [androidJvm]val md_theme_light_errorContainer: Color md_theme_light_inverseOnSurface [androidJvm]val md_theme_light_inverseOnSurface: Color md_theme_light_inversePrimary [androidJvm]val md_theme_light_inversePrimary: Color md_theme_light_inverseSurface [androidJvm]val md_theme_light_inverseSurface: Color md_theme_light_onBackground [androidJvm]val md_theme_light_onBackground: Color md_theme_light_onError [androidJvm]val md_theme_light_onError: Color md_theme_light_onErrorContainer [androidJvm]val md_theme_light_onErrorContainer: Color md_theme_light_onPrimary [androidJvm]val md_theme_light_onPrimary: Color md_theme_light_onPrimaryContainer [androidJvm]val md_theme_light_onPrimaryContainer: Color md_theme_light_onSecondary [androidJvm]val md_theme_light_onSecondary: Color md_theme_light_onSecondaryContainer [androidJvm]val md_theme_light_onSecondaryContainer: Color md_theme_light_onSurface [androidJvm]val md_theme_light_onSurface: Color md_theme_light_onSurfaceVariant [androidJvm]val md_theme_light_onSurfaceVariant: Color md_theme_light_onTertiary [androidJvm]val md_theme_light_onTertiary: Color md_theme_light_onTertiaryContainer [androidJvm]val md_theme_light_onTertiaryContainer: Color md_theme_light_outline [androidJvm]val md_theme_light_outline: Color md_theme_light_outlineVariant [androidJvm]val md_theme_light_outlineVariant: Color md_theme_light_primary [androidJvm]val md_theme_light_primary: Color md_theme_light_primaryContainer [androidJvm]val md_theme_light_primaryContainer: Color md_theme_light_scrim [androidJvm]val md_theme_light_scrim: Color md_theme_light_secondary [androidJvm]val md_theme_light_secondary: Color md_theme_light_secondaryContainer [androidJvm]val md_theme_light_secondaryContainer: Color md_theme_light_surface [androidJvm]val md_theme_light_surface: Color md_theme_light_surfaceTint [androidJvm]val md_theme_light_surfaceTint: Color md_theme_light_surfaceVariant [androidJvm]val md_theme_light_surfaceVariant: Color md_theme_light_tertiary [androidJvm]val md_theme_light_tertiary: Color md_theme_light_tertiaryContainer [androidJvm]val md_theme_light_tertiaryContainer: Color Typography [androidJvm]val Typography: Typography"},{"location":"core/ui/ui/dev.atick.core.ui.theme/#functions","title":"Functions","text":"Name Summary JetpackTheme [androidJvm]@Composablefun JetpackTheme(darkTheme: Boolean = isSystemInDarkTheme(), dynamicColor: Boolean = true, content: @Composable() -&gt; Unit)Jetpack Compose Material3 theme"},{"location":"core/ui/ui/dev.atick.core.ui.theme/-jetpack-theme/","title":"jetpack theme","text":"<p>//ui/dev.atick.core.ui.theme/JetpackTheme</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/-jetpack-theme/#jetpacktheme","title":"JetpackTheme","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>fun JetpackTheme(darkTheme: Boolean = isSystemInDarkTheme(), dynamicColor: Boolean = true, content: @Composable() -&gt; Unit)</p> <p>Jetpack Compose Material3 theme</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/-jetpack-theme/#parameters","title":"Parameters","text":"<p>androidJvm</p> darkTheme Whether the theme should be dark or light dynamicColor Whether the theme should be dynamic or static content The content of the application"},{"location":"core/ui/ui/dev.atick.core.ui.theme/-typography/","title":"typography","text":"<p>//ui/dev.atick.core.ui.theme/Typography</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/-typography/#typography","title":"Typography","text":"<p>[androidJvm]\\ val Typography: Typography</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_background/","title":"Md theme dark background","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_background</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_background/#md_theme_dark_background","title":"md_theme_dark_background","text":"<p>[androidJvm]\\ val md_theme_dark_background: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_error-container/","title":"Md theme dark error container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_errorContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_error-container/#md_theme_dark_errorcontainer","title":"md_theme_dark_errorContainer","text":"<p>[androidJvm]\\ val md_theme_dark_errorContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_error/","title":"Md theme dark error","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_error</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_error/#md_theme_dark_error","title":"md_theme_dark_error","text":"<p>[androidJvm]\\ val md_theme_dark_error: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_inverse-on-surface/","title":"Md theme dark inverse on surface","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_inverseOnSurface</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_inverse-on-surface/#md_theme_dark_inverseonsurface","title":"md_theme_dark_inverseOnSurface","text":"<p>[androidJvm]\\ val md_theme_dark_inverseOnSurface: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_inverse-primary/","title":"Md theme dark inverse primary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_inversePrimary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_inverse-primary/#md_theme_dark_inverseprimary","title":"md_theme_dark_inversePrimary","text":"<p>[androidJvm]\\ val md_theme_dark_inversePrimary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_inverse-surface/","title":"Md theme dark inverse surface","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_inverseSurface</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_inverse-surface/#md_theme_dark_inversesurface","title":"md_theme_dark_inverseSurface","text":"<p>[androidJvm]\\ val md_theme_dark_inverseSurface: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-background/","title":"Md theme dark on background","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onBackground</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-background/#md_theme_dark_onbackground","title":"md_theme_dark_onBackground","text":"<p>[androidJvm]\\ val md_theme_dark_onBackground: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-error-container/","title":"Md theme dark on error container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onErrorContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-error-container/#md_theme_dark_onerrorcontainer","title":"md_theme_dark_onErrorContainer","text":"<p>[androidJvm]\\ val md_theme_dark_onErrorContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-error/","title":"Md theme dark on error","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onError</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-error/#md_theme_dark_onerror","title":"md_theme_dark_onError","text":"<p>[androidJvm]\\ val md_theme_dark_onError: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-primary-container/","title":"Md theme dark on primary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onPrimaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-primary-container/#md_theme_dark_onprimarycontainer","title":"md_theme_dark_onPrimaryContainer","text":"<p>[androidJvm]\\ val md_theme_dark_onPrimaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-primary/","title":"Md theme dark on primary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onPrimary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-primary/#md_theme_dark_onprimary","title":"md_theme_dark_onPrimary","text":"<p>[androidJvm]\\ val md_theme_dark_onPrimary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-secondary-container/","title":"Md theme dark on secondary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onSecondaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-secondary-container/#md_theme_dark_onsecondarycontainer","title":"md_theme_dark_onSecondaryContainer","text":"<p>[androidJvm]\\ val md_theme_dark_onSecondaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-secondary/","title":"Md theme dark on secondary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onSecondary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-secondary/#md_theme_dark_onsecondary","title":"md_theme_dark_onSecondary","text":"<p>[androidJvm]\\ val md_theme_dark_onSecondary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-surface-variant/","title":"Md theme dark on surface variant","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onSurfaceVariant</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-surface-variant/#md_theme_dark_onsurfacevariant","title":"md_theme_dark_onSurfaceVariant","text":"<p>[androidJvm]\\ val md_theme_dark_onSurfaceVariant: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-surface/","title":"Md theme dark on surface","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onSurface</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-surface/#md_theme_dark_onsurface","title":"md_theme_dark_onSurface","text":"<p>[androidJvm]\\ val md_theme_dark_onSurface: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-tertiary-container/","title":"Md theme dark on tertiary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onTertiaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-tertiary-container/#md_theme_dark_ontertiarycontainer","title":"md_theme_dark_onTertiaryContainer","text":"<p>[androidJvm]\\ val md_theme_dark_onTertiaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-tertiary/","title":"Md theme dark on tertiary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_onTertiary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_on-tertiary/#md_theme_dark_ontertiary","title":"md_theme_dark_onTertiary","text":"<p>[androidJvm]\\ val md_theme_dark_onTertiary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_outline-variant/","title":"Md theme dark outline variant","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_outlineVariant</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_outline-variant/#md_theme_dark_outlinevariant","title":"md_theme_dark_outlineVariant","text":"<p>[androidJvm]\\ val md_theme_dark_outlineVariant: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_outline/","title":"Md theme dark outline","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_outline</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_outline/#md_theme_dark_outline","title":"md_theme_dark_outline","text":"<p>[androidJvm]\\ val md_theme_dark_outline: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_primary-container/","title":"Md theme dark primary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_primaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_primary-container/#md_theme_dark_primarycontainer","title":"md_theme_dark_primaryContainer","text":"<p>[androidJvm]\\ val md_theme_dark_primaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_primary/","title":"Md theme dark primary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_primary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_primary/#md_theme_dark_primary","title":"md_theme_dark_primary","text":"<p>[androidJvm]\\ val md_theme_dark_primary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_scrim/","title":"Md theme dark scrim","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_scrim</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_scrim/#md_theme_dark_scrim","title":"md_theme_dark_scrim","text":"<p>[androidJvm]\\ val md_theme_dark_scrim: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_secondary-container/","title":"Md theme dark secondary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_secondaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_secondary-container/#md_theme_dark_secondarycontainer","title":"md_theme_dark_secondaryContainer","text":"<p>[androidJvm]\\ val md_theme_dark_secondaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_secondary/","title":"Md theme dark secondary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_secondary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_secondary/#md_theme_dark_secondary","title":"md_theme_dark_secondary","text":"<p>[androidJvm]\\ val md_theme_dark_secondary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_surface-tint/","title":"Md theme dark surface tint","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_surfaceTint</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_surface-tint/#md_theme_dark_surfacetint","title":"md_theme_dark_surfaceTint","text":"<p>[androidJvm]\\ val md_theme_dark_surfaceTint: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_surface-variant/","title":"Md theme dark surface variant","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_surfaceVariant</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_surface-variant/#md_theme_dark_surfacevariant","title":"md_theme_dark_surfaceVariant","text":"<p>[androidJvm]\\ val md_theme_dark_surfaceVariant: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_surface/","title":"Md theme dark surface","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_surface</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_surface/#md_theme_dark_surface","title":"md_theme_dark_surface","text":"<p>[androidJvm]\\ val md_theme_dark_surface: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_tertiary-container/","title":"Md theme dark tertiary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_tertiaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_tertiary-container/#md_theme_dark_tertiarycontainer","title":"md_theme_dark_tertiaryContainer","text":"<p>[androidJvm]\\ val md_theme_dark_tertiaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_tertiary/","title":"Md theme dark tertiary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_dark_tertiary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_dark_tertiary/#md_theme_dark_tertiary","title":"md_theme_dark_tertiary","text":"<p>[androidJvm]\\ val md_theme_dark_tertiary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_background/","title":"Md theme light background","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_background</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_background/#md_theme_light_background","title":"md_theme_light_background","text":"<p>[androidJvm]\\ val md_theme_light_background: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_error-container/","title":"Md theme light error container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_errorContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_error-container/#md_theme_light_errorcontainer","title":"md_theme_light_errorContainer","text":"<p>[androidJvm]\\ val md_theme_light_errorContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_error/","title":"Md theme light error","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_error</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_error/#md_theme_light_error","title":"md_theme_light_error","text":"<p>[androidJvm]\\ val md_theme_light_error: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_inverse-on-surface/","title":"Md theme light inverse on surface","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_inverseOnSurface</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_inverse-on-surface/#md_theme_light_inverseonsurface","title":"md_theme_light_inverseOnSurface","text":"<p>[androidJvm]\\ val md_theme_light_inverseOnSurface: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_inverse-primary/","title":"Md theme light inverse primary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_inversePrimary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_inverse-primary/#md_theme_light_inverseprimary","title":"md_theme_light_inversePrimary","text":"<p>[androidJvm]\\ val md_theme_light_inversePrimary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_inverse-surface/","title":"Md theme light inverse surface","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_inverseSurface</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_inverse-surface/#md_theme_light_inversesurface","title":"md_theme_light_inverseSurface","text":"<p>[androidJvm]\\ val md_theme_light_inverseSurface: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-background/","title":"Md theme light on background","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onBackground</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-background/#md_theme_light_onbackground","title":"md_theme_light_onBackground","text":"<p>[androidJvm]\\ val md_theme_light_onBackground: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-error-container/","title":"Md theme light on error container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onErrorContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-error-container/#md_theme_light_onerrorcontainer","title":"md_theme_light_onErrorContainer","text":"<p>[androidJvm]\\ val md_theme_light_onErrorContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-error/","title":"Md theme light on error","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onError</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-error/#md_theme_light_onerror","title":"md_theme_light_onError","text":"<p>[androidJvm]\\ val md_theme_light_onError: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-primary-container/","title":"Md theme light on primary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onPrimaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-primary-container/#md_theme_light_onprimarycontainer","title":"md_theme_light_onPrimaryContainer","text":"<p>[androidJvm]\\ val md_theme_light_onPrimaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-primary/","title":"Md theme light on primary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onPrimary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-primary/#md_theme_light_onprimary","title":"md_theme_light_onPrimary","text":"<p>[androidJvm]\\ val md_theme_light_onPrimary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-secondary-container/","title":"Md theme light on secondary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onSecondaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-secondary-container/#md_theme_light_onsecondarycontainer","title":"md_theme_light_onSecondaryContainer","text":"<p>[androidJvm]\\ val md_theme_light_onSecondaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-secondary/","title":"Md theme light on secondary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onSecondary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-secondary/#md_theme_light_onsecondary","title":"md_theme_light_onSecondary","text":"<p>[androidJvm]\\ val md_theme_light_onSecondary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-surface-variant/","title":"Md theme light on surface variant","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onSurfaceVariant</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-surface-variant/#md_theme_light_onsurfacevariant","title":"md_theme_light_onSurfaceVariant","text":"<p>[androidJvm]\\ val md_theme_light_onSurfaceVariant: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-surface/","title":"Md theme light on surface","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onSurface</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-surface/#md_theme_light_onsurface","title":"md_theme_light_onSurface","text":"<p>[androidJvm]\\ val md_theme_light_onSurface: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-tertiary-container/","title":"Md theme light on tertiary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onTertiaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-tertiary-container/#md_theme_light_ontertiarycontainer","title":"md_theme_light_onTertiaryContainer","text":"<p>[androidJvm]\\ val md_theme_light_onTertiaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-tertiary/","title":"Md theme light on tertiary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_onTertiary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_on-tertiary/#md_theme_light_ontertiary","title":"md_theme_light_onTertiary","text":"<p>[androidJvm]\\ val md_theme_light_onTertiary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_outline-variant/","title":"Md theme light outline variant","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_outlineVariant</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_outline-variant/#md_theme_light_outlinevariant","title":"md_theme_light_outlineVariant","text":"<p>[androidJvm]\\ val md_theme_light_outlineVariant: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_outline/","title":"Md theme light outline","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_outline</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_outline/#md_theme_light_outline","title":"md_theme_light_outline","text":"<p>[androidJvm]\\ val md_theme_light_outline: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_primary-container/","title":"Md theme light primary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_primaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_primary-container/#md_theme_light_primarycontainer","title":"md_theme_light_primaryContainer","text":"<p>[androidJvm]\\ val md_theme_light_primaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_primary/","title":"Md theme light primary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_primary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_primary/#md_theme_light_primary","title":"md_theme_light_primary","text":"<p>[androidJvm]\\ val md_theme_light_primary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_scrim/","title":"Md theme light scrim","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_scrim</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_scrim/#md_theme_light_scrim","title":"md_theme_light_scrim","text":"<p>[androidJvm]\\ val md_theme_light_scrim: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_secondary-container/","title":"Md theme light secondary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_secondaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_secondary-container/#md_theme_light_secondarycontainer","title":"md_theme_light_secondaryContainer","text":"<p>[androidJvm]\\ val md_theme_light_secondaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_secondary/","title":"Md theme light secondary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_secondary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_secondary/#md_theme_light_secondary","title":"md_theme_light_secondary","text":"<p>[androidJvm]\\ val md_theme_light_secondary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_surface-tint/","title":"Md theme light surface tint","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_surfaceTint</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_surface-tint/#md_theme_light_surfacetint","title":"md_theme_light_surfaceTint","text":"<p>[androidJvm]\\ val md_theme_light_surfaceTint: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_surface-variant/","title":"Md theme light surface variant","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_surfaceVariant</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_surface-variant/#md_theme_light_surfacevariant","title":"md_theme_light_surfaceVariant","text":"<p>[androidJvm]\\ val md_theme_light_surfaceVariant: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_surface/","title":"Md theme light surface","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_surface</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_surface/#md_theme_light_surface","title":"md_theme_light_surface","text":"<p>[androidJvm]\\ val md_theme_light_surface: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_tertiary-container/","title":"Md theme light tertiary container","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_tertiaryContainer</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_tertiary-container/#md_theme_light_tertiarycontainer","title":"md_theme_light_tertiaryContainer","text":"<p>[androidJvm]\\ val md_theme_light_tertiaryContainer: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_tertiary/","title":"Md theme light tertiary","text":"<p>//ui/dev.atick.core.ui.theme/md_theme_light_tertiary</p>"},{"location":"core/ui/ui/dev.atick.core.ui.theme/md_theme_light_tertiary/#md_theme_light_tertiary","title":"md_theme_light_tertiary","text":"<p>[androidJvm]\\ val md_theme_light_tertiary: Color</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/","title":"Index","text":"<p>//ui/dev.atick.core.ui.utils</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"core/ui/ui/dev.atick.core.ui.utils/#types","title":"Types","text":"Name Summary TakePictureActivityContract [androidJvm]class TakePictureActivityContract : ActivityResultContract&lt;Uri, Pair&lt;Boolean, Uri&gt;&gt; Contract for taking picture. UiText [androidJvm]sealed class UiTextA sealed class that represents a string that can be either a string resource or a dynamic string."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/","title":"Index","text":"<p>//ui/dev.atick.core.ui.utils/TakePictureActivityContract</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/#takepictureactivitycontract","title":"TakePictureActivityContract","text":"<p>[androidJvm]\\ class TakePictureActivityContract : ActivityResultContract&lt;Uri, Pair&lt;Boolean, Uri&gt;&gt; </p> <p>Contract for taking picture.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/#constructors","title":"Constructors","text":"TakePictureActivityContract [androidJvm]constructor()"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/#functions","title":"Functions","text":"Name Summary createIntent [androidJvm]@CallSuperopen override fun createIntent(context: Context, input: Uri): IntentCreate an intent for taking picture. getSynchronousResult [androidJvm]open override fun getSynchronousResult(context: Context, input: Uri): ActivityResultContract.SynchronousResult&lt;Pair&lt;Boolean, Uri&gt;&gt;?Get the synchronous result. parseResult [androidJvm]open override fun parseResult(resultCode: Int, intent: Intent?): Pair&lt;Boolean, Uri&gt;Parse the result."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/-take-picture-activity-contract/","title":"take picture activity contract","text":"<p>//ui/dev.atick.core.ui.utils/TakePictureActivityContract/TakePictureActivityContract</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/-take-picture-activity-contract/#takepictureactivitycontract","title":"TakePictureActivityContract","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/create-intent/","title":"Create intent","text":"<p>//ui/dev.atick.core.ui.utils/TakePictureActivityContract/createIntent</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/create-intent/#createintent","title":"createIntent","text":"<p>[androidJvm]\\</p> <p>@CallSuper</p> <p>open override fun createIntent(context: Context, input: Uri): Intent</p> <p>Create an intent for taking picture.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/create-intent/#return","title":"Return","text":"<p>The intent.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/create-intent/#parameters","title":"Parameters","text":"<p>androidJvm</p> context The context. input The input."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/get-synchronous-result/","title":"Get synchronous result","text":"<p>//ui/dev.atick.core.ui.utils/TakePictureActivityContract/getSynchronousResult</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/get-synchronous-result/#getsynchronousresult","title":"getSynchronousResult","text":"<p>[androidJvm]\\ open override fun getSynchronousResult(context: Context, input: Uri): ActivityResultContract.SynchronousResult&lt;Pair&lt;Boolean, Uri&gt;&gt;?</p> <p>Get the synchronous result.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/get-synchronous-result/#return","title":"Return","text":"<p>The synchronous result.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/get-synchronous-result/#parameters","title":"Parameters","text":"<p>androidJvm</p> context The context. input The input."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/parse-result/","title":"Parse result","text":"<p>//ui/dev.atick.core.ui.utils/TakePictureActivityContract/parseResult</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/parse-result/#parseresult","title":"parseResult","text":"<p>[androidJvm]\\ open override fun parseResult(resultCode: Int, intent: Intent?): Pair&lt;Boolean, Uri&gt;</p> <p>Parse the result.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/parse-result/#return","title":"Return","text":"<p>The result.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-take-picture-activity-contract/parse-result/#parameters","title":"Parameters","text":"<p>androidJvm</p> resultCode The result code. intent The intent."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/","title":"Index","text":"<p>//ui/dev.atick.core.ui.utils/UiText</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/#uitext","title":"UiText","text":"<p>sealed class UiText</p> <p>A sealed class that represents a string that can be either a string resource or a dynamic string.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/#inheritors","title":"Inheritors","text":"DynamicString StringResource"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/#types","title":"Types","text":"Name Summary DynamicString [androidJvm]data class DynamicString(val value: String) : UiTextA dynamic string that can be used to represent a string that is not known at compile time. StringResource [androidJvm]class StringResource(@StringResval resId: Int, val args: Any) : UiTextA string resource that can be used to represent a string that is known at compile time."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/#functions","title":"Functions","text":"Name Summary asString [androidJvm]@Composablefun asString(): Stringfun asString(context: Context): StringReturns the string value of this UiText."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/as-string/","title":"As string","text":"<p>//ui/dev.atick.core.ui.utils/UiText/asString</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/as-string/#asstring","title":"asString","text":"<p>[androidJvm]\\</p> <p>@Composable</p> <p>fun asString(): String</p> <p>fun asString(context: Context): String</p> <p>Returns the string value of this UiText.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/","title":"Index","text":"<p>//ui/dev.atick.core.ui.utils/UiText/DynamicString</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/#dynamicstring","title":"DynamicString","text":"<p>data class DynamicString(val value: String) : UiText</p> <p>A dynamic string that can be used to represent a string that is not known at compile time.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/#parameters","title":"Parameters","text":"<p>androidJvm</p> value The string value."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/#constructors","title":"Constructors","text":"DynamicString [androidJvm]constructor(value: String)"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/#properties","title":"Properties","text":"Name Summary value [androidJvm]val value: String"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/#functions","title":"Functions","text":"Name Summary asString [androidJvm]@Composablefun asString(): Stringfun asString(context: Context): StringReturns the string value of this UiText."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/-dynamic-string/","title":"dynamic string","text":"<p>//ui/dev.atick.core.ui.utils/UiText/DynamicString/DynamicString</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/-dynamic-string/#dynamicstring","title":"DynamicString","text":"<p>[androidJvm]\\ constructor(value: String)</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/-dynamic-string/#parameters","title":"Parameters","text":"<p>androidJvm</p> value The string value."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/value/","title":"Value","text":"<p>//ui/dev.atick.core.ui.utils/UiText/DynamicString/value</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/value/#value","title":"value","text":"<p>[androidJvm]\\ val value: String</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-dynamic-string/value/#parameters","title":"Parameters","text":"<p>androidJvm</p> value The string value."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/","title":"Index","text":"<p>//ui/dev.atick.core.ui.utils/UiText/StringResource</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/#stringresource","title":"StringResource","text":"<p>class StringResource(@StringResval resId: Int, val args: Any) : UiText</p> <p>A string resource that can be used to represent a string that is known at compile time.</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/#parameters","title":"Parameters","text":"<p>androidJvm</p> resId The string resource id. args The string resource arguments."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/#constructors","title":"Constructors","text":"StringResource [androidJvm]constructor(@StringResresId: Int, vararg args: Any)"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/#properties","title":"Properties","text":"Name Summary args [androidJvm]val args: Array&lt;out Any&gt; resId [androidJvm]val resId: Int"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/#functions","title":"Functions","text":"Name Summary asString [androidJvm]@Composablefun asString(): Stringfun asString(context: Context): StringReturns the string value of this UiText."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/-string-resource/","title":"string resource","text":"<p>//ui/dev.atick.core.ui.utils/UiText/StringResource/StringResource</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/-string-resource/#stringresource","title":"StringResource","text":"<p>[androidJvm]\\ constructor(@StringResresId: Int, vararg args: Any)</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/-string-resource/#parameters","title":"Parameters","text":"<p>androidJvm</p> resId The string resource id. args The string resource arguments."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/args/","title":"Args","text":"<p>//ui/dev.atick.core.ui.utils/UiText/StringResource/args</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/args/#args","title":"args","text":"<p>[androidJvm]\\ val args: Array&lt;out Any&gt;</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/args/#parameters","title":"Parameters","text":"<p>androidJvm</p> args The string resource arguments."},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/res-id/","title":"Res id","text":"<p>//ui/dev.atick.core.ui.utils/UiText/StringResource/resId</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/res-id/#resid","title":"resId","text":"<p>[androidJvm]\\ val resId: Int</p>"},{"location":"core/ui/ui/dev.atick.core.ui.utils/-ui-text/-string-resource/res-id/#parameters","title":"Parameters","text":"<p>androidJvm</p> resId The string resource id."},{"location":"network/","title":"Index","text":"<p>//network</p>"},{"location":"network/#network","title":"network","text":""},{"location":"network/#packages","title":"Packages","text":"Name dev.atick.network.api dev.atick.network.data dev.atick.network.data.models dev.atick.network.di dev.atick.network.di.okhttp dev.atick.network.di.retrofit dev.atick.network.utils"},{"location":"network/network/dev.atick.network.api/","title":"Index","text":"<p>//network/dev.atick.network.api</p>"},{"location":"network/network/dev.atick.network.api/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"network/network/dev.atick.network.api/#types","title":"Types","text":"Name Summary JetpackRestApi [androidJvm]interface JetpackRestApiRetrofit API interface for Jetpack."},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/","title":"Index","text":"<p>//network/dev.atick.network.api/JetpackRestApi</p>"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/#jetpackrestapi","title":"JetpackRestApi","text":"<p>[androidJvm]\\ interface JetpackRestApi</p> <p>Retrofit API interface for Jetpack.</p>"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/#functions","title":"Functions","text":"Name Summary getItem [androidJvm]@GET(value = \"todos/{id}\")abstract suspend fun getItem(@Path(value = \"id\")id: Int): ResponseGet a list of items."},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/get-item/","title":"Get item","text":"<p>//network/dev.atick.network.api/JetpackRestApi/getItem</p>"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/get-item/#getitem","title":"getItem","text":"<p>[androidJvm]\\</p> <p>@GET(value = \"todos/{id}\")</p> <p>abstract suspend fun getItem(@Path(value = \"id\")id: Int): Response</p> <p>Get a list of items.</p>"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/get-item/#return","title":"Return","text":"<p>The particular item.</p>"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/get-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The id of the item."},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/-companion/","title":"Index","text":"<p>//network/dev.atick.network.api/JetpackRestApi/Companion</p>"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/-companion/#companion","title":"Companion","text":"<p>[androidJvm]\\ object Companion</p>"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/-companion/#properties","title":"Properties","text":"Name Summary BASE_URL [androidJvm]const val BASE_URL: String"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/-companion/-b-a-s-e_-u-r-l/","title":"b a s e  u r l","text":"<p>//network/dev.atick.network.api/JetpackRestApi/Companion/BASE_URL</p>"},{"location":"network/network/dev.atick.network.api/-jetpack-rest-api/-companion/-b-a-s-e_-u-r-l/#base_url","title":"BASE_URL","text":"<p>[androidJvm]\\ const val BASE_URL: String</p>"},{"location":"network/network/dev.atick.network.data/","title":"Index","text":"<p>//network/dev.atick.network.data</p>"},{"location":"network/network/dev.atick.network.data/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"network/network/dev.atick.network.data/#types","title":"Types","text":"Name Summary JetpackDataSource [androidJvm]interface JetpackDataSourceData source interface for Jetpack. JetpackDataSourceImpl [androidJvm]class JetpackDataSourceImpl@Injectconstructor(jetpackRestApi: JetpackRestApi) : JetpackDataSourceData source implementation for Jetpack."},{"location":"network/network/dev.atick.network.data/-jetpack-data-source/","title":"Index","text":"<p>//network/dev.atick.network.data/JetpackDataSource</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source/#jetpackdatasource","title":"JetpackDataSource","text":"<p>interface JetpackDataSource</p> <p>Data source interface for Jetpack.</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source/#inheritors","title":"Inheritors","text":"JetpackDataSourceImpl"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source/#functions","title":"Functions","text":"Name Summary getItem [androidJvm]abstract suspend fun getItem(id: Int): ResponseGet a list of items."},{"location":"network/network/dev.atick.network.data/-jetpack-data-source/get-item/","title":"Get item","text":"<p>//network/dev.atick.network.data/JetpackDataSource/getItem</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source/get-item/#getitem","title":"getItem","text":"<p>[androidJvm]\\ abstract suspend fun getItem(id: Int): Response</p> <p>Get a list of items.</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source/get-item/#return","title":"Return","text":"<p>The particular item as Response.</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source/get-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The id of the item."},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/","title":"Index","text":"<p>//network/dev.atick.network.data/JetpackDataSourceImpl</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/#jetpackdatasourceimpl","title":"JetpackDataSourceImpl","text":"<p>class JetpackDataSourceImpl@Injectconstructor(jetpackRestApi: JetpackRestApi) : JetpackDataSource</p> <p>Data source implementation for Jetpack.</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/#parameters","title":"Parameters","text":"<p>androidJvm</p> jetpackRestApi The JetpackRestApi instance."},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/#constructors","title":"Constructors","text":"JetpackDataSourceImpl [androidJvm]@Injectconstructor(jetpackRestApi: JetpackRestApi)"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/#functions","title":"Functions","text":"Name Summary getItem [androidJvm]open suspend override fun getItem(id: Int): ResponseGet a list of items."},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/-jetpack-data-source-impl/","title":"jetpack data source impl","text":"<p>//network/dev.atick.network.data/JetpackDataSourceImpl/JetpackDataSourceImpl</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/-jetpack-data-source-impl/#jetpackdatasourceimpl","title":"JetpackDataSourceImpl","text":"<p>[androidJvm]\\</p> <p>@Inject</p> <p>constructor(jetpackRestApi: JetpackRestApi)</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/-jetpack-data-source-impl/#parameters","title":"Parameters","text":"<p>androidJvm</p> jetpackRestApi The JetpackRestApi instance."},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/get-item/","title":"Get item","text":"<p>//network/dev.atick.network.data/JetpackDataSourceImpl/getItem</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/get-item/#getitem","title":"getItem","text":"<p>[androidJvm]\\ open suspend override fun getItem(id: Int): Response</p> <p>Get a list of items.</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/get-item/#return","title":"Return","text":"<p>The particular item as Response.</p>"},{"location":"network/network/dev.atick.network.data/-jetpack-data-source-impl/get-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The id of the item."},{"location":"network/network/dev.atick.network.data.models/","title":"Index","text":"<p>//network/dev.atick.network.data.models</p>"},{"location":"network/network/dev.atick.network.data.models/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"network/network/dev.atick.network.data.models/#types","title":"Types","text":"Name Summary Response [androidJvm]data class Response(val id: Int, val title: String)Data class for a request."},{"location":"network/network/dev.atick.network.data.models/-response/","title":"Index","text":"<p>//network/dev.atick.network.data.models/Response</p>"},{"location":"network/network/dev.atick.network.data.models/-response/#response","title":"Response","text":"<p>data class Response(val id: Int, val title: String)</p> <p>Data class for a request.</p>"},{"location":"network/network/dev.atick.network.data.models/-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The id of the item. title The title of the item."},{"location":"network/network/dev.atick.network.data.models/-response/#constructors","title":"Constructors","text":"Response [androidJvm]constructor(id: Int, title: String)"},{"location":"network/network/dev.atick.network.data.models/-response/#properties","title":"Properties","text":"Name Summary id [androidJvm]@SerializedName(value = \"id\")val id: Int title [androidJvm]@SerializedName(value = \"title\")val title: String"},{"location":"network/network/dev.atick.network.data.models/-response/-response/","title":"response","text":"<p>//network/dev.atick.network.data.models/Response/Response</p>"},{"location":"network/network/dev.atick.network.data.models/-response/-response/#response","title":"Response","text":"<p>[androidJvm]\\ constructor(id: Int, title: String)</p>"},{"location":"network/network/dev.atick.network.data.models/-response/-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The id of the item. title The title of the item."},{"location":"network/network/dev.atick.network.data.models/-response/id/","title":"Id","text":"<p>//network/dev.atick.network.data.models/Response/id</p>"},{"location":"network/network/dev.atick.network.data.models/-response/id/#id","title":"id","text":"<p>[androidJvm]\\</p> <p>@SerializedName(value = \"id\")</p> <p>val id: Int</p>"},{"location":"network/network/dev.atick.network.data.models/-response/id/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The id of the item."},{"location":"network/network/dev.atick.network.data.models/-response/title/","title":"Title","text":"<p>//network/dev.atick.network.data.models/Response/title</p>"},{"location":"network/network/dev.atick.network.data.models/-response/title/#title","title":"title","text":"<p>[androidJvm]\\</p> <p>@SerializedName(value = \"title\")</p> <p>val title: String</p>"},{"location":"network/network/dev.atick.network.data.models/-response/title/#parameters","title":"Parameters","text":"<p>androidJvm</p> title The title of the item."},{"location":"network/network/dev.atick.network.di/","title":"Index","text":"<p>//network/dev.atick.network.di</p>"},{"location":"network/network/dev.atick.network.di/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"network/network/dev.atick.network.di/#types","title":"Types","text":"Name Summary ConnectivityManagerModule [androidJvm]@Moduleobject ConnectivityManagerModuleModule for providing ConnectivityManager. DataSourceModule [androidJvm]@Moduleabstract class DataSourceModuleModule for providing JetpackDataSource. NetworkUtilsModule [androidJvm]@Moduleabstract class NetworkUtilsModuleModule for providing NetworkUtils. RestApiModule [androidJvm]@Module(includes = [RetrofitModule::class])object RestApiModuleModule for providing JetpackRestApi."},{"location":"network/network/dev.atick.network.di/-connectivity-manager-module/","title":"Index","text":"<p>//network/dev.atick.network.di/ConnectivityManagerModule</p>"},{"location":"network/network/dev.atick.network.di/-connectivity-manager-module/#connectivitymanagermodule","title":"ConnectivityManagerModule","text":"<p>[androidJvm]\\ @Module</p> <p>object ConnectivityManagerModule</p> <p>Module for providing ConnectivityManager.</p>"},{"location":"network/network/dev.atick.network.di/-connectivity-manager-module/#functions","title":"Functions","text":"Name Summary provideConnectivityManager [androidJvm]@Provides@Singletonfun provideConnectivityManager(context: Context): ConnectivityManagerProvides ConnectivityManager."},{"location":"network/network/dev.atick.network.di/-connectivity-manager-module/provide-connectivity-manager/","title":"Provide connectivity manager","text":"<p>//network/dev.atick.network.di/ConnectivityManagerModule/provideConnectivityManager</p>"},{"location":"network/network/dev.atick.network.di/-connectivity-manager-module/provide-connectivity-manager/#provideconnectivitymanager","title":"provideConnectivityManager","text":"<p>[androidJvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideConnectivityManager(context: Context): ConnectivityManager</p> <p>Provides ConnectivityManager.</p>"},{"location":"network/network/dev.atick.network.di/-connectivity-manager-module/provide-connectivity-manager/#return","title":"Return","text":"<p>ConnectivityManager.</p>"},{"location":"network/network/dev.atick.network.di/-connectivity-manager-module/provide-connectivity-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> context Context."},{"location":"network/network/dev.atick.network.di/-data-source-module/","title":"Index","text":"<p>//network/dev.atick.network.di/DataSourceModule</p>"},{"location":"network/network/dev.atick.network.di/-data-source-module/#datasourcemodule","title":"DataSourceModule","text":"<p>[androidJvm]\\ @Module</p> <p>abstract class DataSourceModule</p> <p>Module for providing JetpackDataSource.</p>"},{"location":"network/network/dev.atick.network.di/-data-source-module/#constructors","title":"Constructors","text":"DataSourceModule [androidJvm]constructor()"},{"location":"network/network/dev.atick.network.di/-data-source-module/#functions","title":"Functions","text":"Name Summary bindJetpackDataSource [androidJvm]@Binds@Singletonabstract fun bindJetpackDataSource(jetpackDataSourceImpl: JetpackDataSourceImpl): JetpackDataSourceBinds JetpackDataSourceImpl to JetpackDataSource."},{"location":"network/network/dev.atick.network.di/-data-source-module/-data-source-module/","title":"data source module","text":"<p>//network/dev.atick.network.di/DataSourceModule/DataSourceModule</p>"},{"location":"network/network/dev.atick.network.di/-data-source-module/-data-source-module/#datasourcemodule","title":"DataSourceModule","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"network/network/dev.atick.network.di/-data-source-module/bind-jetpack-data-source/","title":"Bind jetpack data source","text":"<p>//network/dev.atick.network.di/DataSourceModule/bindJetpackDataSource</p>"},{"location":"network/network/dev.atick.network.di/-data-source-module/bind-jetpack-data-source/#bindjetpackdatasource","title":"bindJetpackDataSource","text":"<p>[androidJvm]\\</p> <p>@Binds</p> <p>@Singleton</p> <p>abstract fun bindJetpackDataSource(jetpackDataSourceImpl: JetpackDataSourceImpl): JetpackDataSource</p> <p>Binds JetpackDataSourceImpl to JetpackDataSource.</p>"},{"location":"network/network/dev.atick.network.di/-data-source-module/bind-jetpack-data-source/#return","title":"Return","text":"<p>JetpackDataSource.</p>"},{"location":"network/network/dev.atick.network.di/-data-source-module/bind-jetpack-data-source/#parameters","title":"Parameters","text":"<p>androidJvm</p> jetpackDataSourceImpl JetpackDataSourceImpl."},{"location":"network/network/dev.atick.network.di/-network-utils-module/","title":"Index","text":"<p>//network/dev.atick.network.di/NetworkUtilsModule</p>"},{"location":"network/network/dev.atick.network.di/-network-utils-module/#networkutilsmodule","title":"NetworkUtilsModule","text":"<p>[androidJvm]\\ @Module</p> <p>abstract class NetworkUtilsModule</p> <p>Module for providing NetworkUtils.</p>"},{"location":"network/network/dev.atick.network.di/-network-utils-module/#constructors","title":"Constructors","text":"NetworkUtilsModule [androidJvm]constructor()"},{"location":"network/network/dev.atick.network.di/-network-utils-module/#functions","title":"Functions","text":"Name Summary bindNetworkUtils [androidJvm]@Binds@Singleton@ExperimentalCoroutinesApiabstract fun bindNetworkUtils(networkUtilsImpl: NetworkUtilsImpl): NetworkUtilsBinds NetworkUtilsImpl to NetworkUtils."},{"location":"network/network/dev.atick.network.di/-network-utils-module/-network-utils-module/","title":"network utils module","text":"<p>//network/dev.atick.network.di/NetworkUtilsModule/NetworkUtilsModule</p>"},{"location":"network/network/dev.atick.network.di/-network-utils-module/-network-utils-module/#networkutilsmodule","title":"NetworkUtilsModule","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"network/network/dev.atick.network.di/-network-utils-module/bind-network-utils/","title":"Bind network utils","text":"<p>//network/dev.atick.network.di/NetworkUtilsModule/bindNetworkUtils</p>"},{"location":"network/network/dev.atick.network.di/-network-utils-module/bind-network-utils/#bindnetworkutils","title":"bindNetworkUtils","text":"<p>[androidJvm]\\</p> <p>@Binds</p> <p>@Singleton</p> <p>@ExperimentalCoroutinesApi</p> <p>abstract fun bindNetworkUtils(networkUtilsImpl: NetworkUtilsImpl): NetworkUtils</p> <p>Binds NetworkUtilsImpl to NetworkUtils.</p>"},{"location":"network/network/dev.atick.network.di/-network-utils-module/bind-network-utils/#return","title":"Return","text":"<p>NetworkUtils.</p>"},{"location":"network/network/dev.atick.network.di/-network-utils-module/bind-network-utils/#parameters","title":"Parameters","text":"<p>androidJvm</p> networkUtilsImpl NetworkUtilsImpl."},{"location":"network/network/dev.atick.network.di/-rest-api-module/","title":"Index","text":"<p>//network/dev.atick.network.di/RestApiModule</p>"},{"location":"network/network/dev.atick.network.di/-rest-api-module/#restapimodule","title":"RestApiModule","text":"<p>[androidJvm]\\ @Module(includes = [RetrofitModule::class])</p> <p>object RestApiModule</p> <p>Module for providing JetpackRestApi.</p>"},{"location":"network/network/dev.atick.network.di/-rest-api-module/#functions","title":"Functions","text":"Name Summary provideApiService [androidJvm]@Singleton@Providesfun provideApiService(retrofit: Retrofit): JetpackRestApiProvides JetpackRestApi."},{"location":"network/network/dev.atick.network.di/-rest-api-module/provide-api-service/","title":"Provide api service","text":"<p>//network/dev.atick.network.di/RestApiModule/provideApiService</p>"},{"location":"network/network/dev.atick.network.di/-rest-api-module/provide-api-service/#provideapiservice","title":"provideApiService","text":"<p>[androidJvm]\\</p> <p>@Singleton</p> <p>@Provides</p> <p>fun provideApiService(retrofit: Retrofit): JetpackRestApi</p> <p>Provides JetpackRestApi.</p>"},{"location":"network/network/dev.atick.network.di/-rest-api-module/provide-api-service/#return","title":"Return","text":"<p>JetpackRestApi.</p>"},{"location":"network/network/dev.atick.network.di/-rest-api-module/provide-api-service/#parameters","title":"Parameters","text":"<p>androidJvm</p> retrofit Retrofit."},{"location":"network/network/dev.atick.network.di.okhttp/","title":"Index","text":"<p>//network/dev.atick.network.di.okhttp</p>"},{"location":"network/network/dev.atick.network.di.okhttp/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"network/network/dev.atick.network.di.okhttp/#types","title":"Types","text":"Name Summary InterceptorModule [androidJvm]@Moduleobject InterceptorModuleModule for providing interceptors. OkHttpClientModule [androidJvm]@Module(includes = [InterceptorModule::class])object OkHttpClientModuleModule for providing OkHttpClient."},{"location":"network/network/dev.atick.network.di.okhttp/-interceptor-module/","title":"Index","text":"<p>//network/dev.atick.network.di.okhttp/InterceptorModule</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-interceptor-module/#interceptormodule","title":"InterceptorModule","text":"<p>[androidJvm]\\ @Module</p> <p>object InterceptorModule</p> <p>Module for providing interceptors.</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-interceptor-module/#functions","title":"Functions","text":"Name Summary provideLoggingInterceptor [androidJvm]@Provides@Singletonfun provideLoggingInterceptor(): HttpLoggingInterceptorProvides HttpLoggingInterceptor."},{"location":"network/network/dev.atick.network.di.okhttp/-interceptor-module/provide-logging-interceptor/","title":"Provide logging interceptor","text":"<p>//network/dev.atick.network.di.okhttp/InterceptorModule/provideLoggingInterceptor</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-interceptor-module/provide-logging-interceptor/#providelogginginterceptor","title":"provideLoggingInterceptor","text":"<p>[androidJvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideLoggingInterceptor(): HttpLoggingInterceptor</p> <p>Provides HttpLoggingInterceptor.</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-interceptor-module/provide-logging-interceptor/#return","title":"Return","text":"<p>HttpLoggingInterceptor.</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-ok-http-client-module/","title":"Index","text":"<p>//network/dev.atick.network.di.okhttp/OkHttpClientModule</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-ok-http-client-module/#okhttpclientmodule","title":"OkHttpClientModule","text":"<p>[androidJvm]\\ @Module(includes = [InterceptorModule::class])</p> <p>object OkHttpClientModule</p> <p>Module for providing OkHttpClient.</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-ok-http-client-module/#functions","title":"Functions","text":"Name Summary provideOkHttpClient [androidJvm]@Singleton@Providesfun provideOkHttpClient(loggingInterceptor: HttpLoggingInterceptor): OkHttpClientProvides OkHttpClient."},{"location":"network/network/dev.atick.network.di.okhttp/-ok-http-client-module/provide-ok-http-client/","title":"Provide ok http client","text":"<p>//network/dev.atick.network.di.okhttp/OkHttpClientModule/provideOkHttpClient</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-ok-http-client-module/provide-ok-http-client/#provideokhttpclient","title":"provideOkHttpClient","text":"<p>[androidJvm]\\</p> <p>@Singleton</p> <p>@Provides</p> <p>fun provideOkHttpClient(loggingInterceptor: HttpLoggingInterceptor): OkHttpClient</p> <p>Provides OkHttpClient.</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-ok-http-client-module/provide-ok-http-client/#return","title":"Return","text":"<p>OkHttpClient.</p>"},{"location":"network/network/dev.atick.network.di.okhttp/-ok-http-client-module/provide-ok-http-client/#parameters","title":"Parameters","text":"<p>androidJvm</p> loggingInterceptor HttpLoggingInterceptor."},{"location":"network/network/dev.atick.network.di.retrofit/","title":"Index","text":"<p>//network/dev.atick.network.di.retrofit</p>"},{"location":"network/network/dev.atick.network.di.retrofit/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"network/network/dev.atick.network.di.retrofit/#types","title":"Types","text":"Name Summary GsonConverterModule [androidJvm]@Moduleobject GsonConverterModuleModule for providing GsonConverterFactory. RetrofitModule [androidJvm]@Module(includes = [OkHttpClientModule::class])object RetrofitModuleModule for providing Retrofit."},{"location":"network/network/dev.atick.network.di.retrofit/-gson-converter-module/","title":"Index","text":"<p>//network/dev.atick.network.di.retrofit/GsonConverterModule</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-gson-converter-module/#gsonconvertermodule","title":"GsonConverterModule","text":"<p>[androidJvm]\\ @Module</p> <p>object GsonConverterModule</p> <p>Module for providing GsonConverterFactory.</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-gson-converter-module/#functions","title":"Functions","text":"Name Summary provideGsonConverterFactory [androidJvm]@Singleton@Providesfun provideGsonConverterFactory(): GsonConverterFactoryProvides GsonConverterFactory."},{"location":"network/network/dev.atick.network.di.retrofit/-gson-converter-module/provide-gson-converter-factory/","title":"Provide gson converter factory","text":"<p>//network/dev.atick.network.di.retrofit/GsonConverterModule/provideGsonConverterFactory</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-gson-converter-module/provide-gson-converter-factory/#providegsonconverterfactory","title":"provideGsonConverterFactory","text":"<p>[androidJvm]\\</p> <p>@Singleton</p> <p>@Provides</p> <p>fun provideGsonConverterFactory(): GsonConverterFactory</p> <p>Provides GsonConverterFactory.</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-gson-converter-module/provide-gson-converter-factory/#return","title":"Return","text":"<p>GsonConverterFactory.</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-retrofit-module/","title":"Index","text":"<p>//network/dev.atick.network.di.retrofit/RetrofitModule</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-retrofit-module/#retrofitmodule","title":"RetrofitModule","text":"<p>[androidJvm]\\ @Module(includes = [OkHttpClientModule::class])</p> <p>object RetrofitModule</p> <p>Module for providing Retrofit.</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-retrofit-module/#functions","title":"Functions","text":"Name Summary provideRetrofitClient [androidJvm]@Singleton@Providesfun provideRetrofitClient(converterFactory: GsonConverterFactory, okHttpClient: OkHttpClient): RetrofitProvides Retrofit."},{"location":"network/network/dev.atick.network.di.retrofit/-retrofit-module/provide-retrofit-client/","title":"Provide retrofit client","text":"<p>//network/dev.atick.network.di.retrofit/RetrofitModule/provideRetrofitClient</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-retrofit-module/provide-retrofit-client/#provideretrofitclient","title":"provideRetrofitClient","text":"<p>[androidJvm]\\</p> <p>@Singleton</p> <p>@Provides</p> <p>fun provideRetrofitClient(converterFactory: GsonConverterFactory, okHttpClient: OkHttpClient): Retrofit</p> <p>Provides Retrofit.</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-retrofit-module/provide-retrofit-client/#return","title":"Return","text":"<p>Retrofit.</p>"},{"location":"network/network/dev.atick.network.di.retrofit/-retrofit-module/provide-retrofit-client/#parameters","title":"Parameters","text":"<p>androidJvm</p> converterFactory GsonConverterFactory. okHttpClient OkHttpClient."},{"location":"network/network/dev.atick.network.utils/","title":"Index","text":"<p>//network/dev.atick.network.utils</p>"},{"location":"network/network/dev.atick.network.utils/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"network/network/dev.atick.network.utils/#types","title":"Types","text":"Name Summary NetworkState [androidJvm]enum NetworkState : Enum&lt;NetworkState&gt; Network state. NetworkUtils [androidJvm]interface NetworkUtilsNetwork utils. NetworkUtilsImpl [androidJvm]class NetworkUtilsImpl@Injectconstructor(connectivityManager: ConnectivityManager) : NetworkUtilsImplementation of NetworkUtils."},{"location":"network/network/dev.atick.network.utils/-network-state/","title":"Index","text":"<p>//network/dev.atick.network.utils/NetworkState</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/#networkstate","title":"NetworkState","text":"<p>enum NetworkState : Enum&lt;NetworkState&gt; </p> <p>Network state.</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/#parameters","title":"Parameters","text":"<p>androidJvm</p> description StringRes description."},{"location":"network/network/dev.atick.network.utils/-network-state/#entries","title":"Entries","text":"CONNECTED [androidJvm]CONNECTEDNetwork is connected. LOSING [androidJvm]LOSINGNetwork is connecting. LOST [androidJvm]LOSTNetwork is disconnected. UNAVAILABLE [androidJvm]UNAVAILABLENetwork is unavailable."},{"location":"network/network/dev.atick.network.utils/-network-state/#properties","title":"Properties","text":"Name Summary description [androidJvm]val description: Int name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"network/network/dev.atick.network.utils/-network-state/#functions","title":"Functions","text":"Name Summary valueOf [androidJvm]fun valueOf(value: String): NetworkStateReturns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) values [androidJvm]fun values(): Array&lt;NetworkState&gt;Returns an array containing the constants of this enum type, in the order they're declared."},{"location":"network/network/dev.atick.network.utils/-network-state/description/","title":"Description","text":"<p>//network/dev.atick.network.utils/NetworkState/description</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/description/#description","title":"description","text":"<p>[androidJvm]\\ val description: Int</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/description/#parameters","title":"Parameters","text":"<p>androidJvm</p> description StringRes description."},{"location":"network/network/dev.atick.network.utils/-network-state/value-of/","title":"Value of","text":"<p>//network/dev.atick.network.utils/NetworkState/valueOf</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm]\\ fun valueOf(value: String): NetworkState</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"network/network/dev.atick.network.utils/-network-state/values/","title":"Values","text":"<p>//network/dev.atick.network.utils/NetworkState/values</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/values/#values","title":"values","text":"<p>[androidJvm]\\ fun values(): Array&lt;NetworkState&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/-c-o-n-n-e-c-t-e-d/","title":"Index","text":"<p>//network/dev.atick.network.utils/NetworkState/CONNECTED</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/-c-o-n-n-e-c-t-e-d/#connected","title":"CONNECTED","text":"<p>[androidJvm]\\ CONNECTED</p> <p>Network is connected.</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/-c-o-n-n-e-c-t-e-d/#properties","title":"Properties","text":"Name Summary description [androidJvm]val description: Int name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"network/network/dev.atick.network.utils/-network-state/-l-o-s-i-n-g/","title":"Index","text":"<p>//network/dev.atick.network.utils/NetworkState/LOSING</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/-l-o-s-i-n-g/#losing","title":"LOSING","text":"<p>[androidJvm]\\ LOSING</p> <p>Network is connecting.</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/-l-o-s-i-n-g/#properties","title":"Properties","text":"Name Summary description [androidJvm]val description: Int name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"network/network/dev.atick.network.utils/-network-state/-l-o-s-t/","title":"Index","text":"<p>//network/dev.atick.network.utils/NetworkState/LOST</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/-l-o-s-t/#lost","title":"LOST","text":"<p>[androidJvm]\\ LOST</p> <p>Network is disconnected.</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/-l-o-s-t/#properties","title":"Properties","text":"Name Summary description [androidJvm]val description: Int name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"network/network/dev.atick.network.utils/-network-state/-u-n-a-v-a-i-l-a-b-l-e/","title":"Index","text":"<p>//network/dev.atick.network.utils/NetworkState/UNAVAILABLE</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/-u-n-a-v-a-i-l-a-b-l-e/#unavailable","title":"UNAVAILABLE","text":"<p>[androidJvm]\\ UNAVAILABLE</p> <p>Network is unavailable.</p>"},{"location":"network/network/dev.atick.network.utils/-network-state/-u-n-a-v-a-i-l-a-b-l-e/#properties","title":"Properties","text":"Name Summary description [androidJvm]val description: Int name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"network/network/dev.atick.network.utils/-network-utils/","title":"Index","text":"<p>//network/dev.atick.network.utils/NetworkUtils</p>"},{"location":"network/network/dev.atick.network.utils/-network-utils/#networkutils","title":"NetworkUtils","text":"<p>interface NetworkUtils</p> <p>Network utils.</p>"},{"location":"network/network/dev.atick.network.utils/-network-utils/#inheritors","title":"Inheritors","text":"NetworkUtilsImpl"},{"location":"network/network/dev.atick.network.utils/-network-utils/#properties","title":"Properties","text":"Name Summary currentState [androidJvm]abstract val currentState: Flow&lt;NetworkState&gt;Current network state as Flow."},{"location":"network/network/dev.atick.network.utils/-network-utils/current-state/","title":"Current state","text":"<p>//network/dev.atick.network.utils/NetworkUtils/currentState</p>"},{"location":"network/network/dev.atick.network.utils/-network-utils/current-state/#currentstate","title":"currentState","text":"<p>[androidJvm]\\ abstract val currentState: Flow&lt;NetworkState&gt;</p> <p>Current network state as Flow.</p>"},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/","title":"Index","text":"<p>//network/dev.atick.network.utils/NetworkUtilsImpl</p>"},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/#networkutilsimpl","title":"NetworkUtilsImpl","text":"<p>class NetworkUtilsImpl@Injectconstructor(connectivityManager: ConnectivityManager) : NetworkUtils</p> <p>Implementation of NetworkUtils.</p>"},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/#parameters","title":"Parameters","text":"<p>androidJvm</p> connectivityManager ConnectivityManager."},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/#constructors","title":"Constructors","text":"NetworkUtilsImpl [androidJvm]@Injectconstructor(connectivityManager: ConnectivityManager)"},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/#properties","title":"Properties","text":"Name Summary currentState [androidJvm]open override val currentState: Flow&lt;NetworkState&gt;Current network state as Flow."},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/-network-utils-impl/","title":"network utils impl","text":"<p>//network/dev.atick.network.utils/NetworkUtilsImpl/NetworkUtilsImpl</p>"},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/-network-utils-impl/#networkutilsimpl","title":"NetworkUtilsImpl","text":"<p>[androidJvm]\\</p> <p>@Inject</p> <p>constructor(connectivityManager: ConnectivityManager)</p>"},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/-network-utils-impl/#parameters","title":"Parameters","text":"<p>androidJvm</p> connectivityManager ConnectivityManager."},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/current-state/","title":"Current state","text":"<p>//network/dev.atick.network.utils/NetworkUtilsImpl/currentState</p>"},{"location":"network/network/dev.atick.network.utils/-network-utils-impl/current-state/#currentstate","title":"currentState","text":"<p>[androidJvm]\\ open override val currentState: Flow&lt;NetworkState&gt;</p> <p>Current network state as Flow.</p>"},{"location":"storage/preferences/","title":"Index","text":"<p>//preferences</p>"},{"location":"storage/preferences/#preferences","title":"preferences","text":""},{"location":"storage/preferences/#packages","title":"Packages","text":"Name dev.atick.storage.preferences.data dev.atick.storage.preferences.data.models dev.atick.storage.preferences.di dev.atick.storage.preferences.utils"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.data</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/#types","title":"Types","text":"Name Summary PreferencesDatastore [androidJvm]interface PreferencesDatastorePreferences datastore interface PreferencesDatastoreImpl [androidJvm]class PreferencesDatastoreImpl@Injectconstructor(datastore: DataStore&lt;UserPreferences&gt;) : PreferencesDatastorePreferences datastore implementation"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.data/PreferencesDatastore</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/#preferencesdatastore","title":"PreferencesDatastore","text":"<p>interface PreferencesDatastore</p> <p>Preferences datastore interface</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/#inheritors","title":"Inheritors","text":"PreferencesDatastoreImpl"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/#functions","title":"Functions","text":"Name Summary getUserId [androidJvm]abstract suspend fun getUserId(): StringGet user id saveUserId [androidJvm]abstract suspend fun saveUserId(userId: String)Save user id"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/get-user-id/","title":"Get user id","text":"<p>//preferences/dev.atick.storage.preferences.data/PreferencesDatastore/getUserId</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/get-user-id/#getuserid","title":"getUserId","text":"<p>[androidJvm]\\ abstract suspend fun getUserId(): String</p> <p>Get user id</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/get-user-id/#return","title":"Return","text":"<p>user id</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/save-user-id/","title":"Save user id","text":"<p>//preferences/dev.atick.storage.preferences.data/PreferencesDatastore/saveUserId</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/save-user-id/#saveuserid","title":"saveUserId","text":"<p>[androidJvm]\\ abstract suspend fun saveUserId(userId: String)</p> <p>Save user id</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore/save-user-id/#parameters","title":"Parameters","text":"<p>androidJvm</p> userId user id"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.data/PreferencesDatastoreImpl</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/#preferencesdatastoreimpl","title":"PreferencesDatastoreImpl","text":"<p>class PreferencesDatastoreImpl@Injectconstructor(datastore: DataStore&lt;UserPreferences&gt;) : PreferencesDatastore</p> <p>Preferences datastore implementation</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/#parameters","title":"Parameters","text":"<p>androidJvm</p> datastore DataStore"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/#constructors","title":"Constructors","text":"PreferencesDatastoreImpl [androidJvm]@Injectconstructor(datastore: DataStore&lt;UserPreferences&gt;)"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/#functions","title":"Functions","text":"Name Summary getUserId [androidJvm]open suspend override fun getUserId(): StringGet user id saveUserId [androidJvm]open suspend override fun saveUserId(userId: String)Save user id"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/-preferences-datastore-impl/","title":"preferences datastore impl","text":"<p>//preferences/dev.atick.storage.preferences.data/PreferencesDatastoreImpl/PreferencesDatastoreImpl</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/-preferences-datastore-impl/#preferencesdatastoreimpl","title":"PreferencesDatastoreImpl","text":"<p>[androidJvm]\\</p> <p>@Inject</p> <p>constructor(datastore: DataStore&lt;UserPreferences&gt;)</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/-preferences-datastore-impl/#parameters","title":"Parameters","text":"<p>androidJvm</p> datastore DataStore"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/get-user-id/","title":"Get user id","text":"<p>//preferences/dev.atick.storage.preferences.data/PreferencesDatastoreImpl/getUserId</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/get-user-id/#getuserid","title":"getUserId","text":"<p>[androidJvm]\\ open suspend override fun getUserId(): String</p> <p>Get user id</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/get-user-id/#return","title":"Return","text":"<p>user id</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/save-user-id/","title":"Save user id","text":"<p>//preferences/dev.atick.storage.preferences.data/PreferencesDatastoreImpl/saveUserId</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/save-user-id/#saveuserid","title":"saveUserId","text":"<p>[androidJvm]\\ open suspend override fun saveUserId(userId: String)</p> <p>Save user id</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data/-preferences-datastore-impl/save-user-id/#parameters","title":"Parameters","text":"<p>androidJvm</p> userId user id"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.data.models</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/#types","title":"Types","text":"Name Summary UserPreferences [androidJvm]@Serializabledata class UserPreferences(val userId: String = \"-1\")User preferences data model"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.data.models/UserPreferences</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/#userpreferences","title":"UserPreferences","text":"<p>@Serializable</p> <p>data class UserPreferences(val userId: String = \"-1\")</p> <p>User preferences data model</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/#parameters","title":"Parameters","text":"<p>androidJvm</p> userId user id"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/#constructors","title":"Constructors","text":"UserPreferences [androidJvm]constructor(userId: String = \"-1\")"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/#properties","title":"Properties","text":"Name Summary userId [androidJvm]val userId: String"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/-user-preferences/","title":"user preferences","text":"<p>//preferences/dev.atick.storage.preferences.data.models/UserPreferences/UserPreferences</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/-user-preferences/#userpreferences","title":"UserPreferences","text":"<p>[androidJvm]\\ constructor(userId: String = \"-1\")</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/-user-preferences/#parameters","title":"Parameters","text":"<p>androidJvm</p> userId user id"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/user-id/","title":"User id","text":"<p>//preferences/dev.atick.storage.preferences.data.models/UserPreferences/userId</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/user-id/#userid","title":"userId","text":"<p>[androidJvm]\\ val userId: String</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.data.models/-user-preferences/user-id/#parameters","title":"Parameters","text":"<p>androidJvm</p> userId user id"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.di</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/#types","title":"Types","text":"Name Summary DatastoreModule [androidJvm]@Moduleobject DatastoreModuleDatastore module PreferencesDatastoreModule [androidJvm]@Moduleabstract class PreferencesDatastoreModulePreferences datastore module"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-datastore-module/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.di/DatastoreModule</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-datastore-module/#datastoremodule","title":"DatastoreModule","text":"<p>[androidJvm]\\ @Module</p> <p>object DatastoreModule</p> <p>Datastore module</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-datastore-module/#functions","title":"Functions","text":"Name Summary providePreferencesDataStore [androidJvm]@Singleton@Providesfun providePreferencesDataStore(appContext: Context): DataStore&lt;UserPreferences&gt;Provide preferences datastore"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-datastore-module/provide-preferences-data-store/","title":"Provide preferences data store","text":"<p>//preferences/dev.atick.storage.preferences.di/DatastoreModule/providePreferencesDataStore</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-datastore-module/provide-preferences-data-store/#providepreferencesdatastore","title":"providePreferencesDataStore","text":"<p>[androidJvm]\\</p> <p>@Singleton</p> <p>@Provides</p> <p>fun providePreferencesDataStore(appContext: Context): DataStore&lt;UserPreferences&gt;</p> <p>Provide preferences datastore</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-datastore-module/provide-preferences-data-store/#return","title":"Return","text":"<p>DataStore</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-datastore-module/provide-preferences-data-store/#parameters","title":"Parameters","text":"<p>androidJvm</p> appContext application context"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.di/PreferencesDatastoreModule</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/#preferencesdatastoremodule","title":"PreferencesDatastoreModule","text":"<p>[androidJvm]\\ @Module</p> <p>abstract class PreferencesDatastoreModule</p> <p>Preferences datastore module</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/#constructors","title":"Constructors","text":"PreferencesDatastoreModule [androidJvm]constructor()"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/#functions","title":"Functions","text":"Name Summary bindUserPreferencesDatastore [androidJvm]@Binds@Singletonabstract fun bindUserPreferencesDatastore(preferencesDatastoreImpl: PreferencesDatastoreImpl): PreferencesDatastoreBind preferences datastore"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/-preferences-datastore-module/","title":"preferences datastore module","text":"<p>//preferences/dev.atick.storage.preferences.di/PreferencesDatastoreModule/PreferencesDatastoreModule</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/-preferences-datastore-module/#preferencesdatastoremodule","title":"PreferencesDatastoreModule","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/bind-user-preferences-datastore/","title":"Bind user preferences datastore","text":"<p>//preferences/dev.atick.storage.preferences.di/PreferencesDatastoreModule/bindUserPreferencesDatastore</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/bind-user-preferences-datastore/#binduserpreferencesdatastore","title":"bindUserPreferencesDatastore","text":"<p>[androidJvm]\\</p> <p>@Binds</p> <p>@Singleton</p> <p>abstract fun bindUserPreferencesDatastore(preferencesDatastoreImpl: PreferencesDatastoreImpl): PreferencesDatastore</p> <p>Bind preferences datastore</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/bind-user-preferences-datastore/#return","title":"Return","text":"<p>PreferencesDatastore</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.di/-preferences-datastore-module/bind-user-preferences-datastore/#parameters","title":"Parameters","text":"<p>androidJvm</p> preferencesDatastoreImpl PreferencesDatastoreImpl"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.utils</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/#types","title":"Types","text":"Name Summary UserPreferencesSerializer [androidJvm]object UserPreferencesSerializer : Serializer&lt;UserPreferences&gt; User preferences serializer"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/","title":"Index","text":"<p>//preferences/dev.atick.storage.preferences.utils/UserPreferencesSerializer</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/#userpreferencesserializer","title":"UserPreferencesSerializer","text":"<p>[androidJvm]\\ object UserPreferencesSerializer : Serializer&lt;UserPreferences&gt; </p> <p>User preferences serializer</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/#properties","title":"Properties","text":"Name Summary defaultValue [androidJvm]open override val defaultValue: UserPreferences"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/#functions","title":"Functions","text":"Name Summary readFrom [androidJvm]open suspend override fun readFrom(input: InputStream): UserPreferencesRead from input stream writeTo [androidJvm]open suspend override fun writeTo(t: UserPreferences, output: OutputStream)Write to output stream"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/default-value/","title":"Default value","text":"<p>//preferences/dev.atick.storage.preferences.utils/UserPreferencesSerializer/defaultValue</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/default-value/#defaultvalue","title":"defaultValue","text":"<p>[androidJvm]\\ open override val defaultValue: UserPreferences</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/read-from/","title":"Read from","text":"<p>//preferences/dev.atick.storage.preferences.utils/UserPreferencesSerializer/readFrom</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/read-from/#readfrom","title":"readFrom","text":"<p>[androidJvm]\\ open suspend override fun readFrom(input: InputStream): UserPreferences</p> <p>Read from input stream</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/read-from/#return","title":"Return","text":"<p>user preferences</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/read-from/#parameters","title":"Parameters","text":"<p>androidJvm</p> input input stream"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/write-to/","title":"Write to","text":"<p>//preferences/dev.atick.storage.preferences.utils/UserPreferencesSerializer/writeTo</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/write-to/#writeto","title":"writeTo","text":"<p>[androidJvm]\\ open suspend override fun writeTo(t: UserPreferences, output: OutputStream)</p> <p>Write to output stream</p>"},{"location":"storage/preferences/preferences/dev.atick.storage.preferences.utils/-user-preferences-serializer/write-to/#parameters","title":"Parameters","text":"<p>androidJvm</p> t user preferences output output stream"},{"location":"storage/room/","title":"Index","text":"<p>//room</p>"},{"location":"storage/room/#room","title":"room","text":""},{"location":"storage/room/#packages","title":"Packages","text":"Name dev.atick.storage.room.data dev.atick.storage.room.data.models dev.atick.storage.room.di"},{"location":"storage/room/room/dev.atick.storage.room.data/","title":"Index","text":"<p>//room/dev.atick.storage.room.data</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"storage/room/room/dev.atick.storage.room.data/#types","title":"Types","text":"Name Summary JetpackDao [androidJvm]interface JetpackDaoData access object for Item entity. JetpackDatabase [androidJvm]abstract class JetpackDatabase : RoomDatabaseRoom database for Jetpack."},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/","title":"Index","text":"<p>//room/dev.atick.storage.room.data/JetpackDao</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/#jetpackdao","title":"JetpackDao","text":"<p>[androidJvm]\\ interface JetpackDao</p> <p>Data access object for Item entity.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/#functions","title":"Functions","text":"Name Summary clear [androidJvm]abstract suspend fun clear()Delete all items. delete [androidJvm]abstract suspend fun delete(item: Item)Delete an item. getAllItems [androidJvm]abstract fun getAllItems(): Flow&lt;List&lt;Item&gt;&gt;Get all items. getItem [androidJvm]abstract suspend fun getItem(id: Long): Item?Delete all items.[androidJvm]abstract suspend fun getItem(name: String): Item?Get an item by name. insert [androidJvm]abstract suspend fun insert(item: Item)Insert an item into the database. If the item already exists, replace it. insertAll [androidJvm]abstract suspend fun insertAll(items: List&lt;Item&gt;)Insert a list of items into the database. If the item already exists, replace it. update [androidJvm]abstract suspend fun update(item: Item)Update an item."},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/clear/","title":"Clear","text":"<p>//room/dev.atick.storage.room.data/JetpackDao/clear</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/clear/#clear","title":"clear","text":"<p>[androidJvm]\\ abstract suspend fun clear()</p> <p>Delete all items.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/delete/","title":"Delete","text":"<p>//room/dev.atick.storage.room.data/JetpackDao/delete</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/delete/#delete","title":"delete","text":"<p>[androidJvm]\\ abstract suspend fun delete(item: Item)</p> <p>Delete an item.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/delete/#parameters","title":"Parameters","text":"<p>androidJvm</p> item The item to be deleted."},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/get-all-items/","title":"Get all items","text":"<p>//room/dev.atick.storage.room.data/JetpackDao/getAllItems</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/get-all-items/#getallitems","title":"getAllItems","text":"<p>[androidJvm]\\ abstract fun getAllItems(): Flow&lt;List&lt;Item&gt;&gt;</p> <p>Get all items.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/get-all-items/#return","title":"Return","text":"<p>A list of all items in the database.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/get-item/","title":"Get item","text":"<p>//room/dev.atick.storage.room.data/JetpackDao/getItem</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/get-item/#getitem","title":"getItem","text":"<p>[androidJvm]\\ abstract suspend fun getItem(id: Long): Item?</p> <p>Delete all items.</p> <p>[androidJvm]\\ abstract suspend fun getItem(name: String): Item?</p> <p>Get an item by name.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/get-item/#return","title":"Return","text":"<p>The item with the given name.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/get-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> name The name of the item."},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/insert-all/","title":"Insert all","text":"<p>//room/dev.atick.storage.room.data/JetpackDao/insertAll</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/insert-all/#insertall","title":"insertAll","text":"<p>[androidJvm]\\ abstract suspend fun insertAll(items: List&lt;Item&gt;)</p> <p>Insert a list of items into the database. If the item already exists, replace it.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/insert-all/#parameters","title":"Parameters","text":"<p>androidJvm</p> items The list of items to be inserted."},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/insert/","title":"Insert","text":"<p>//room/dev.atick.storage.room.data/JetpackDao/insert</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/insert/#insert","title":"insert","text":"<p>[androidJvm]\\ abstract suspend fun insert(item: Item)</p> <p>Insert an item into the database. If the item already exists, replace it.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/insert/#parameters","title":"Parameters","text":"<p>androidJvm</p> item The item to be inserted."},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/update/","title":"Update","text":"<p>//room/dev.atick.storage.room.data/JetpackDao/update</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/update/#update","title":"update","text":"<p>[androidJvm]\\ abstract suspend fun update(item: Item)</p> <p>Update an item.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-dao/update/#parameters","title":"Parameters","text":"<p>androidJvm</p> item The item to be updated."},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/","title":"Index","text":"<p>//room/dev.atick.storage.room.data/JetpackDatabase</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/#jetpackdatabase","title":"JetpackDatabase","text":"<p>[androidJvm]\\ abstract class JetpackDatabase : RoomDatabase</p> <p>Room database for Jetpack.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/#constructors","title":"Constructors","text":"JetpackDatabase [androidJvm]constructor()"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/#properties","title":"Properties","text":"Name Summary backingFieldMap [androidJvm]val backingFieldMap: MutableMap&lt;String, Any&gt; invalidationTracker [androidJvm]open val invalidationTracker: InvalidationTracker isOpen [androidJvm]open val isOpen: Boolean isOpenInternal [androidJvm]val isOpenInternal: Boolean openHelper [androidJvm]open val openHelper: SupportSQLiteOpenHelper queryExecutor [androidJvm]open val queryExecutor: Executor suspendingTransactionId [androidJvm]val suspendingTransactionId: ThreadLocal&lt;Int&gt; transactionExecutor [androidJvm]open val transactionExecutor: Executor"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/#functions","title":"Functions","text":"Name Summary assertNotMainThread [androidJvm]open fun assertNotMainThread() assertNotSuspendingTransaction [androidJvm]open fun assertNotSuspendingTransaction() beginTransaction [androidJvm]open fun ~~beginTransaction~~() clearAllTables [androidJvm]abstract fun clearAllTables() close [androidJvm]open fun close() compileStatement [androidJvm]open fun compileStatement(sql: String): SupportSQLiteStatement endTransaction [androidJvm]open fun ~~endTransaction~~() getAutoMigrations [androidJvm]open fun getAutoMigrations(autoMigrationSpecs: Map&lt;Class&lt;out AutoMigrationSpec&gt;, AutoMigrationSpec&gt;): List&lt;Migration&gt; getJetpackDao [androidJvm]abstract fun getJetpackDao(): JetpackDaoGet the data access object for Item entity. getRequiredAutoMigrationSpecs [androidJvm]open fun getRequiredAutoMigrationSpecs(): Set&lt;Class&lt;out AutoMigrationSpec&gt;&gt; getTypeConverter [androidJvm]open fun &lt;T&gt; getTypeConverter(klass: Class&lt;T&gt;): T? init [androidJvm]open fun init(configuration: DatabaseConfiguration) inTransaction [androidJvm]open fun inTransaction(): Boolean query [androidJvm]open fun query(query: SupportSQLiteQuery, signal: CancellationSignal?): Cursoropen fun query(query: String, args: Array&lt;out Any?&gt;?): Cursor runInTransaction [androidJvm]open fun runInTransaction(body: Runnable)open fun &lt;V&gt; runInTransaction(body: Callable&lt;V&gt;): V setTransactionSuccessful [androidJvm]open fun ~~setTransactionSuccessful~~()"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/-jetpack-database/","title":"jetpack database","text":"<p>//room/dev.atick.storage.room.data/JetpackDatabase/JetpackDatabase</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/-jetpack-database/#jetpackdatabase","title":"JetpackDatabase","text":"<p>[androidJvm]\\ constructor()</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/get-jetpack-dao/","title":"Get jetpack dao","text":"<p>//room/dev.atick.storage.room.data/JetpackDatabase/getJetpackDao</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/get-jetpack-dao/#getjetpackdao","title":"getJetpackDao","text":"<p>[androidJvm]\\ abstract fun getJetpackDao(): JetpackDao</p> <p>Get the data access object for Item entity.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data/-jetpack-database/get-jetpack-dao/#return","title":"Return","text":"<p>The data access object for Item entity.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/","title":"Index","text":"<p>//room/dev.atick.storage.room.data.models</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"storage/room/room/dev.atick.storage.room.data.models/#types","title":"Types","text":"Name Summary Item [androidJvm]data class Item(val id: Long = 0, val name: String)Data class for Item entity."},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/","title":"Index","text":"<p>//room/dev.atick.storage.room.data.models/Item</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/#item","title":"Item","text":"<p>data class Item(val id: Long = 0, val name: String)</p> <p>Data class for Item entity.</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The id of the item. name The name of the item."},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/#constructors","title":"Constructors","text":"Item [androidJvm]constructor(id: Long = 0, name: String)"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/#properties","title":"Properties","text":"Name Summary id [androidJvm]val id: Long = 0 name [androidJvm]val name: String"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/-item/","title":"item","text":"<p>//room/dev.atick.storage.room.data.models/Item/Item</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/-item/#item","title":"Item","text":"<p>[androidJvm]\\ constructor(id: Long = 0, name: String)</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/-item/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The id of the item. name The name of the item."},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/id/","title":"Id","text":"<p>//room/dev.atick.storage.room.data.models/Item/id</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/id/#id","title":"id","text":"<p>[androidJvm]\\ val id: Long = 0</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/id/#parameters","title":"Parameters","text":"<p>androidJvm</p> id The id of the item."},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/name/","title":"Name","text":"<p>//room/dev.atick.storage.room.data.models/Item/name</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/name/#name","title":"name","text":"<p>[androidJvm]\\ val name: String</p>"},{"location":"storage/room/room/dev.atick.storage.room.data.models/-item/name/#parameters","title":"Parameters","text":"<p>androidJvm</p> name The name of the item."},{"location":"storage/room/room/dev.atick.storage.room.di/","title":"Index","text":"<p>//room/dev.atick.storage.room.di</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"storage/room/room/dev.atick.storage.room.di/#types","title":"Types","text":"Name Summary DaoModule [androidJvm]@Module(includes = [DatabaseModule::class])object DaoModuleDagger module for data access object. DatabaseModule [androidJvm]@Moduleobject DatabaseModuleDagger module for database."},{"location":"storage/room/room/dev.atick.storage.room.di/-dao-module/","title":"Index","text":"<p>//room/dev.atick.storage.room.di/DaoModule</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-dao-module/#daomodule","title":"DaoModule","text":"<p>[androidJvm]\\ @Module(includes = [DatabaseModule::class])</p> <p>object DaoModule</p> <p>Dagger module for data access object.</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-dao-module/#functions","title":"Functions","text":"Name Summary provideJetpackDao [androidJvm]@Singleton@Providesfun provideJetpackDao(jetpackDatabase: JetpackDatabase): JetpackDaoGet the data access."},{"location":"storage/room/room/dev.atick.storage.room.di/-dao-module/provide-jetpack-dao/","title":"Provide jetpack dao","text":"<p>//room/dev.atick.storage.room.di/DaoModule/provideJetpackDao</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-dao-module/provide-jetpack-dao/#providejetpackdao","title":"provideJetpackDao","text":"<p>[androidJvm]\\</p> <p>@Singleton</p> <p>@Provides</p> <p>fun provideJetpackDao(jetpackDatabase: JetpackDatabase): JetpackDao</p> <p>Get the data access.</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-dao-module/provide-jetpack-dao/#return","title":"Return","text":"<p>The data access object.</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-dao-module/provide-jetpack-dao/#parameters","title":"Parameters","text":"<p>androidJvm</p> jetpackDatabase The database for Jetpack."},{"location":"storage/room/room/dev.atick.storage.room.di/-database-module/","title":"Index","text":"<p>//room/dev.atick.storage.room.di/DatabaseModule</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-database-module/#databasemodule","title":"DatabaseModule","text":"<p>[androidJvm]\\ @Module</p> <p>object DatabaseModule</p> <p>Dagger module for database.</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-database-module/#functions","title":"Functions","text":"Name Summary provideRoomDatabase [androidJvm]@Singleton@Providesfun provideRoomDatabase(appContext: Context): JetpackDatabaseGet the database for Jetpack."},{"location":"storage/room/room/dev.atick.storage.room.di/-database-module/provide-room-database/","title":"Provide room database","text":"<p>//room/dev.atick.storage.room.di/DatabaseModule/provideRoomDatabase</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-database-module/provide-room-database/#provideroomdatabase","title":"provideRoomDatabase","text":"<p>[androidJvm]\\</p> <p>@Singleton</p> <p>@Provides</p> <p>fun provideRoomDatabase(appContext: Context): JetpackDatabase</p> <p>Get the database for Jetpack.</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-database-module/provide-room-database/#return","title":"Return","text":"<p>The database for Jetpack.</p>"},{"location":"storage/room/room/dev.atick.storage.room.di/-database-module/provide-room-database/#parameters","title":"Parameters","text":"<p>androidJvm</p> appContext The application context."}]}